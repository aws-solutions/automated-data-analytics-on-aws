{
	"info": {
		"_postman_id": "710f4038-4e26-495a-b44e-3f95e4276760",
		"name": "AWS Ada Solution API",
		"description": "AWS Ada Solution description todo.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "administration/start-tear-down",
			"item": [
				{
					"name": "Delete Administration Start Tear Down Destroy Data",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/administration/start-tear-down/destroy-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"administration",
								"start-tear-down",
								"destroy-data"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Delete administration start tear down destroy data"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/administration/start-tear-down/destroy-data",
									"protocol": "https",
									"host": [
										"xheuudtuk3",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"prod",
										"administration",
										"start-tear-down",
										"destroy-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "xheuudtuk3",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "us-west-2",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "prod",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"coreStackId\": \"<string>\",\n  \"dataBucketNames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/administration/start-tear-down/destroy-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"administration",
										"start-tear-down",
										"destroy-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/administration/start-tear-down/destroy-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"administration",
										"start-tear-down",
										"destroy-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Administration Start Tear Down Retain Data",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/administration/start-tear-down/retain-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"administration",
								"start-tear-down",
								"retain-data"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Delete administration start tear down retain data"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/administration/start-tear-down/retain-data",
									"protocol": "https",
									"host": [
										"xheuudtuk3",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"prod",
										"administration",
										"start-tear-down",
										"retain-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "xheuudtuk3",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "us-west-2",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "prod",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"coreStackId\": \"<string>\",\n  \"dataBucketNames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/administration/start-tear-down/retain-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"administration",
										"start-tear-down",
										"retain-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/administration/start-tear-down/retain-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"administration",
										"start-tear-down",
										"retain-data"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "api-access-policy",
			"item": [
				{
					"name": "{api Access Policy Id}",
					"item": [
						{
							"name": "Delete Api Access Policy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-access-policy",
										":apiAccessPolicyId"
									],
									"variable": [
										{
											"key": "apiAccessPolicyId",
											"value": "test_access_policy",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete api access policy"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/api-access-policy/:apiAccessPolicyId",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Api Access Policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-access-policy",
										":apiAccessPolicyId"
									],
									"variable": [
										{
											"key": "apiAccessPolicyId",
											"value": "test_access_policy",
											"description": "(Required) "
										}
									]
								},
								"description": "Get api access policy"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/api-access-policy/:apiAccessPolicyId",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Api Access Policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiAccessPolicyId\": \"test_access_policy\",\n    \"name\": \"test_access_policy\",\n    \"resources\": [\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/*/identity/group\",\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/*/identity/group/*\",\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/*/identity/request\",\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/*/identity/request/*\",\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/GET/identity/user\",\n        \"arn:aws:execute-api:us-west-2:<aws account id>:xheuudtuk3/*/GET/identity/user/*\"\n    ],\n    \"description\": \"test_access_policy\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-access-policy",
										":apiAccessPolicyId"
									],
									"variable": [
										{
											"key": "apiAccessPolicyId",
											"value": "test_access_policy",
											"description": "(Required) "
										}
									]
								},
								"description": "Put api access policy"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/api-access-policy/:apiAccessPolicyId",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAccessPolicyId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api-access-policy/:apiAccessPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api-access-policy",
												":apiAccessPolicyId"
											],
											"variable": [
												{
													"key": "apiAccessPolicyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Api Access Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-access-policy?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-access-policy"
							],
							"query": [
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List api access policies"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/api-access-policy?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"protocol": "https",
									"host": [
										"xheuudtuk3",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"prod",
										"api-access-policy"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "xheuudtuk3",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "us-west-2",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "prod",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"policies\": [\n    {\n      \"apiAccessPolicyId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"apiAccessPolicyId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-access-policy?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-access-policy"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-access-policy?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-access-policy"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Note: these apis are only used during the deployment time, not through application layer"
		},
		{
			"name": "data-product-preview/domain/{domain Id}/data-product/{data Product Id}",
			"item": [
				{
					"name": "Post Data Product Preview Domain Data Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=JSON.parse(responseBody);",
									"if(jsonData && jsonData.previewId)",
									"    pm.environment.set(\"PREVIEW_ID\", jsonData.previewId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"childDataProducts\": [],\n    \"dataProductId\": \"test\",\n    \"dataSets\": {},\n    \"domainId\": \"{{DOMAIN_ID}}\",\n    \"enableAutomaticPii\": true,\n    \"enableAutomaticTransforms\": true,\n    \"name\": \"test\",\n    \"parentDataProducts\": [],\n    \"sourceDetails\": {\n        \"bucket\": \"ada-sample-data\",\n        \"key\": \"covid\"\n    },\n    \"sourceType\": \"S3\",\n    \"tags\": [],\n    \"transforms\": [],\n    \"updateTrigger\": {\n        \"triggerType\": \"ON_DEMAND\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId?sampleSize=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data-product-preview",
								"domain",
								":domainId",
								"data-product",
								":dataProductId"
							],
							"query": [
								{
									"key": "sampleSize",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "domainId",
									"value": "{{DOMAIN_ID}}",
									"description": "(Required) "
								},
								{
									"key": "dataProductId",
									"value": "{{DATAPRODUCT_ID}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Post data product preview domain data product"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceType\": \"<string>\",\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"labore5_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mollit_85\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"doc7\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"esse_38\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ut_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/data-product-preview/domain/:domainId/data-product/:dataProductId?sampleSize=<integer>",
									"protocol": "https",
									"host": [
										"xheuudtuk3",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"prod",
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "sampleSize",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "xheuudtuk3",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "us-west-2",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "prod",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previewId\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceType\": \"<string>\",\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"labore5_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mollit_85\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"doc7\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"esse_38\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ut_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId?sampleSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "sampleSize",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceType\": \"<string>\",\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"labore5_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"mollit_85\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"doc7\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"esse_38\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ut_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId?sampleSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "sampleSize",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Data Product Preview Domain Data Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId/:previewId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data-product-preview",
								"domain",
								":domainId",
								"data-product",
								":dataProductId",
								":previewId"
							],
							"variable": [
								{
									"key": "domainId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "previewId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Get data product preview domain data product"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/data-product-preview/domain/:domainId/data-product/:dataProductId/:previewId",
									"protocol": "https",
									"host": [
										"xheuudtuk3",
										"execute-api",
										"us-west-2",
										"amazonaws",
										"com"
									],
									"path": [
										"prod",
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId",
										":previewId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "previewId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "xheuudtuk3",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "us-west-2",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "prod",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"previewId\": \"<string>\",\n  \"status\": \"<string>\",\n  \"durationMilliseconds\": \"<number>\",\n  \"error\": {\n    \"message\": \"<string>\",\n    \"cause\": \"<string>\",\n    \"details\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"initialDataSets\": {\n    \"tempor3\": {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"schema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classification\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"s3Path\": \"<string>\",\n      \"s3SamplePath\": \"<string>\"\n    }\n  },\n  \"transformedDataSets\": {\n    \"enim_5cf\": {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"schema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classification\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"s3Path\": \"<string>\",\n      \"s3SamplePath\": \"<string>\"\n    },\n    \"nisi_742\": {\n      \"data\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"schema\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classification\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"s3Path\": \"<string>\",\n      \"s3SamplePath\": \"<string>\"\n    }\n  },\n  \"transformsApplied\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId/:previewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId",
										":previewId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "previewId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId/:previewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId",
										":previewId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "previewId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data-product-preview/domain/:domainId/data-product/:dataProductId/:previewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product-preview",
										"domain",
										":domainId",
										"data-product",
										":dataProductId",
										":previewId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "previewId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "data-product",
			"item": [
				{
					"name": "domain",
					"item": [
						{
							"name": "{domain Id}",
							"item": [
								{
									"name": "data-product",
									"item": [
										{
											"name": "{data Product Id}",
											"item": [
												{
													"name": "file/upload/{file Name}",
													"item": [
														{
															"name": "Get Data Product Domain Data Product File Upload",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=text/csv&uploadId=ZjRaEcfDUYksqc3j7qWh2ua6ah7huPmS04fQv8BG2dnhyIcWF8fMNmTT6iOn3DHyZNl0uGUBxK6iJAWFuXNZu9cthMIZ42M0KtBK5O4o83qXkYVi0qoMyZfOm_2RDtf0fejRpz_2ZhiwWBm4FQVQFkrr4REVkPlC4pKc9GLqMcNakgfD3C2JFX3B.6JJez9C&partNumber=1",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"file",
																		"upload",
																		":fileName"
																	],
																	"query": [
																		{
																			"key": "contentType",
																			"value": "text/csv",
																			"description": "(Required) "
																		},
																		{
																			"key": "uploadId",
																			"value": "ZjRaEcfDUYksqc3j7qWh2ua6ah7huPmS04fQv8BG2dnhyIcWF8fMNmTT6iOn3DHyZNl0uGUBxK6iJAWFuXNZu9cthMIZ42M0KtBK5O4o83qXkYVi0qoMyZfOm_2RDtf0fejRpz_2ZhiwWBm4FQVQFkrr4REVkPlC4pKc9GLqMcNakgfD3C2JFX3B.6JJez9C"
																		},
																		{
																			"key": "partNumber",
																			"value": "1"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "{{DOMAIN_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "{{DATAPRODUCT_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "fileName",
																			"value": "{{UPLOAD_FILE_NAME}}",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get data product domain data product file upload"
															},
															"response": [
																{
																	"name": "200 response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>&uploadId=<string>&partNumber=<number>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				},
																				{
																					"key": "partNumber",
																					"value": "<number>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"bucket\": \"<string>\",\n  \"key\": \"<string>\",\n  \"signedUrl\": \"<string>\"\n}"
																},
																{
																	"name": "400 response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>&uploadId=<string>&partNumber=<number>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				},
																				{
																					"key": "partNumber",
																					"value": "<number>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "403 response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>&uploadId=<string>&partNumber=<number>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				},
																				{
																					"key": "partNumber",
																					"value": "<number>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "404 response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>&uploadId=<string>&partNumber=<number>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				},
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				},
																				{
																					"key": "partNumber",
																					"value": "<number>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Post Data Product Domain Data Product File Upload",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json",
																		"disabled": true
																	},
																	{
																		"key": "content-length",
																		"value": "365",
																		"type": "text",
																		"disabled": true
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=text/csv",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"file",
																		"upload",
																		":fileName"
																	],
																	"query": [
																		{
																			"key": "contentType",
																			"value": "text/csv",
																			"description": "(Required) "
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "{{DOMAIN_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "{{DATAPRODUCT_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "fileName",
																			"value": "{{UPLOAD_FILE_NAME}}",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Post data product domain data product file upload"
															},
															"response": [
																{
																	"name": "200 response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"bucket\": \"<string>\",\n  \"key\": \"<string>\",\n  \"uploadId\": \"<string>\"\n}"
																},
																{
																	"name": "400 response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "403 response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "404 response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?contentType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "contentType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Put Data Product Domain Data Product File Upload",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Content-Length",
																		"value": "34182259",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"parts\":[\n        {\n            \"etag\":\"\\\"1ac0077184148b7afbbd620c3665c954\\\"\",\n            \"partNumber\":1\n        },\n        {\n            \"etag\":\"\\\"e86cd2eb8a1e6c9ed7eb5797d8bb8eb5\\\"\",\n            \"partNumber\":2\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?uploadId=ThPoGf_zH2.RCjGL7fyBqLAQhzupP_1czt_MbRHy_QjwnsxdlC61jEQAzkjp_tvG1hhN_6gXv1rnTySgmv.wzrn8Vaz6wXBnx9V.fnspmTdnOxfxZ8EUzGM5LwX3jTUxuHEaeFkZDCoz1ML1SVd2X3lNL1AjKmgmzHXw_RS1_y26xfV5fLRTN0Sz3p4KXkW1",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"file",
																		"upload",
																		":fileName"
																	],
																	"query": [
																		{
																			"key": "uploadId",
																			"value": "ThPoGf_zH2.RCjGL7fyBqLAQhzupP_1czt_MbRHy_QjwnsxdlC61jEQAzkjp_tvG1hhN_6gXv1rnTySgmv.wzrn8Vaz6wXBnx9V.fnspmTdnOxfxZ8EUzGM5LwX3jTUxuHEaeFkZDCoz1ML1SVd2X3lNL1AjKmgmzHXw_RS1_y26xfV5fLRTN0Sz3p4KXkW1"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "{{DOMAIN_ID}}"
																		},
																		{
																			"key": "dataProductId",
																			"value": "{{DATAPRODUCT_ID}}"
																		},
																		{
																			"key": "fileName",
																			"value": "{{UPLOAD_FILE_NAME}}"
																		}
																	]
																},
																"description": "Put data product domain data product file upload"
															},
															"response": [
																{
																	"name": "200 response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"parts\": [\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    },\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?uploadId=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"bucket\": \"<string>\",\n  \"key\": \"<string>\"\n}"
																},
																{
																	"name": "400 response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"parts\": [\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    },\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?uploadId=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "403 response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"parts\": [\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    },\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?uploadId=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																},
																{
																	"name": "404 response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"parts\": [\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    },\n    {\n      \"etag\": \"<string>\",\n      \"partNumber\": \"<number>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/file/upload/:fileName?uploadId=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"data-product",
																				"domain",
																				":domainId",
																				"data-product",
																				":dataProductId",
																				"file",
																				"upload",
																				":fileName"
																			],
																			"query": [
																				{
																					"key": "uploadId",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "domainId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "dataProductId",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "fileName",
																					"value": "<string>",
																					"description": "(Required) "
																				},
																				{
																					"key": "apigId",
																					"value": "{{apigId}}",
																					"description": "AWS API Gateway ID of deployed RestApi"
																				},
																				{
																					"key": "region",
																					"value": "{{region}}",
																					"description": "AWS region the api is deployed in"
																				},
																				{
																					"key": "stage",
																					"value": "{{stage}}",
																					"description": "AWS API Gateway Stage"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete Data Product Domain Data Product",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product",
																":dataProductId"
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "{{DOMAIN_ID}}",
																	"description": "(Required) "
																},
																{
																	"key": "dataProductId",
																	"value": "{{DATAPRODUCT_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete data product domain data product"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"nostrud_083\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"cloudFormationStackId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"sourceDataSets\": {\n    \"elit_c\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"adipisicingac\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get Data Product Domain Data Product",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product",
																":dataProductId"
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "{{DOMAIN_ID}}",
																	"description": "(Required) "
																},
																{
																	"key": "dataProductId",
																	"value": "{{DATAPRODUCT_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get data product domain data product"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"sunt7\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"voluptate_9\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"in_f0b\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipsum_e\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"velitc_\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"cloudFormationStackId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"sourceDataSets\": {\n    \"commodo_7_1\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Post Data Product Domain Data Product",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"{{DATAPRODUCT_ID}}\",\n  \"sourceType\": \"S3\",\n  \"tags\": [\n    {\n      \"key\": \"marketing\",\n      \"value\":\"marketing\"\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": \"global\",\n      \"scriptId\": \"ada_json_relationalise\"\n    },\n    {\n      \"namespace\": \"global\",\n      \"scriptId\": \"ada_apply_mapping\",\n      \"inputArgs\": {\n            \"drop_fields\": false,\n            \"mappings\": [\n                {\n                    \"oldName\": \"date\",\n                    \"newName\": \"dates\",\n                    \"newType\": \"date\"\n                }\n            ]\n        }\n      }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"ON_DEMAND\"\n  },\n  \"childDataProducts\": [],\n  \"description\": \"online sales\",\n  \"domainId\": \"{{DOMAIN_ID}}\",\n  \"dataProductId\": \"{{DATAPRODUCT_ID}}\",\n  \"enableAutomaticPii\": true,\n  \"enableAutomaticTransforms\": true,\n  \"parentDataProducts\": [],\n  \"sourceDetails\": {\n      \"bucket\": \"ada-sample-data\",\n      \"key\": \"covid\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product",
																":dataProductId"
															],
															"query": [
																{
																	"key": "initialFullAccessGroups",
																	"value": "<string>",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "{{DOMAIN_ID}}",
																	"description": "(Required) "
																},
																{
																	"key": "dataProductId",
																	"value": "{{DATAPRODUCT_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Post data product domain data product"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"magnaad5\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"culpa_42\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "{{DOMAIN_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "{{DATAPRODUCT_ID}}",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Put Data Product Domain Data Product",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"dataStatus\": \"READY\",\n    \"infrastructureStatusDetails\": \"Infrastructure created successfully\",\n    \"updateTrigger\": {\n        \"triggerType\": \"ON_DEMAND\"\n    },\n    \"createdBy\": \"root_admin\",\n    \"name\": \"sales\",\n    \"cloudFormationStackId\": \"arn:aws:cloudformation:us-west-2:<aws account id>:stack/ada-market7485-sales3320-e57c/f7faec60-bfb7-11ec-baa0-0666337278e5\",\n    \"latestDataUpdateTimestamp\": \"2022-04-19T08:28:03.455Z\",\n    \"sourceType\": \"S3\",\n    \"domainId\": \"marketing\",\n    \"infrastructureStatus\": \"READY\",\n    \"enableAutomaticPii\": true,\n    \"createdTimestamp\": \"2022-04-19T08:08:50.283Z\",\n    \"tags\": [],\n    \"childDataProducts\": [],\n    \"sourceDetails\": {\n        \"bucket\": \"ada-sample-data\",\n        \"key\": \"covid\"\n    },\n    \"sourceDataStatus\": \"READY\",\n    \"parentDataProducts\": [],\n    \"dataImportStateMachineArn\": \"arn:aws:states:us-west-2:<aws account id>:stateMachine:DataProductmarket7485sales33205076F9FA4963-HUvalOFXa4Ft\",\n    \"dataProductId\": \"sales\",\n    \"sourceDataSets\": {\n        \"ada_default_dataset\": {\n            \"columnMetadata\": {\n                \"date\": {\n                    \"dataType\": \"string\",\n                    \"sortOrder\": 0\n                },\n                \"new_persons_fully_vaccinated\": {\n                    \"dataType\": \"double\",\n                    \"sortOrder\": 6\n                },\n                \"country_code\": {\n                    \"dataType\": \"string\",\n                    \"sortOrder\": 1\n                },\n                \"new_deceased\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 3\n                },\n                \"new_confirmed\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 2\n                },\n                \"cumulative_deceased\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 5\n                },\n                \"cumulative_confirmed\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 4\n                }\n            },\n            \"identifiers\": {\n                \"catalog\": \"AwsDataCatalog\",\n                \"database\": \"data_product_ada3306\",\n                \"table\": \"dp_source_marketing_sales_ada_default_dataset_e037154f_4666_485b_96ac_4b0565881c0c\"\n            }\n        }\n    },\n    \"enableAutomaticTransforms\": true,\n    \"dataSets\": {\n        \"ada_default_dataset\": {\n            \"columnMetadata\": {\n                \"new_persons_fully_vaccinated\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 6,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"country_code\": {\n                    \"dataType\": \"string\",\n                    \"sortOrder\": 1,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"new_deceased\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 3,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"new_confirmed\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 2,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"cumulative_deceased\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 5,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"dates\": {\n                    \"dataType\": \"date\",\n                    \"sortOrder\": 0,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"partition_0\": {\n                    \"dataType\": \"string\",\n                    \"sortOrder\": 7,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"partition_1\": {\n                    \"dataType\": \"string\",\n                    \"sortOrder\": 8,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                },\n                \"cumulative_confirmed\": {\n                    \"dataType\": \"bigint\",\n                    \"sortOrder\": 4,\n                    \"lensToApply\": \"clear\",\n                    \"sqlClauses\": []\n                }\n            },\n            \"identifiers\": {\n                \"catalog\": \"AwsDataCatalog\",\n                \"database\": \"data_product_ada3306\",\n                \"table\": \"market7485sales33205076-transform-2-ada_default_dataset\"\n            }\n        }\n    },\n    \"transforms\": [\n        {\n            \"namespace\": \"global\",\n            \"scriptId\": \"ada_json_relationalise\"\n        },\n        {\n            \"namespace\": \"global\",\n            \"scriptId\": \"ada_apply_mapping\",\n            \"inputArgs\": {\n                \"drop_fields\": false,\n                \"mappings\": [\n                    {\n                        \"newType\": \"date\",\n                        \"oldName\": \"date\",\n                        \"newName\": \"dates\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"description\": \"online sales\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=admin",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product",
																":dataProductId"
															],
															"query": [
																{
																	"key": "initialFullAccessGroups",
																	"value": "admin"
																}
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "{{DOMAIN_ID}}",
																	"description": "(Required) "
																},
																{
																	"key": "dataProductId",
																	"value": "{{DATAPRODUCT_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Put data product domain data product"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"nostrud_083\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"cloudFormationStackId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"sourceDataSets\": {\n    \"elit_c\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"adipisicingac\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"cloudFormationStackId\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"qui_d4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceDataSets\": {\n    \"ex_4\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"veniam_6\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedTimestamp\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId?initialFullAccessGroups=<string>&initialFullAccessGroups=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId"
																	],
																	"query": [
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		},
																		{
																			"key": "initialFullAccessGroups",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Put Data Product Domain Data Product Start Data Update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/start-data-update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product",
																":dataProductId",
																"start-data-update"
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "{{DOMAIN_ID}}",
																	"description": "(Required) "
																},
																{
																	"key": "dataProductId",
																	"value": "{{DATAPRODUCT_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Put data product domain data product start data update"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/start-data-update",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"start-data-update"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"childDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"dataProductId\": \"<string>\",\n  \"dataSets\": {\n    \"nostrud_083\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"parentDataProducts\": [\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"dataProductId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"transforms\": [\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"namespace\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"scriptId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"inlineScriptContent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updateTrigger\": {\n    \"triggerType\": \"<string>\",\n    \"scheduleRate\": \"<string>\",\n    \"updatePolicy\": \"<string>\"\n  },\n  \"cloudFormationStackId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"dataImportStateMachineArn\": \"<string>\",\n  \"dataStatus\": \"<string>\",\n  \"dataStatusDetails\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enableAutomaticPii\": \"<boolean>\",\n  \"enableAutomaticTransforms\": \"<boolean>\",\n  \"infrastructureStatus\": \"<string>\",\n  \"infrastructureStatusDetails\": \"<string>\",\n  \"latestDataUpdateTimestamp\": \"<string>\",\n  \"sourceDataSets\": {\n    \"elit_c\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"adipisicingac\": {\n      \"columnMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifiers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"sourceDataStatus\": \"<string>\",\n  \"sourceDataStatusDetails\": \"<string>\",\n  \"sourceDetails\": {\n    \"bucket\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"key\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/start-data-update",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"start-data-update"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/start-data-update",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"start-data-update"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product/:dataProductId/start-data-update",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"data-product",
																		"domain",
																		":domainId",
																		"data-product",
																		":dataProductId",
																		"start-data-update"
																	],
																	"variable": [
																		{
																			"key": "domainId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "dataProductId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Data Product Domain Data Products",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer eyJraWQiOiJBM1wveWtZWVwvTTZzZG5oc2xcL3NWbUVQTkgyVFhqQk5GbUhTUnlhWjBmRlJBPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI2MWIxN2ZkMy0wZTg3LTRiOTgtOWY1Ny0xMTYxYjNlZmZiZTYiLCJjb2duaXRvOmdyb3VwcyI6WyJhZG1pbiJdLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtd2VzdC0yLmFtYXpvbmF3cy5jb21cL3VzLXdlc3QtMl9qU295QWJVb24iLCJ2ZXJzaW9uIjoyLCJjbGllbnRfaWQiOiI3djU5dmI3bTYycThhYXI3b2Y5Mm0xOXZicyIsIm9yaWdpbl9qdGkiOiJkZTE3YmFjZS1lOWQ2LTRkMzctOWM4Yy1kYmVhZDlkM2YyOWYiLCJldmVudF9pZCI6IjA0YmJkMjg3LWFkNDktNDBkOC04ZWJmLTYyZTU4YmQxZjgzYiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4gcGhvbmUgb3BlbmlkIHByb2ZpbGUgZW1haWwiLCJhdXRoX3RpbWUiOjE2NTAzMzA1NjIsImV4cCI6MTY1MDMzNDE2NiwiaWF0IjoxNjUwMzMwNTY2LCJqdGkiOiI4YWI3YWJiMS1mZmZmLTRhNDEtOTIwMS05ZDM5ODFhOTIxYzciLCJ1c2VybmFtZSI6ImFkYS1zbG4tZGV2K2FwcHNlY0BhbWF6b24uY29tIn0.bkosgWrV25Qe7e4BedBlPtrx460YnGIB_16tphFDTUDUL6OGkjNvTf28KXIP1FWxPC7rZIr5RmxGV9z71zxJD0Z92aMrorF5s_M9ydKzk5hVptiA0hr_5s-PLXiD2yj-PbgwPzlrY2woa4jvHFw916qvOKqXV5ljQDsxXRz6BuEGemQ1bpfOgJlRuXnwcfc_c0KYZeVsxeqZgkD85PimzZvXaQrQM27Kpl38PWzys_M6j0n85KOG8zWZYRe67Ho0nxlBmStpbVcd594N7IBB15QMFnpSCssnUsiS7poJGgMHHEmcG2B6FJ0ylrm-MsxizKzI_WwBKu2GFTZrfKQ7VQ\ncache-control: no-cache",
														"type": "text",
														"disabled": true
													},
													{
														"key": "cache-control",
														"value": "no-cache"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId",
														"data-product"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "{{DOMAIN_ID}}"
														}
													]
												},
												"description": "List data product domain data products"
											},
											"response": [
												{
													"name": "200 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dataProducts\": [\n    {\n      \"childDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataProductId\": \"<string>\",\n      \"dataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"parentDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transforms\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTrigger\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloudFormationStackId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"dataImportStateMachineArn\": \"<string>\",\n      \"dataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataStatusDetails\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enableAutomaticPii\": \"<boolean>\",\n      \"enableAutomaticTransforms\": \"<boolean>\",\n      \"infrastructureStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"infrastructureStatusDetails\": \"<string>\",\n      \"latestDataUpdateTimestamp\": \"<string>\",\n      \"sourceDataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatusDetails\": \"<string>\",\n      \"sourceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"childDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataProductId\": \"<string>\",\n      \"dataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"parentDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transforms\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTrigger\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloudFormationStackId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"dataImportStateMachineArn\": \"<string>\",\n      \"dataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataStatusDetails\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enableAutomaticPii\": \"<boolean>\",\n      \"enableAutomaticTransforms\": \"<boolean>\",\n      \"infrastructureStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"infrastructureStatusDetails\": \"<string>\",\n      \"latestDataUpdateTimestamp\": \"<string>\",\n      \"sourceDataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatusDetails\": \"<string>\",\n      \"sourceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
												},
												{
													"name": "400 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "404 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/data-product/domain/:domainId/data-product?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-product",
																"domain",
																":domainId",
																"data-product"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "domainId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Data Product Domain",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data-product/domain/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"domain",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete data product domain"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Data Product Domain",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data-product/domain/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"domain",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get data product domain"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Data Product Domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(pm.environment.get(\"name\"))"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{DOMAIN_ID}}\",\n  \"description\": \"domaindescriptions\",\n  \"domainId\": \"{{DOMAIN_ID}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/domain/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"domain",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put data product domain"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"domainId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/domain/:domainId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"domain",
														":domainId"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Data Product Domains",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data-product/domain?pageSize=10&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product",
										"domain"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "List data product domains"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data-product/domain?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"domain"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"domains\": [\n    {\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data-product/domain?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"domain"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "scripts",
					"item": [
						{
							"name": "namespace/{namespace}/script/{script Id}",
							"item": [
								{
									"name": "Delete Data Product Scripts Namespace Script",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"namespace",
												":namespace",
												"script",
												":scriptId"
											],
											"variable": [
												{
													"key": "namespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "scriptId",
													"value": "{{SCRIPT_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete data product scripts namespace script"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"source\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Data Product Scripts Namespace Script",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"namespace",
												":namespace",
												"script",
												":scriptId"
											],
											"variable": [
												{
													"key": "namespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "scriptId",
													"value": "{{SCRIPT_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get data product scripts namespace script"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"source\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Data Product Scripts Namespace Script",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{SCRIPT_ID}}\",\n  \"source\": \"def apply_transform(input_frame, input_args, glue_context, **kwargs):\\n  data = input_frame.drop_fields(paths=input_args.get('path'))\\n  return [data]\",\n  \"description\": \"mytransformation\",\n  \"namespace\": \"{{DOMAIN_ID}}\",\n  \"scriptId\": \"{{SCRIPT_ID}}\",\n  \"versionId\": \"1.0\"\n//   ,\"updatedTimestamp\": \"2022-04-20T06:06:54.053Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"namespace",
												":namespace",
												"script",
												":scriptId"
											],
											"variable": [
												{
													"key": "namespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "scriptId",
													"value": "{{SCRIPT_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put data product scripts namespace script"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"source\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"source\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"source\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"source\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "500 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"source\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"scriptId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"versionId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/data-product/scripts/namespace/:namespace/script/:scriptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-product",
														"scripts",
														"namespace",
														":namespace",
														"script",
														":scriptId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "scriptId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Data Product Scripts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/data-product/scripts?pageSize=1&limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product",
										"scripts"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List data product scripts"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"scripts\": [\n    {\n      \"name\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"scriptId\": \"<string>\",\n      \"description\": \"<string>\",\n      \"source\": \"<string>\",\n      \"versionId\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"scriptId\": \"<string>\",\n      \"description\": \"<string>\",\n      \"source\": \"<string>\",\n      \"versionId\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Post Data Product Scripts Validate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scriptSource\": \"import os; \\nos.system(input('what command do you want to execute? > '));\\ndef apply_transform(input_frame, input_args, glue_context, **kwargs):\\n  data = input_frame.drop_fields(paths=input_args.get('path'))\\n  return [data]\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data-product/scripts/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data-product",
										"scripts",
										"validate"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Post data product scripts validate"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scriptSource\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"validate"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"report\": {\n    \"errors\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"generatedAt\": \"<string>\",\n    \"metrics\": {\n      \"confidence\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"loc\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nosec\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"severity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"skippedTests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"passed\": \"<boolean>\",\n    \"results\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"scriptSource\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scriptSource\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"validate"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scriptSource\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"validate"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "500 response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scriptSource\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/data-product/scripts/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-product",
												"scripts",
												"validate"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "governance/policy",
			"item": [
				{
					"name": "attribute-values",
					"item": [
						{
							"name": "{ontology Namespace}/{attribute Id}/group/{group}",
							"item": [
								{
									"name": "Delete Governance Policy Attribute Values Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										},
										"description": "Delete governance policy attribute values group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"sqlClause\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Governance Policy Attribute Values Group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "{{GOVERNANCE_ATTRIBUTE_ID}}",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get governance policy attribute values group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"sqlClause\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Governance Policy Attribute Values Group",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sqlClause\": \"<string>\",\n  \"description\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										},
										"description": "Put governance policy attribute values group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sqlClause\": \"<string>\",\n  \"description\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"sqlClause\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sqlClause\": \"<string>\",\n  \"description\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sqlClause\": \"<string>\",\n  \"description\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sqlClause\": \"<string>\",\n  \"description\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attribute-values/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attribute-values",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Governance Policy Attribute Values",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/attribute-values?namespaceAndAttributeIds={{DOMAIN_ID}}.{{ONTOLOGY_ID}}&namespaceAndAttributeIds={{DOMAIN_ID}}.{{ONTOLOGY_ID}}&group={{ONTOLOGY_ATTRIBUTE_GROUP}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"attribute-values"
									],
									"query": [
										{
											"key": "namespaceAndAttributeIds",
											"value": "{{DOMAIN_ID}}.{{ONTOLOGY_ID}}",
											"description": "(Required) "
										},
										{
											"key": "namespaceAndAttributeIds",
											"value": "{{DOMAIN_ID}}.{{ONTOLOGY_ID}}",
											"description": "(Required) "
										},
										{
											"key": "group",
											"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Get governance policy attribute values"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeIdToSqlClause\": {\n    \"dolore_a\": \"<string>\",\n    \"laborum6\": \"<string>\"\n  }\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Governance Policy Attribute Values",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"{{ONTOLOGY_ATTRIBUTE_GROUP}}\",\n      \"namespaceAndAttributeId\": \"{{DOMAIN_ID}}.{{ONTOLOGY_ID}}\",\n      \"sqlClause\": \"new_persons_fully_vaccinated > 0\",\n      \"description\": \"apply ontology to rows where new_persons_fully_vaccinated is greater than 0\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/governance/policy/attribute-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"attribute-values"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Put governance policy attribute values"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\",\n      \"sqlClause\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attribute-values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attribute-values"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "attributes",
					"item": [
						{
							"name": "{ontology Namespace}/{attribute Id}/group/{group}",
							"item": [
								{
									"name": "Delete Governance Policy Attributes Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "{{ONTOLOGY_ID}}",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete governance policy attributes group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"lensId\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Governance Policy Attributes Group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "{{ONTOLOGY_ID}}",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get governance policy attributes group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"protocol": "https",
													"host": [
														"xheuudtuk3",
														"execute-api",
														"us-west-2",
														"amazonaws",
														"com"
													],
													"path": [
														"prod",
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "xheuudtuk3",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "us-west-2",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "prod",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"lensId\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Governance Policy Attributes Group",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// this script is used to retrieve updated timestamp from the previous update before doing an update again",
													"//",
													"let baseUrl = pm.environment.get('baseUrl');",
													"let ontologyNamespace =  pm.environment.get('DOMAIN_ID');",
													"let attributeId =  pm.environment.get('ONTOLOGY_ID');",
													"let group =  pm.environment.get('ONTOLOGY_ATTRIBUTE_GROUP');",
													"let getUrl = `${baseUrl}/governance/policy/attributes/${ontologyNamespace}/${attributeId}/group/${group}`;",
													"let authToken = pm.environment.get('ACCESS_TOKEN');",
													"",
													"const getRequest = {",
													"  url: `${getUrl}`,",
													"  method: 'GET',",
													"  header: {",
													"    'Content-Type': 'application/json',",
													"    'Authorization': `Bearer ${authToken}`",
													"  }",
													"};",
													"pm.sendRequest(getRequest, (error, response) => {",
													"  if (!error) {",
													"      const res = response.json();",
													"      console.log(res.updatedTimestamp)",
													"      pm.environment.set('UPDATED_TIMESTAMP', res.updatedTimestamp)",
													"  }",
													"  else{",
													"      console.log('error', error)",
													"  }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"lensId\": \"{{LENS_ID}}\",\n  \"group\": \"{{ONTOLOGY_ATTRIBUTE_GROUP}}\",\n  \"namespaceAndAttributeId\": \"{{DOMAIN_ID}}.{{ONTOLOGY_ID}}\"\n  ,\"updatedTimestamp\":  \"{{UPDATED_TIMESTAMP}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes",
												":ontologyNamespace",
												":attributeId",
												"group",
												":group"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												},
												{
													"key": "attributeId",
													"value": "{{ONTOLOGY_ID}}",
													"description": "(Required) "
												},
												{
													"key": "group",
													"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put governance policy attributes group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lensId\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"protocol": "https",
													"host": [
														"xheuudtuk3",
														"execute-api",
														"us-west-2",
														"amazonaws",
														"com"
													],
													"path": [
														"prod",
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "xheuudtuk3",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "us-west-2",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "prod",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": \"<string>\",\n  \"lensId\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lensId\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lensId\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lensId\": \"<string>\",\n  \"group\": \"<string>\",\n  \"namespaceAndAttributeId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/governance/policy/attributes/:ontologyNamespace/:attributeId/group/:group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"governance",
														"policy",
														"attributes",
														":ontologyNamespace",
														":attributeId",
														"group",
														":group"
													],
													"variable": [
														{
															"key": "ontologyNamespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "attributeId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete Governance Policy Attributes",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"{{ONTOLOGY_ATTRIBUTE_GROUP}}\",\n      \"namespaceAndAttributeId\": \"{{DOMAIN_ID}}.{{ONTOLOGY_ID}}\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/governance/policy/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Delete governance policy attributes"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/attributes",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Governance Policy Attributes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/attributes?namespaceAndAttributeIds={{DOMAIN_ID}}.{{ONTOLOGY_ID}}&namespaceAndAttributeIds={{DOMAIN_ID}}.{{ONTOLOGY_ID}}&group={{ONTOLOGY_ATTRIBUTE_GROUP}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"attributes"
									],
									"query": [
										{
											"key": "namespaceAndAttributeIds",
											"value": "{{DOMAIN_ID}}.{{ONTOLOGY_ID}}",
											"description": "(Required) "
										},
										{
											"key": "namespaceAndAttributeIds",
											"value": "{{DOMAIN_ID}}.{{ONTOLOGY_ID}}",
											"description": "(Required) "
										},
										{
											"key": "group",
											"value": "{{ONTOLOGY_ATTRIBUTE_GROUP}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Get governance policy attributes"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/attributes?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"governance",
												"policy",
												"attributes"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeIdToLensId\": {\n    \"voluptate0\": \"<string>\",\n    \"dolorea8\": \"<string>\"\n  }\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes?namespaceAndAttributeIds=<string>&namespaceAndAttributeIds=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"query": [
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "namespaceAndAttributeIds",
													"value": "<string>"
												},
												{
													"key": "group",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Governance Policy Attributes",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"{{ONTOLOGY_ATTRIBUTE_GROUP}}\",\n      \"lensId\": \"{{LENS_ID}}\",\n      \"namespaceAndAttributeId\": \"{{DOMAIN_ID}}.{{ONTOLOGY_ID}}\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/governance/policy/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Put governance policy attributes"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/attributes",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policies\": [\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    },\n    {\n      \"group\": \"<string>\",\n      \"lensId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"namespaceAndAttributeId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"attributes"
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "default-lens/domain/{domain Id}/data-product/{data Product Id}",
					"item": [
						{
							"name": "Delete Governance Policy Default Lens Domain Data Product",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"default-lens",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete governance policy default lens domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"minima0\": \"<string>\",\n    \"qui__6a\": \"<string>\"\n  },\n  \"domainId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Governance Policy Default Lens Domain Data Product",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"default-lens",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get governance policy default lens domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://xheuudtuk3.execute-api.us-west-2.amazonaws.com/prod/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"protocol": "https",
											"host": [
												"xheuudtuk3",
												"execute-api",
												"us-west-2",
												"amazonaws",
												"com"
											],
											"path": [
												"prod",
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "xheuudtuk3",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "us-west-2",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "prod",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"minima0\": \"<string>\",\n    \"qui__6a\": \"<string>\"\n  },\n  \"domainId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Governance Policy Default Lens Domain Data Product",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"defaultLensId\": \"{{LENS_ID}}\",\n  \"defaultLensOverrides\": {\n    \"{{DOMAIN_ID}}\": \"{{LENS_ID}}\"\n  },\n  \"dataProductId\": \"{{DATAPRODUCT_ID}}\",\n  \"domainId\": \"{{DOMAIN_ID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"default-lens",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Put governance policy default lens domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"dolorc8a\": \"<string>\"\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"minima0\": \"<string>\",\n    \"qui__6a\": \"<string>\"\n  },\n  \"domainId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"dolorc8a\": \"<string>\"\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"dolorc8a\": \"<string>\"\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"defaultLensId\": \"<string>\",\n  \"defaultLensOverrides\": {\n    \"dolorc8a\": \"<string>\"\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/default-lens/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"default-lens",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					],
					"description": "NOTE: This api is no longer used by the application"
				},
				{
					"name": "domain/{domain Id}/data-product/{data Product Id}",
					"item": [
						{
							"name": "Delete Governance Policy Domain Data Product",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete governance policy domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"permissions\": {\n    \"pariatur_06\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Governance Policy Domain Data Product",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Get governance policy domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"permissions\": {\n    \"pariatur_06\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Governance Policy Domain Data Product",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": {\n        \"default\": {\n            \"access\": \"READ_ONLY\"\n        },\n        \"power_user\": {\n            \"access\": \"READ_ONLY\"\n        },\n        \"admin\": {\n            \"access\": \"FULL\"\n        }\n    },\n    \"updatedTimestamp\": \"2022-04-21T05:34:26.234Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"domain",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Put governance policy domain data product"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": {\n    \"occaecat37\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"labore__\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"velit4b\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"permissions\": {\n    \"pariatur_06\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": {\n    \"occaecat37\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"labore__\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"velit4b\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": {\n    \"occaecat37\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"labore__\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"velit4b\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": {\n    \"occaecat37\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"labore__\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"velit4b\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"dataProductId\": \"<string>\",\n  \"domainId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Governance Policy Domain Data Product Permissions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId/permissions?groups=default&groups=power_user&groups=admin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"governance",
										"policy",
										"domain",
										":domainId",
										"data-product",
										":dataProductId",
										"permissions"
									],
									"query": [
										{
											"key": "groups",
											"value": "default",
											"description": "(Required) "
										},
										{
											"key": "groups",
											"value": "power_user",
											"description": "(Required) "
										},
										{
											"key": "groups",
											"value": "admin"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get governance policy domain data product permissions"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId/permissions?groups=<string>&groups=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId",
												"permissions"
											],
											"query": [
												{
													"key": "groups",
													"value": "<string>"
												},
												{
													"key": "groups",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"tempor_ca4\": {\n    \"access\": \"<string>\"\n  }\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId/permissions?groups=<string>&groups=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId",
												"permissions"
											],
											"query": [
												{
													"key": "groups",
													"value": "<string>"
												},
												{
													"key": "groups",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId/permissions?groups=<string>&groups=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId",
												"permissions"
											],
											"query": [
												{
													"key": "groups",
													"value": "<string>"
												},
												{
													"key": "groups",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/governance/policy/domain/:domainId/data-product/:dataProductId/permissions?groups=<string>&groups=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"governance",
												"policy",
												"domain",
												":domainId",
												"data-product",
												":dataProductId",
												"permissions"
											],
											"query": [
												{
													"key": "groups",
													"value": "<string>"
												},
												{
													"key": "groups",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "identity",
			"item": [
				{
					"name": "group",
					"item": [
						{
							"name": "{group Id}",
							"item": [
								{
									"name": "Delete Identity Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "{{IDENTITY_GROUP_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete identity group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Identity Group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "{{IDENTITY_GROUP_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get identity group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Group",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"apiAccessPolicyIds\": [\n        \"default\",\n        \"programmatic_access\",\n        \"manage_data_products\",\n        \"manage_governance\",\n        \"manage_groups\",\n        \"manage_identity_providers\",\n        \"manage_custom_scripts\",\n        \"administrator_access\"\n    ],\n    \"groupId\": \"{{IDENTITY_GROUP_ID}}\",\n    \"members\": [\n        \"root_admin\"\n    ],\n    \"updatedBy\": \"root_admin\",\n    \"description\": \"marketng group\",\n    \"createdBy\": \"system\",\n    \"claims\": [\n        \"root\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/group/:groupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "{{IDENTITY_GROUP_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity group"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Group Members",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"members\": [\n    \"abc\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/group/:groupId/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												":groupId",
												"members"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "{{IDENTITY_GROUP_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity group members"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId",
														"members"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiAccessPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"groupId\": \"<string>\",\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"autoAssignUsers\": \"<boolean>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId",
														"members"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId",
														"members"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/:groupId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														":groupId",
														"members"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Identity Groups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/group?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"group"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List identity groups"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/group?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"groups\": [\n    {\n      \"apiAccessPolicyIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"claims\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupId\": \"<string>\",\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoAssignUsers\": \"<boolean>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"apiAccessPolicyIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"claims\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"groupId\": \"<string>\",\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"autoAssignUsers\": \"<boolean>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/group?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "machine",
					"item": [
						{
							"name": "{machine Id}",
							"item": [
								{
									"name": "token",
									"item": [
										{
											"name": "{token Id}",
											"item": [
												{
													"name": "Delete Identity Machine Token",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token",
																":tokenId"
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "{{USERNAME}}",
																	"description": "(Required) "
																},
																{
																	"key": "tokenId",
																	"value": "{{TOKEN_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete identity machine token"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"clientId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Get Identity Machine Token",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token",
																":tokenId"
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "{{USERNAME}}",
																	"description": "(Required) "
																},
																{
																	"key": "tokenId",
																	"value": "{{TOKEN_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get identity machine token"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"clientId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Put Identity Machine Token",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"expiration\": \"2023-01-01\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token",
																":tokenId"
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "{{USERNAME}}",
																	"description": "(Required) "
																},
																{
																	"key": "tokenId",
																	"value": "{{TOKEN_ID}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Put identity machine token"
													},
													"response": [
														{
															"name": "200 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"username\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"clientId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"username\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
														},
														{
															"name": "400 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"username\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "403 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"username\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "404 response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"expiration\": \"<string>\",\n  \"authToken\": \"<string>\",\n  \"authUrl\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"tokenId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"username\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/identity/machine/:machineId/token/:tokenId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"identity",
																		"machine",
																		":machineId",
																		"token",
																		":tokenId"
																	],
																	"variable": [
																		{
																			"key": "machineId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "tokenId",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "apigId",
																			"value": "{{apigId}}",
																			"description": "AWS API Gateway ID of deployed RestApi"
																		},
																		{
																			"key": "region",
																			"value": "{{region}}",
																			"description": "AWS region the api is deployed in"
																		},
																		{
																			"key": "stage",
																			"value": "{{stage}}",
																			"description": "AWS API Gateway Stage"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Identity Machine Tokens",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId/token?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId",
														"token"
													],
													"query": [
														{
															"key": "nextToken",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "pageSize",
															"value": "{{PAGE_SIZE}}"
														},
														{
															"key": "limit",
															"value": "{{PAGE_LIMIT}}"
														}
													],
													"variable": [
														{
															"key": "machineId",
															"value": "{{USERNAME}}",
															"description": "(Required) "
														}
													]
												},
												"description": "List identity machine tokens"
											},
											"response": [
												{
													"name": "200 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tokens\": [\n    {\n      \"clientId\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expiration\": \"<string>\",\n      \"machineId\": \"<string>\",\n      \"tokenId\": \"<string>\",\n      \"username\": \"<string>\",\n      \"authToken\": \"<string>\",\n      \"authUrl\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"clientId\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"expiration\": \"<string>\",\n      \"machineId\": \"<string>\",\n      \"tokenId\": \"<string>\",\n      \"username\": \"<string>\",\n      \"authToken\": \"<string>\",\n      \"authUrl\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
												},
												{
													"name": "400 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "404 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/machine/:machineId/token?nextToken=<string>&pageSize=<integer>&limit=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"machine",
																":machineId",
																"token"
															],
															"query": [
																{
																	"key": "nextToken",
																	"value": "<string>"
																},
																{
																	"key": "pageSize",
																	"value": "<integer>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "machineId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Identity Machine",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/machine/:machineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"machine",
												":machineId"
											],
											"variable": [
												{
													"key": "machineId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete identity machine"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"machineId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Identity Machine",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/machine/:machineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"machine",
												":machineId"
											],
											"variable": [
												{
													"key": "machineId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get identity machine"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"machineId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Machine",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"updated through postman\",\n  \"machineId\": \"{{USERNAME}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/machine/:machineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"machine",
												":machineId"
											],
											"variable": [
												{
													"key": "machineId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity machine"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"machineId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"machineId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/machine/:machineId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"machine",
														":machineId"
													],
													"variable": [
														{
															"key": "machineId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Identity Machines",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/machine?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"machine"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List identity machines"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/machine?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"machine"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"machines\": [\n    {\n      \"machineId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"machineId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/machine?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"machine"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "provider",
					"item": [
						{
							"name": "{identity Provider Id}",
							"item": [
								{
									"name": "Delete Identity Provider",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"provider",
												":identityProviderId"
											],
											"variable": [
												{
													"key": "identityProviderId",
													"value": "{{PROVIDER_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete identity provider"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"details\": \"<object>\",\n  \"identityProviderId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"animf3\": \"<string>\"\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Identity Provider",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"provider",
												":identityProviderId"
											],
											"variable": [
												{
													"key": "identityProviderId",
													"value": "{{PROVIDER_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get identity provider"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"details\": \"<object>\",\n  \"identityProviderId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"animf3\": \"<string>\"\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Provider",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"attributeMapping\": {\n        \"preferred_username\": \"EMAIL\"\n    },\n    \"description\": \"midway\",\n    \"details\": {\n        \"scopes\": [\n            \"openid\",\n            \"email\",\n            \"profile\"\n        ],\n        \"clientId\": \"abcdefg\",\n        \"clientSecret\": \"abcdefg\",\n        \"issuer\": \"https://idp-integ.federate.amazon.com\",\n        \"attributeRequestMethod\": \"GET\"\n    },\n    \"enabled\": true,\n    \"identifiers\": [],\n    \"identityProviderId\": \"midway\",\n    \"name\": \"midway\",\n    \"type\": \"OIDC\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"provider",
												":identityProviderId"
											],
											"variable": [
												{
													"key": "identityProviderId",
													"value": "{{PROVIDER_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity provider"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"details\": \"<object>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"culpa_\": \"<string>\",\n    \"est3c1\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"identityProviderId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"details\": \"<object>\",\n  \"identityProviderId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"animf3\": \"<string>\"\n  },\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"details\": \"<object>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"culpa_\": \"<string>\",\n    \"est3c1\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"identityProviderId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"details\": \"<object>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"culpa_\": \"<string>\",\n    \"est3c1\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"identityProviderId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"details\": \"<object>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"attributeMapping\": {\n    \"culpa_\": \"<string>\",\n    \"est3c1\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"enabled\": true,\n  \"identifiers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"identityProviderId\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/provider/:identityProviderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"provider",
														":identityProviderId"
													],
													"variable": [
														{
															"key": "identityProviderId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Identity Providers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/provider?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"provider"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List identity providers"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/provider?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"provider"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"providers\": [\n    {\n      \"details\": \"<object>\",\n      \"identityProviderId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"attributeMapping\": {\n        \"magna0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": true,\n      \"identifiers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"details\": \"<object>\",\n      \"identityProviderId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"attributeMapping\": {\n        \"Excepteur3\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"commodo136\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"consequat46\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"enim_93\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ine9b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enabled\": true,\n      \"identifiers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/provider?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"provider"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "request",
					"item": [
						{
							"name": "{group Id}/{user Id}",
							"item": [
								{
									"name": "Delete Identity Request",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request",
												":groupId",
												":userId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "default",
													"description": "(Required) "
												},
												{
													"key": "userId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete identity request"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Identity Request",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request",
												":groupId",
												":userId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "default",
													"description": "(Required) "
												},
												{
													"key": "userId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get identity request"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Request",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"default\",\n  \"message\": \"need access\",\n  \"userId\": \"{{USER_ID}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request",
												":groupId",
												":userId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "default",
													"description": "(Required) "
												},
												{
													"key": "userId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity request"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"<string>\",\n  \"message\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\",\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Put Identity Request Action",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reason\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/request/:groupId/:userId/:action",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request",
												":groupId",
												":userId",
												":action"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "default",
													"description": "(Required) "
												},
												{
													"key": "userId",
													"value": "{{USERNAME}}",
													"description": "(Required) "
												},
												{
													"key": "action",
													"value": "approve",
													"description": "(Required) "
												}
											]
										},
										"description": "Put identity request action"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId",
														":action"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "action",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reason\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId",
														":action"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "action",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId",
														":action"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "action",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/identity/request/:groupId/:userId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"request",
														":groupId",
														":userId",
														":action"
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "action",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Identity Requests",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/request?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"request"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List identity requests"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/request?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"accessRequests\": [\n    {\n      \"groupId\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"message\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"groupId\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"message\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/request?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/request?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"request"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Identity Attributes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/identity/attributes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"attributes"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Get identity attributes"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"attributes"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Identity Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/identity/user?filter=<string>&pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"user"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>"
								},
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List identity users"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/user?filter=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"user"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"users\": [\n    {\n      \"username\": \"<string>\",\n      \"address\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"customGroups\": \"<string>\",\n      \"email\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"givenName\": \"<string>\",\n      \"middleName\": \"<string>\",\n      \"name\": \"<string>\",\n      \"nickname\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"preferredUsername\": \"<string>\",\n      \"sub\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"username\": \"<string>\",\n      \"address\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"customGroups\": \"<string>\",\n      \"email\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"givenName\": \"<string>\",\n      \"middleName\": \"<string>\",\n      \"name\": \"<string>\",\n      \"nickname\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"preferredUsername\": \"<string>\",\n      \"sub\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/user?filter=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"user"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "notification",
			"item": [
				{
					"name": "List Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notification?status=PENDING&pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification"
							],
							"query": [
								{
									"key": "status",
									"value": "PENDING"
								},
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List notifications"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification?status=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"notifications\": [\n    {\n      \"notificationId\": \"<string>\",\n      \"payload\": \"<object>\",\n      \"source\": \"<string>\",\n      \"status\": \"<string>\",\n      \"target\": \"<string>\",\n      \"targetAndStatus\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"notificationId\": \"<string>\",\n      \"payload\": \"<object>\",\n      \"source\": \"<string>\",\n      \"status\": \"<string>\",\n      \"target\": \"<string>\",\n      \"targetAndStatus\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification?status=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification?status=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Put Notification Action",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"DISMISSED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notification/:notificationId/action",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification",
								":notificationId",
								"action"
							],
							"variable": [
								{
									"key": "notificationId",
									"value": "2d810059-4694-e73e-530b-21c2c9791b10",
									"description": "(Required) "
								}
							]
						},
						"description": "Put notification action"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification/:notificationId/action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification",
										":notificationId",
										"action"
									],
									"variable": [
										{
											"key": "notificationId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"notificationId\": \"<string>\",\n  \"payload\": \"<object>\",\n  \"source\": \"<string>\",\n  \"status\": \"<string>\",\n  \"target\": \"<string>\",\n  \"targetAndStatus\": \"<string>\",\n  \"type\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification/:notificationId/action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification",
										":notificationId",
										"action"
									],
									"variable": [
										{
											"key": "notificationId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notification/:notificationId/action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification",
										":notificationId",
										"action"
									],
									"variable": [
										{
											"key": "notificationId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "ontology",
			"item": [
				{
					"name": "{ontology Namespace}/{ontology Id}",
					"item": [
						{
							"name": "Delete Ontology",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										":ontologyNamespace",
										":ontologyId"
									],
									"variable": [
										{
											"key": "ontologyNamespace",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "ontologyId",
											"value": "{{ONTOLOGY_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete ontology"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Ontology",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										":ontologyNamespace",
										":ontologyId"
									],
									"variable": [
										{
											"key": "ontologyNamespace",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "ontologyId",
											"value": "{{ONTOLOGY_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get ontology"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Put Ontology",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"aliases\": [{\n      \"name\": \"{{ONTOLOGY_ID}}\"\n  }],\n  \"name\": \"{{ONTOLOGY_ID}}\",\n  \"defaultLens\": \"{{LENS_ID}}\",\n  \"description\": \"test ontology description\",\n  \"ontologyId\": \"{{ONTOLOGY_ID}}\",\n  \"ontologyNamespace\": \"{{DOMAIN_ID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										":ontologyNamespace",
										":ontologyId"
									],
									"variable": [
										{
											"key": "ontologyNamespace",
											"value": "{{DOMAIN_ID}}",
											"description": "(Required) "
										},
										{
											"key": "ontologyId",
											"value": "{{ONTOLOGY_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Put ontology"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"aliases\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"defaultLens\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ontologyId\": \"<string>\",\n  \"ontologyNamespace\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ontology/:ontologyNamespace/:ontologyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ontology",
												":ontologyNamespace",
												":ontologyId"
											],
											"variable": [
												{
													"key": "ontologyNamespace",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "ontologyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Ontologies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ontology?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ontology"
							],
							"query": [
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List ontologies"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ontologies\": [\n    {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Ontology Find By Aliases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ontology/findByAlias?aliases={{ONTOLOGY_ID}}&pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ontology",
								"findByAlias"
							],
							"query": [
								{
									"key": "aliases",
									"value": "{{ONTOLOGY_ID}}",
									"description": "(Required) "
								},
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List ontology find by aliases"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology/findByAlias?aliases=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										"findByAlias"
									],
									"query": [
										{
											"key": "aliases",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"aliases\": {\n    \"non_2_c\": {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    \"nulla_f8\": {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    \"sintf0\": {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    \"magnaf80\": {\n      \"aliases\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"ontologyId\": \"<string>\",\n      \"ontologyNamespace\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"defaultLens\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  },\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology/findByAlias?aliases=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										"findByAlias"
									],
									"query": [
										{
											"key": "aliases",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology/findByAlias?aliases=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										"findByAlias"
									],
									"query": [
										{
											"key": "aliases",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ontology/findByAlias?aliases=<string>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ontology",
										"findByAlias"
									],
									"query": [
										{
											"key": "aliases",
											"value": "<string>"
										},
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "query",
			"item": [
				{
					"name": "{execution Id}",
					"item": [
						{
							"name": "result",
							"item": [
								{
									"name": "List Query Results",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result?retrieveDataIntegrity=true&pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result"
											],
											"query": [
												{
													"key": "retrieveDataIntegrity",
													"value": "true"
												},
												{
													"key": "nextToken",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "{{PAGE_SIZE}}"
												},
												{
													"key": "limit",
													"value": "{{PAGE_LIMIT}}"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "{{EXECUTION_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "List query results"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result?retrieveDataIntegrity=<boolean>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result"
													],
													"query": [
														{
															"key": "retrieveDataIntegrity",
															"value": "<boolean>"
														},
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"columns\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"caseSensitive\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"nullable\": \"<string>\",\n      \"precision\": \"<number>\",\n      \"scale\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"caseSensitive\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"nullable\": \"<string>\",\n      \"precision\": \"<number>\",\n      \"scale\": \"<number>\"\n    }\n  ],\n  \"data\": [\n    {\n      \"qui_bc\": \"<string>\",\n      \"Duis_5e\": \"<string>\",\n      \"incididunt26a\": \"<string>\"\n    },\n    {\n      \"Ut9c\": \"<string>\",\n      \"mollit_8\": \"<string>\"\n    }\n  ],\n  \"dataIntegrity\": \"<string>\",\n  \"error\": \"<string>\",\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result?retrieveDataIntegrity=<boolean>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result"
													],
													"query": [
														{
															"key": "retrieveDataIntegrity",
															"value": "<boolean>"
														},
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result?retrieveDataIntegrity=<boolean>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result"
													],
													"query": [
														{
															"key": "retrieveDataIntegrity",
															"value": "<boolean>"
														},
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result?retrieveDataIntegrity=<boolean>&nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result"
													],
													"query": [
														{
															"key": "retrieveDataIntegrity",
															"value": "<boolean>"
														},
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get Query Result Download",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result",
												"download"
											],
											"variable": [
												{
													"key": "executionId",
													"value": "{{EXECUTION_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get query result download"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result",
														"download"
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"signedUrl\": \"<string>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result",
														"download"
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "403 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result",
														"download"
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/:executionId/result/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														":executionId",
														"result",
														"download"
													],
													"variable": [
														{
															"key": "executionId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "list Query Results As Athena Results",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/query/:executionId/result-as-athena?maxResults={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										":executionId",
										"result-as-athena"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "{{PAGE_LIMIT}}"
										},
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "executionId",
											"value": "{{EXECUTION_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "List query results as athena results"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result-as-athena?maxResults=<integer>&nextToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result-as-athena"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "nextToken",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nextToken\": \"<string>\",\n  \"resultSet\": \"<object>\",\n  \"updateCount\": \"<integer>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result-as-athena?maxResults=<integer>&nextToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result-as-athena"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "nextToken",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result-as-athena?maxResults=<integer>&nextToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result-as-athena"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "nextToken",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/result-as-athena?maxResults=<integer>&nextToken=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"result-as-athena"
											],
											"query": [
												{
													"key": "maxResults",
													"value": "<integer>"
												},
												{
													"key": "nextToken",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Query Status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/query/:executionId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										":executionId",
										"status"
									],
									"variable": [
										{
											"key": "executionId",
											"value": "{{EXECUTION_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get query status"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"status"
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"reason\": \"<string>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"status"
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"status"
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/:executionId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												":executionId",
												"status"
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "saved-query",
					"item": [
						{
							"name": "{namespace}",
							"item": [
								{
									"name": "{query Id}",
									"item": [
										{
											"name": "Delete Query Saved Query",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace",
														":queryId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "{{DOMAIN_ID}}",
															"description": "(Required) "
														},
														{
															"key": "queryId",
															"value": "{{QUERY_ID}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete query saved query"
											},
											"response": [
												{
													"name": "200 response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"addressedAs\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"query\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
												},
												{
													"name": "400 response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "403 response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "404 response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Get Query Saved Query",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace",
														":queryId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "{{DOMAIN_ID}}",
															"description": "(Required) "
														},
														{
															"key": "queryId",
															"value": "{{QUERY_ID}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get query saved query"
											},
											"response": [
												{
													"name": "200 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"addressedAs\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"query\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
												},
												{
													"name": "400 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "403 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "404 response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Put Query Saved Query",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"select * from source.{{DOMAIN_ID}}.{{DATAPRODUCT_ID}}\",\n  \"addressedAs\": \"test address\",\n  \"description\": \"test save query\",\n  \"namespace\": \"{{DOMAIN_ID}}\",\n  \"queryId\": \"{{QUERY_ID}}\",\n  \"type\": \"PUBLIC\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace",
														":queryId"
													],
													"variable": [
														{
															"key": "namespace",
															"value": "{{DOMAIN_ID}}",
															"description": "(Required) "
														},
														{
															"key": "queryId",
															"value": "{{QUERY_ID}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Put query saved query"
											},
											"response": [
												{
													"name": "200 response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"query\": \"<string>\",\n  \"addressedAs\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"addressedAs\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"query\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdTimestamp\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"updatedBy\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}"
												},
												{
													"name": "400 response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"query\": \"<string>\",\n  \"addressedAs\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "403 response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"query\": \"<string>\",\n  \"addressedAs\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "404 response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"query\": \"<string>\",\n  \"addressedAs\": \"<string>\",\n  \"description\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"queryId\": \"<string>\",\n  \"referencedDataSets\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"dataProductId\": \"<string>\",\n      \"dataSetId\": \"<string>\",\n      \"domainId\": \"<string>\"\n    }\n  ],\n  \"referencedQueries\": [\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    },\n    {\n      \"namespace\": \"<string>\",\n      \"queryId\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"<string>\",\n  \"updatedTimestamp\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/query/saved-query/:namespace/:queryId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"query",
																"saved-query",
																":namespace",
																":queryId"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "queryId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "apigId",
																	"value": "{{apigId}}",
																	"description": "AWS API Gateway ID of deployed RestApi"
																},
																{
																	"key": "region",
																	"value": "{{region}}",
																	"description": "AWS region the api is deployed in"
																},
																{
																	"key": "stage",
																	"value": "{{stage}}",
																	"description": "AWS API Gateway Stage"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "list Query Namespace Saved Queries",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/query/saved-query/:namespace?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"saved-query",
												":namespace"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "{{PAGE_SIZE}}"
												},
												{
													"key": "limit",
													"value": "{{PAGE_LIMIT}}"
												}
											],
											"variable": [
												{
													"key": "namespace",
													"value": "{{DOMAIN_ID}}",
													"description": "(Required) "
												}
											]
										},
										"description": "List query namespace saved queries"
									},
									"response": [
										{
											"name": "200 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace?nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace"
													],
													"query": [
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"queries\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"query\": \"<string>\",\n      \"queryId\": \"<string>\",\n      \"referencedDataSets\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"referencedQueries\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"query\": \"<string>\",\n      \"queryId\": \"<string>\",\n      \"referencedDataSets\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"referencedQueries\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
										},
										{
											"name": "400 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace?nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace"
													],
													"query": [
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "404 response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/query/saved-query/:namespace?nextToken=<string>&pageSize=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"query",
														"saved-query",
														":namespace"
													],
													"query": [
														{
															"key": "nextToken",
															"value": "<string>"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "apigId",
															"value": "{{apigId}}",
															"description": "AWS API Gateway ID of deployed RestApi"
														},
														{
															"key": "region",
															"value": "{{region}}",
															"description": "AWS region the api is deployed in"
														},
														{
															"key": "stage",
															"value": "{{stage}}",
															"description": "AWS API Gateway Stage"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Query Saved Queries",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/query/saved-query?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"saved-query"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "List query saved queries"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/saved-query?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"saved-query"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"queries\": [\n    {\n      \"addressedAs\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"query\": \"<string>\",\n      \"queryId\": \"<string>\",\n      \"referencedDataSets\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"referencedQueries\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"addressedAs\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"query\": \"<string>\",\n      \"queryId\": \"<string>\",\n      \"referencedDataSets\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"referencedQueries\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/saved-query?nextToken=<string>&pageSize=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"saved-query"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sync",
					"item": [
						{
							"name": "Get Query Sync",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/query/sync?query=select * from source.{{DOMAIN_ID}}.{{DATAPRODUCT_ID}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"sync"
									],
									"query": [
										{
											"key": "query",
											"value": "select * from source.{{DOMAIN_ID}}.{{DATAPRODUCT_ID}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								},
								"description": "Get query sync"
							},
							"response": [
								{
									"name": "303 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync?query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Query Sync Result",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/query/sync/:executionId/result?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}&retrieveDataIntegrity=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"sync",
										":executionId",
										"result"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "{{PAGE_SIZE}}"
										},
										{
											"key": "limit",
											"value": "{{PAGE_LIMIT}}"
										},
										{
											"key": "retrieveDataIntegrity",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "executionId",
											"value": "{{EXECUTION_ID}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get query sync result"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync/:executionId/result?nextToken=<string>&pageSize=<integer>&limit=<integer>&retrieveDataIntegrity=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync",
												":executionId",
												"result"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "retrieveDataIntegrity",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"columns\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"caseSensitive\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"nullable\": \"<string>\",\n      \"precision\": \"<number>\",\n      \"scale\": \"<number>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"caseSensitive\": \"<boolean>\",\n      \"label\": \"<string>\",\n      \"nullable\": \"<string>\",\n      \"precision\": \"<number>\",\n      \"scale\": \"<number>\"\n    }\n  ],\n  \"data\": [\n    {\n      \"dolore_42f\": \"<string>\",\n      \"laborum_30a\": \"<string>\",\n      \"ad__\": \"<string>\",\n      \"reprehenderit_f\": \"<string>\"\n    },\n    {\n      \"laborum_77b\": \"<string>\",\n      \"sed_23\": \"<string>\"\n    }\n  ],\n  \"dataIntegrity\": \"<string>\"\n}"
								},
								{
									"name": "303 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync/:executionId/result?nextToken=<string>&pageSize=<integer>&limit=<integer>&retrieveDataIntegrity=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync",
												":executionId",
												"result"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "retrieveDataIntegrity",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync/:executionId/result?nextToken=<string>&pageSize=<integer>&limit=<integer>&retrieveDataIntegrity=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync",
												":executionId",
												"result"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "retrieveDataIntegrity",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/sync/:executionId/result?nextToken=<string>&pageSize=<integer>&limit=<integer>&retrieveDataIntegrity=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"sync",
												":executionId",
												"result"
											],
											"query": [
												{
													"key": "nextToken",
													"value": "<string>"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "retrieveDataIntegrity",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "executionId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "apigId",
													"value": "{{apigId}}",
													"description": "AWS API Gateway ID of deployed RestApi"
												},
												{
													"key": "region",
													"value": "{{region}}",
													"description": "AWS region the api is deployed in"
												},
												{
													"key": "stage",
													"value": "{{stage}}",
													"description": "AWS API Gateway Stage"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Post Query",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(jsonData);",
									"if(responseBody)",
									"    pm.environment.set(\"EXECUTION_ID\", jsonData.executionId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"select * from source.{{DOMAIN_ID}}.{{DATAPRODUCT_ID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Post query"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"executionId\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Post Query Generate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"generate"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Post query generate"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"generate"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dataProducts\": [\n    {\n      \"childDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataProductId\": \"<string>\",\n      \"dataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"parentDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transforms\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTrigger\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloudFormationStackId\": \"<string>\",\n      \"dataImportStateMachineArn\": \"<string>\",\n      \"dataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataStatusDetails\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enableAutomaticPii\": \"<boolean>\",\n      \"enableAutomaticTransforms\": \"<boolean>\",\n      \"infrastructureStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"infrastructureStatusDetails\": \"<string>\",\n      \"latestDataUpdateTimestamp\": \"<string>\",\n      \"sourceDataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatusDetails\": \"<string>\",\n      \"sourceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"childDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dataProductId\": \"<string>\",\n      \"dataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"parentDataProducts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transforms\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updateTrigger\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cloudFormationStackId\": \"<string>\",\n      \"dataImportStateMachineArn\": \"<string>\",\n      \"dataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataStatusDetails\": \"<string>\",\n      \"description\": \"<string>\",\n      \"enableAutomaticPii\": \"<boolean>\",\n      \"enableAutomaticTransforms\": \"<boolean>\",\n      \"infrastructureStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"infrastructureStatusDetails\": \"<string>\",\n      \"latestDataUpdateTimestamp\": \"<string>\",\n      \"sourceDataSets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatus\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sourceDataStatusDetails\": \"<string>\",\n      \"sourceDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"governedDataSets\": [\n    {\n      \"addressedAs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"addressedAs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataProductId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataSetId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domainId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"query\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"generate"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"generate"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Query Histories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/query/history?pageSize={{PAGE_SIZE}}&limit={{PAGE_LIMIT}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"history"
							],
							"query": [
								{
									"key": "nextToken",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "{{PAGE_SIZE}}"
								},
								{
									"key": "limit",
									"value": "{{PAGE_LIMIT}}"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "List query histories"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/history?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"history"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"queries\": [\n    {\n      \"executionId\": \"<string>\",\n      \"query\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    },\n    {\n      \"executionId\": \"<string>\",\n      \"query\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdTimestamp\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedTimestamp\": \"<string>\"\n    }\n  ],\n  \"nextToken\": \"<string>\",\n  \"totalItems\": \"<number>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/history?nextToken=<string>&pageSize=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"history"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Query Schema Data Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/query/schema/:domainId/data-product/:dataProductId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"schema",
								":domainId",
								"data-product",
								":dataProductId"
							],
							"query": [
								{
									"key": "dataSetId",
									"value": "0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "domainId",
									"value": "{{DOMAIN_ID}}",
									"description": "(Required) "
								},
								{
									"key": "dataProductId",
									"value": "{{DATAPRODUCT_ID}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Get query schema data product"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/schema/:domainId/data-product/:dataProductId?dataSetId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"schema",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "dataSetId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"schema\": {\n    \"dof32\": \"<string>\",\n    \"fugiat_c32\": \"<string>\",\n    \"aliquip_a85\": \"<string>\"\n  }\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/schema/:domainId/data-product/:dataProductId?dataSetId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"schema",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "dataSetId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/schema/:domainId/data-product/:dataProductId?dataSetId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"schema",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "dataSetId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/schema/:domainId/data-product/:dataProductId?dataSetId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"schema",
										":domainId",
										"data-product",
										":dataProductId"
									],
									"query": [
										{
											"key": "dataSetId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "query-parse-render",
			"item": [
				{
					"name": "Post Query Parse Render Discover",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"select * from {{DOMAIN_ID}}.{{DATAPRODUCT_ID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-parse-render/discover",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-parse-render",
								"discover"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Post query parse render discover"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/discover",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"discover"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tables\": [\n    {\n      \"identifierParts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"identifierParts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/discover",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"discover"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Post Query Parse Render Rewrite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dataProducts\": {\n    \"{{DOMAIN_ID}}.{{DATAPRODUCT_ID}}\": {\n      \"columns\": [\n        {\n          \"name\": \"date\", \n          \"udfs\": [],\n          \"clauses\":[]\n        }\n      ],\n      \"tableName\": \"data_product_ada3306.dp_source_marketing_sales2_ada_default_dataset_daa8a1ff_3249_4f6b_bdd9_8c37054c57e6\"\n    }\n  },\n  \"query\": \"SELECT * FROM {{DOMAIN_ID}}.{{DATAPRODUCT_ID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-parse-render/rewrite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-parse-render",
								"rewrite"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Post query parse render rewrite"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dataProducts\": {\n    \"doloreaa\": {\n      \"columns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tableName\": \"<string>\"\n    }\n  },\n  \"query\": \"<string>\",\n  \"querySubstitutions\": {\n    \"consequat26e\": {\n      \"query\": \"<string>\"\n    },\n    \"non_01\": {\n      \"query\": \"<string>\"\n    },\n    \"ipsum_6\": {\n      \"query\": \"<string>\"\n    },\n    \"minim_24\": {\n      \"query\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/rewrite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"rewrite"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"query\": \"<string>\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dataProducts\": {\n    \"doloreaa\": {\n      \"columns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tableName\": \"<string>\"\n    }\n  },\n  \"query\": \"<string>\",\n  \"querySubstitutions\": {\n    \"consequat26e\": {\n      \"query\": \"<string>\"\n    },\n    \"non_01\": {\n      \"query\": \"<string>\"\n    },\n    \"ipsum_6\": {\n      \"query\": \"<string>\"\n    },\n    \"minim_24\": {\n      \"query\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/rewrite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"rewrite"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Post Query Parse Render Validate Attribute Value Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attribute\": \"value\",\n  \"clause\": \"country_code='AU'\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query-parse-render/validate-attribute-value-policy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query-parse-render",
								"validate-attribute-value-policy"
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						},
						"description": "Post query parse render validate attribute value policy"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attribute\": \"<string>\",\n  \"clause\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/validate-attribute-value-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"validate-attribute-value-policy"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attribute\": \"<string>\",\n  \"clause\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query-parse-render/validate-attribute-value-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query-parse-render",
										"validate-attribute-value-policy"
									],
									"variable": [
										{
											"key": "apigId",
											"value": "{{apigId}}",
											"description": "AWS API Gateway ID of deployed RestApi"
										},
										{
											"key": "region",
											"value": "{{region}}",
											"description": "AWS region the api is deployed in"
										},
										{
											"key": "stage",
											"value": "{{stage}}",
											"description": "AWS API Gateway Stage"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "list Costs",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/cost?startTimestamp=2022-01-01&endTimestamp=2022-04-22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cost"
					],
					"query": [
						{
							"key": "startTimestamp",
							"value": "2022-01-01",
							"description": "(Required) "
						},
						{
							"key": "endTimestamp",
							"value": "2022-04-22",
							"description": "(Required) "
						}
					],
					"variable": [
						{
							"key": "apigId",
							"value": "{{apigId}}",
							"description": "AWS API Gateway ID of deployed RestApi"
						},
						{
							"key": "region",
							"value": "{{region}}",
							"description": "AWS region the api is deployed in"
						},
						{
							"key": "stage",
							"value": "{{stage}}",
							"description": "AWS API Gateway Stage"
						}
					]
				},
				"description": "List costs"
			},
			"response": [
				{
					"name": "200 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cost?startTimestamp=<string>&endTimestamp=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cost"
							],
							"query": [
								{
									"key": "startTimestamp",
									"value": "<string>"
								},
								{
									"key": "endTimestamp",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"dimensionValueAttributes\": [\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"groupDefinitions\": [\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"resultsByTime\": [\n    {\n      \"estimated\": \"<boolean>\",\n      \"groups\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timePeriod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"total\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"estimated\": \"<boolean>\",\n      \"groups\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timePeriod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"total\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "400 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cost?startTimestamp=<string>&endTimestamp=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cost"
							],
							"query": [
								{
									"key": "startTimestamp",
									"value": "<string>"
								},
								{
									"key": "endTimestamp",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
				},
				{
					"name": "403 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cost?startTimestamp=<string>&endTimestamp=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cost"
							],
							"query": [
								{
									"key": "startTimestamp",
									"value": "<string>"
								},
								{
									"key": "endTimestamp",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get Permission User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/permission/user/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"permission",
						"user",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{USER_ID}}",
							"description": "(Required) "
						}
					]
				},
				"description": "Get permission user"
			},
			"response": [
				{
					"name": "200 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permission/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"permissions\": {\n    \"elit__1_\": {\n      \"access\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
				},
				{
					"name": "400 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permission/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
				},
				{
					"name": "403 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permission/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
				},
				{
					"name": "404 response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permission/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "apigId",
									"value": "{{apigId}}",
									"description": "AWS API Gateway ID of deployed RestApi"
								},
								{
									"key": "region",
									"value": "{{region}}",
									"description": "AWS region the api is deployed in"
								},
								{
									"key": "stage",
									"value": "{{stage}}",
									"description": "AWS API Gateway Stage"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\",\n  \"cause\": \"<string>\",\n  \"details\": \"<string>\",\n  \"name\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenType",
				"value": "",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "scope",
				"value": "openid email profile",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{$CLIENT_SECRET$}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{$CLIENT_ID$}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://{{COGNITO_DOMAIN}}.auth.{{region}}.amazoncognito.com/oauth2/token",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "{{WEBSITE_URL}}",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://{{COGNITO_DOMAIN}}.auth.{{region}}.amazoncognito.com/oauth2/authorize",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "AUTH_TOKEN",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "$ACCESS_TOKEN$",
			"value": "<access-token>",
			"type": "default"
		},
		{
			"key": "_____",
			"value": "",
			"type": "default"
		},
		{
			"key": "apigId",
			"value": "<apig-id>",
			"type": "any"
		},
		{
			"key": "region",
			"value": "<region>",
			"type": "any"
		},
		{
			"key": "stage",
			"value": "prod",
			"type": "any"
		},
		{
			"key": "baseUrl",
			"value": "https://{{apigId}}.execute-api.{{region}}.amazonaws.com/{{stage}}",
			"type": "string"
		},
		{
			"key": "athenaProxyApiUrl",
			"value": "<athena-proxy-api-url>",
			"type": "default"
		},
		{
			"key": "cognitoUserPoolId",
			"value": "<cognito-user-pool-id>",
			"type": "default"
		},
		{
			"key": "userPoolClientId",
			"value": "<user-pool-client-id>",
			"type": "default"
		},
		{
			"key": "COGNITO_DOMAIN",
			"value": "<congito-domain>",
			"type": "default"
		},
		{
			"key": "WEBSITE_URL",
			"value": "<website-url>",
			"type": "default"
		},
		{
			"key": "DEPLOYMENT_UUID",
			"value": "<deployment-id>",
			"type": "default"
		},
		{
			"key": "BUCKET_ATHENA_OUTPUT",
			"value": "ada-solution-athena-output-{{DEPLOYMENT_UUID}}9393",
			"type": "default"
		},
		{
			"key": "BUCKET_DATA",
			"value": "ada-solution-data-{{DEPLOYMENT_UUID}}1286",
			"type": "default"
		},
		{
			"key": "BUCKET_SCRIPTS",
			"value": "ada-solution-scripts-{{DEPLOYMENT_UUID}}4740",
			"type": "default"
		},
		{
			"key": "BUCKET_UPLOADS",
			"value": "ada-solution-uploads-{{DEPLOYMENT_UUID}}7520",
			"type": "default"
		},
		{
			"key": "___",
			"value": "___",
			"type": "default"
		},
		{
			"key": "USERNAME",
			"value": "root_admin",
			"type": "default"
		},
		{
			"key": "DOMAIN_ID",
			"value": "test_domain",
			"type": "default"
		},
		{
			"key": "DATAPRODUCT_ID",
			"value": "test_dataproduct_1",
			"type": "default"
		},
		{
			"key": "UPLOAD_FILE_NAME",
			"value": "<upload-file-name>",
			"type": "string"
		},
		{
			"key": "SCRIPT_ID",
			"value": "myscript",
			"type": "string"
		},
		{
			"key": "PAGE_LIMIT",
			"value": "10",
			"type": "string"
		},
		{
			"key": "PAGE_SIZE",
			"value": "10",
			"type": "string"
		},
		{
			"key": "ONTOLOGY_ID",
			"value": "testontology",
			"type": "string"
		},
		{
			"key": "ONTOLOGY_ATTRIBUTE_GROUP",
			"value": "default",
			"type": "string"
		},
		{
			"key": "LENS_ID",
			"value": "hashed",
			"type": "string"
		},
		{
			"key": "IDENTITY_GROUP_ID",
			"value": "marketing",
			"type": "string"
		},
		{
			"key": "TOKEN_ID",
			"value": "test_token",
			"type": "string"
		},
		{
			"key": "SOURCE_TYPE",
			"value": "S3",
			"type": "string"
		},
		{
			"key": "UPDATED_TIMESTAMP",
			"value": "2022-04-21T03:18:11.498Z",
			"type": "string"
		},
		{
			"key": "PREVIEW_ID",
			"value": "1"
		},
		{
			"key": "PROVIDER_ID",
			"value": "cognito"
		},
		{
			"key": "USER_ID",
			"value": "<user-id>",
			"type": "string"
		},
		{
			"key": "QUERY_ID",
			"value": "test_save_query"
		}
	]
}