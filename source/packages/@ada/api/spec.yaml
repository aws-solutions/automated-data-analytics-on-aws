openapi: 3.0.1
info:
  description: Automated Data Analytics on AWS simplifies the management and analysis
    of data, providing an end-to-end platform used for ingesting, transforming, governing,
    and querying datasets through a standalone user interface
  title: Automated Data Analytics on AWS API
  version: 1.3.0
servers:
- url: https://{apigId}.execute-api.{region}.amazonaws.com/{stage}
  variables:
    apigId:
      default: APIG_ID
      description: AWS API Gateway ID of deployed RestApi
    region:
      default: ap-southeast-1
      description: AWS region the api is deployed in
    stage:
      default: prod
      description: AWS API Gateway Stage
paths:
  /administration/start-tear-down/destroy-data:
    delete:
      description: Delete administration start tear down destroy data
      operationId: DeleteAdministrationStartTearDownDestroyData
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TearDownDetails'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /administration/start-tear-down/retain-data:
    delete:
      description: Delete administration start tear down retain data
      operationId: DeleteAdministrationStartTearDownRetainData
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TearDownDetails'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /api-access-policy:
    get:
      description: List api access policies
      operationId: ListApiAccessPolicies
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiAccessPoliciesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /api-access-policy/{apiAccessPolicyId}:
    delete:
      description: Delete api access policy
      operationId: DeleteApiAccessPolicy
      parameters:
      - explode: false
        in: path
        name: apiAccessPolicyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAccessPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get api access policy
      operationId: GetApiAccessPolicy
      parameters:
      - explode: false
        in: path
        name: apiAccessPolicyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAccessPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put api access policy
      operationId: PutApiAccessPolicy
      parameters:
      - explode: false
        in: path
        name: apiAccessPolicyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAccessPolicyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAccessPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /cost:
    get:
      description: List costs
      operationId: listCosts
      parameters:
      - explode: true
        in: query
        name: startTimestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: endTimestamp
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostOutput'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /data-product-preview/domain/{domainId}/data-product/{dataProductId}:
    post:
      description: Post data product preview domain data product
      operationId: PostDataProductPreviewDomainDataProduct
      parameters:
      - explode: true
        in: query
        name: sampleSize
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataProductPreviewInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPreviewIdentifier'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /data-product-preview/domain/{domainId}/data-product/{dataProductId}/{previewId}:
    get:
      description: Get data product preview domain data product
      operationId: GetDataProductPreviewDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: previewId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPreview'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/domain:
    get:
      description: List data product domains
      operationId: ListDataProductDomains
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataProductDomainsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /data-product/domain/{domainId}:
    delete:
      description: Delete data product domain
      operationId: DeleteDataProductDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get data product domain
      operationId: GetDataProductDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put data product domain
      operationId: PutDataProductDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/domain/{domainId}/data-product:
    get:
      description: List data product domain data products
      operationId: ListDataProductDomainDataProducts
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataProductDomainDataProductsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/domain/{domainId}/data-product/{dataProductId}:
    delete:
      description: Delete data product domain data product
      operationId: DeleteDataProductDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get data product domain data product
      operationId: GetDataProductDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovernedDataProductEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    post:
      description: Post data product domain data product
      operationId: PostDataProductDomainDataProduct
      parameters:
      - explode: true
        in: query
        name: initialFullAccessGroups
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataProductInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put data product domain data product
      operationId: PutDataProductDomainDataProduct
      parameters:
      - explode: true
        in: query
        name: initialFullAccessGroups
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataProductInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/domain/{domainId}/data-product/{dataProductId}/file/upload/{fileName}:
    get:
      description: Get data product domain data product file upload
      operationId: GetDataProductDomainDataProductFileUpload
      parameters:
      - explode: true
        in: query
        name: contentType
        required: true
        schema:
          enum:
          - application/octet-stream
          - application/json
          - text/csv
          - application/gzip
          type: string
        style: form
      - explode: true
        in: query
        name: uploadId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: partNumber
        required: false
        schema:
          type: number
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductFileUpload'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    post:
      description: Post data product domain data product file upload
      operationId: PostDataProductDomainDataProductFileUpload
      parameters:
      - explode: true
        in: query
        name: contentType
        required: true
        schema:
          enum:
          - application/octet-stream
          - application/json
          - text/csv
          - application/gzip
          type: string
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductMultipartFileUploadStarted'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put data product domain data product file upload
      operationId: PutDataProductDomainDataProductFileUpload
      parameters:
      - explode: true
        in: query
        name: uploadId
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Location'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/domain/{domainId}/data-product/{dataProductId}/start-data-update:
    put:
      description: Put data product domain data product start data update
      operationId: PutDataProductDomainDataProductStartDataUpdate
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/dynamoDB/table/{tableArn}/stream:
    get:
      description: Get data product dynamo db table stream
      operationId: GetDataProductDynamoDBTableStream
      parameters:
      - explode: false
        in: path
        name: tableArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableStreamEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/scripts:
    get:
      description: List data product scripts
      operationId: ListDataProductScripts
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataProductScriptsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /data-product/scripts/namespace/{namespace}/script/{scriptId}:
    delete:
      description: Delete data product scripts namespace script
      operationId: DeleteDataProductScriptsNamespaceScript
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get data product scripts namespace script
      operationId: GetDataProductScriptsNamespaceScript
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put data product scripts namespace script
      operationId: PutDataProductScriptsNamespaceScript
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scriptId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /data-product/scripts/validate:
    post:
      description: Post data product scripts validate
      operationId: PostDataProductScriptsValidate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptSourceValidationInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptSourceValidationOutput'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/attribute-values:
    delete:
      description: Delete governance policy attribute values
      operationId: DeleteGovernancePolicyAttributeValues
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGovernancePolicyAttributeValuesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGovernancePolicyAttributeValuesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    get:
      description: Get governance policy attribute values
      operationId: GetGovernancePolicyAttributeValues
      parameters:
      - explode: true
        in: query
        name: namespaceAndAttributeIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGovernancePolicyAttributeValuesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put governance policy attribute values
      operationId: PutGovernancePolicyAttributeValues
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGovernancePolicyAttributeValuesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGovernancePolicyAttributeValuesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /governance/policy/attribute-values/{ontologyNamespace}/{attributeId}/attribute:
    get:
      description: Get governance policy attribute values attribute
      operationId: GetGovernancePolicyAttributeValuesAttribute
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGovernancePolicyAttributeValuesAttributeResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/attribute-values/{ontologyNamespace}/{attributeId}/group/{group}:
    delete:
      description: Delete governance policy attribute values group
      operationId: DeleteGovernancePolicyAttributeValuesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValuePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    get:
      description: Get governance policy attribute values group
      operationId: GetGovernancePolicyAttributeValuesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValuePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    put:
      description: Put governance policy attribute values group
      operationId: PutGovernancePolicyAttributeValuesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeValuePolicyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValuePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/attributes:
    delete:
      description: Delete governance policy attributes
      operationId: DeleteGovernancePolicyAttributes
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGovernancePolicyAttributesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGovernancePolicyAttributesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    get:
      description: Get governance policy attributes
      operationId: GetGovernancePolicyAttributes
      parameters:
      - explode: true
        in: query
        name: namespaceAndAttributeIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGovernancePolicyAttributesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put governance policy attributes
      operationId: PutGovernancePolicyAttributes
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGovernancePolicyAttributesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGovernancePolicyAttributesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /governance/policy/attributes/{ontologyNamespace}/{attributeId}/attribute:
    get:
      description: Get governance policy attributes attribute
      operationId: GetGovernancePolicyAttributesAttribute
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGovernancePolicyAttributesAttributeResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/attributes/{ontologyNamespace}/{attributeId}/group/{group}:
    delete:
      description: Delete governance policy attributes group
      operationId: DeleteGovernancePolicyAttributesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    get:
      description: Get governance policy attributes group
      operationId: GetGovernancePolicyAttributesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
    put:
      description: Put governance policy attributes group
      operationId: PutGovernancePolicyAttributesGroup
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: group
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributePolicyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributePolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/default-lens/domain/{domainId}/data-product/{dataProductId}:
    delete:
      description: Delete governance policy default lens domain data product
      operationId: DeleteGovernancePolicyDefaultLensDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultLensPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get governance policy default lens domain data product
      operationId: GetGovernancePolicyDefaultLensDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultLensPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put governance policy default lens domain data product
      operationId: PutGovernancePolicyDefaultLensDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultLensPolicyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultLensPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/domain/{domainId}/data-product/{dataProductId}:
    delete:
      description: Delete governance policy domain data product
      operationId: DeleteGovernancePolicyDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get governance policy domain data product
      operationId: GetGovernancePolicyDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put governance policy domain data product
      operationId: PutGovernancePolicyDomainDataProduct
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataProductPolicyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPolicyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /governance/policy/domain/{domainId}/data-product/{dataProductId}/permissions:
    get:
      description: Get governance policy domain data product permissions
      operationId: GetGovernancePolicyDomainDataProductPermissions
      parameters:
      - explode: true
        in: query
        name: groups
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataProductPermissionsEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/attributes:
    get:
      description: Get identity attributes
      operationId: GetIdentityAttributes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttributes'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/group:
    get:
      description: List identity groups
      operationId: ListIdentityGroups
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityGroupsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /identity/group/{groupId}:
    delete:
      description: Delete identity group
      operationId: DeleteIdentityGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get identity group
      operationId: GetIdentityGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put identity group
      operationId: PutIdentityGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/group/{groupId}/members:
    put:
      description: Put identity group members
      operationId: PutIdentityGroupMembers
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembersInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/machine:
    get:
      description: List identity machines
      operationId: ListIdentityMachines
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityMachinesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /identity/machine/{machineId}:
    delete:
      description: Delete identity machine
      operationId: DeleteIdentityMachine
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get identity machine
      operationId: GetIdentityMachine
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put identity machine
      operationId: PutIdentityMachine
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/machine/{machineId}/token:
    get:
      description: List identity machine tokens
      operationId: ListIdentityMachineTokens
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityMachineTokensResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/machine/{machineId}/token/{tokenId}:
    delete:
      description: Delete identity machine token
      operationId: DeleteIdentityMachineToken
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get identity machine token
      operationId: GetIdentityMachineToken
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put identity machine token
      operationId: PutIdentityMachineToken
      parameters:
      - explode: false
        in: path
        name: machineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/provider:
    get:
      description: List identity providers
      operationId: ListIdentityProviders
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /identity/provider/{identityProviderId}:
    delete:
      description: Delete identity provider
      operationId: DeleteIdentityProvider
      parameters:
      - explode: false
        in: path
        name: identityProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get identity provider
      operationId: GetIdentityProvider
      parameters:
      - explode: false
        in: path
        name: identityProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put identity provider
      operationId: PutIdentityProvider
      parameters:
      - explode: false
        in: path
        name: identityProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/request:
    get:
      description: List identity requests
      operationId: ListIdentityRequests
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityRequestsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/request/{groupId}/{userId}:
    delete:
      description: Delete identity request
      operationId: DeleteIdentityRequest
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get identity request
      operationId: GetIdentityRequest
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put identity request
      operationId: PutIdentityRequest
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/request/{groupId}/{userId}/{action}:
    put:
      description: Put identity request action
      operationId: PutIdentityRequestAction
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIdentityRequestActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutIdentityRequestActionResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /identity/user:
    get:
      description: List identity users
      operationId: ListIdentityUsers
      parameters:
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityUsersResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /notification:
    get:
      description: List notifications
      operationId: ListNotifications
      parameters:
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationsResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /notification/{notificationId}/action:
    put:
      description: Put notification action
      operationId: PutNotificationAction
      parameters:
      - explode: false
        in: path
        name: notificationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistedNotificationStatus'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistedNotificationEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /ontology:
    get:
      description: List ontologies
      operationId: ListOntologies
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOntologiesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /ontology/{ontologyNamespace}/{ontologyId}:
    delete:
      description: Delete ontology
      operationId: DeleteOntology
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ontologyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get ontology
      operationId: GetOntology
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ontologyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put ontology
      operationId: PutOntology
      parameters:
      - explode: false
        in: path
        name: ontologyNamespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ontologyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OntologyInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /ontology/findByAlias:
    get:
      description: List ontology find by aliases
      operationId: ListOntologyFindByAliases
      parameters:
      - explode: true
        in: query
        name: aliases
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOntologyFindByAliasesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /permission/user/{userId}:
    get:
      description: Get permission user
      operationId: GetPermissionUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionUserResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query:
    post:
      description: Post query
      operationId: PostQuery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExecution'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /query-parse-render/discover:
    post:
      description: Post query parse render discover
      operationId: PostQueryParseRenderDiscover
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostQueryParseRenderDiscoverResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /query-parse-render/rewrite:
    post:
      description: Post query parse render rewrite
      operationId: PostQueryParseRenderRewrite
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRewriteInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /query-parse-render/validate-attribute-value-policy:
    post:
      description: Post query parse render validate attribute value policy
      operationId: PostQueryParseRenderValidateAttributeValuePolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQueryParseRenderValidateAttributeValuePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostQueryParseRenderValidateAttributeValuePolicyResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /query/{executionId}/result:
    get:
      description: List query results
      operationId: ListQueryResults
      parameters:
      - explode: true
        in: query
        name: retrieveDataIntegrity
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryResult'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/{executionId}/result-as-athena:
    get:
      description: List query results as athena results
      operationId: listQueryResultsAsAthenaResults
      parameters:
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryResultAsAthena'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/{executionId}/result/download:
    get:
      description: Get query result download
      operationId: GetQueryResultDownload
      parameters:
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDownload'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/{executionId}/status:
    get:
      description: Get query status
      operationId: GetQueryStatus
      parameters:
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryStatus'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/generate:
    post:
      description: Post query generate
      operationId: PostQueryGenerate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedQuery'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /query/history:
    get:
      description: List query histories
      operationId: ListQueryHistories
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueryHistoriesResponse'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /query/saved-query:
    get:
      description: List query saved queries
      operationId: ListQuerySavedQueries
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQueryList'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
  /query/saved-query/{namespace}:
    get:
      description: List query namespace saved queries
      operationId: listQueryNamespaceSavedQueries
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQueryList'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/saved-query/{namespace}/{queryId}:
    delete:
      description: Delete query saved query
      operationId: DeleteQuerySavedQuery
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: queryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQueryEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    get:
      description: Get query saved query
      operationId: GetQuerySavedQuery
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: queryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQueryEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
    put:
      description: Put query saved query
      operationId: PutQuerySavedQuery
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: queryId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedQueryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQueryEntity'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/schema/{domainId}/data-product/{dataProductId}:
    get:
      description: Get query schema data product
      operationId: GetQuerySchemaDataProduct
      parameters:
      - explode: true
        in: query
        name: dataSetId
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dataProductId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySchema'
          description: 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 404 response
  /query/sync:
    get:
      description: Get query sync
      operationId: GetQuerySync
      parameters:
      - explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "303":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuerySyncResponse'
          description: 303 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
  /query/sync/{executionId}/result:
    get:
      description: Get query sync result
      operationId: GetQuerySyncResult
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: retrieveDataIntegrity
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: 200 response
        "303":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuerySyncResultResponse'
          description: 303 response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 400 response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: 403 response
components:
  schemas:
    AccessEnum:
      description: Access control value
      enum:
      - READ_ONLY
      - FULL
      type: string
    AccessRequest:
      properties:
        groupId:
          description: The id of group the user wants access to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        message:
          description: Access Request Notes
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        userId:
          description: UserId of user requesting access
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
      required:
      - groupId
      - userId
      type: object
    AccessRequestEntity:
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        groupId: groupId
        message: message
        updatedTimestamp: updatedTimestamp
        userId: userId
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        groupId:
          description: The id of group the user wants access to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        message:
          description: Access Request Notes
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        userId:
          description: UserId of user requesting access
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
      required:
      - groupId
      - userId
      type: object
    AccessRequestIdentifier:
      properties:
        groupId:
          description: The id of group the user wants access to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        userId:
          description: UserId of user requesting access
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
      required:
      - groupId
      - userId
      type: object
    AccessRequestInput:
      description: Details about the new AccessRequest
      example:
        groupId: groupId
        message: message
        updatedTimestamp: updatedTimestamp
        userId: userId
      properties:
        groupId:
          description: The id of group the user wants access to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        message:
          description: Access Request Notes
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        userId:
          description: UserId of user requesting access
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
      title: AccessRequestInput
      type: object
    ApiAccessPolicy:
      properties:
        apiAccessPolicyId:
          description: Identifier for an api access policy
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        description:
          description: Description of the api access policy
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: Name of the api access policy
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        resources:
          items:
            description: Resource arn for execute-api:Invoke permission associated
              with the policy
            maxLength: 2048
            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\/]+\/.*$
            type: string
          type: array
      required:
      - apiAccessPolicyId
      - name
      - resources
      type: object
    ApiAccessPolicyEntity:
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        name: name
        description: description
        resources:
        - resources
        - resources
        updatedTimestamp: updatedTimestamp
        apiAccessPolicyId: apiAccessPolicyId
      properties:
        apiAccessPolicyId:
          description: Identifier for an api access policy
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          description: Description of the api access policy
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: Name of the api access policy
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        resources:
          items:
            description: Resource arn for execute-api:Invoke permission associated
              with the policy
            maxLength: 2048
            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\/]+\/.*$
            type: string
          type: array
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - apiAccessPolicyId
      - name
      - resources
      type: object
    ApiAccessPolicyIdentifier:
      properties:
        apiAccessPolicyId:
          description: Identifier for an api access policy
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - apiAccessPolicyId
      type: object
    ApiAccessPolicyInput:
      description: Details of the api access policy to create/update
      example:
        name: name
        description: description
        resources:
        - resources
        - resources
        updatedTimestamp: updatedTimestamp
        apiAccessPolicyId: apiAccessPolicyId
      properties:
        apiAccessPolicyId:
          description: Identifier for an api access policy
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        description:
          description: Description of the api access policy
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: Name of the api access policy
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        resources:
          items:
            description: Resource arn for execute-api:Invoke permission associated
              with the policy
            maxLength: 2048
            pattern: ^arn:[^:]+:execute-api:[^:]+:[0-9]+:[^\/]+\/.*$
            type: string
          type: array
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - apiAccessPolicyId
      - name
      - resources
      title: ApiAccessPolicyInput
      type: object
    ApiError:
      example:
        name: name
        cause: cause
        details: details
        errorId: errorId
        message: message
      properties:
        cause:
          type: string
        details:
          type: string
        errorId:
          type: string
        message:
          type: string
        name:
          type: string
      required:
      - message
      title: GenericError
      type: object
    AttributePolicy:
      example:
        namespaceAndAttributeId: namespaceAndAttributeId
        group: group
      properties:
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        lensId:
          $ref: '#/components/schemas/LensEnum'
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
      required:
      - group
      - lensId
      - namespaceAndAttributeId
      type: object
    AttributePolicyEntity:
      description: The attribute policy for the given group and attribute id
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        namespaceAndAttributeId: namespaceAndAttributeId
        updatedTimestamp: updatedTimestamp
        group: group
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        lensId:
          $ref: '#/components/schemas/LensEnum'
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - group
      - lensId
      - namespaceAndAttributeId
      title: AttributePolicyEntity
      type: object
    AttributePolicyIdentifier:
      example:
        namespaceAndAttributeId: namespaceAndAttributeId
        group: group
      properties:
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
      required:
      - group
      - namespaceAndAttributeId
      type: object
    AttributePolicyInput:
      description: Details of new Attribute Policy
      example:
        namespaceAndAttributeId: namespaceAndAttributeId
        updatedTimestamp: updatedTimestamp
        group: group
      properties:
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        lensId:
          $ref: '#/components/schemas/LensEnum'
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - lensId
      title: AttributePolicyInput
      type: object
    AttributeValuePolicy:
      example:
        sqlClause: sqlClause
        namespaceAndAttributeId: namespaceAndAttributeId
        description: description
        group: group
      properties:
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
        sqlClause:
          description: An SQL WHERE clause for row level governance on the attribute
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
      required:
      - group
      - namespaceAndAttributeId
      - sqlClause
      type: object
    AttributeValuePolicyEntity:
      description: The attribute value policy for the given attribute id and group
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        sqlClause: sqlClause
        createdTimestamp: createdTimestamp
        namespaceAndAttributeId: namespaceAndAttributeId
        description: description
        updatedTimestamp: updatedTimestamp
        group: group
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
        sqlClause:
          description: An SQL WHERE clause for row level governance on the attribute
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - group
      - namespaceAndAttributeId
      - sqlClause
      title: AttributeValuePolicyEntity
      type: object
    AttributeValuePolicyInput:
      description: Details of new Attribute Value Policy
      example:
        sqlClause: sqlClause
        namespaceAndAttributeId: namespaceAndAttributeId
        description: description
        updatedTimestamp: updatedTimestamp
        group: group
      properties:
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        group:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        namespaceAndAttributeId:
          maxLength: 512
          minLength: 5
          pattern: ^[a-z][a-z_0-9]*.[a-z][a-z_0-9]*$
          type: string
        sqlClause:
          description: An SQL WHERE clause for row level governance on the attribute
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - sqlClause
      title: AttributeValuePolicyInput
      type: object
    ColumnMetadata:
      properties:
        dataType:
          description: The data type of the column
          maxLength: 2048
          pattern: ^[\w _\{\}"<>:,-]*$
          type: string
        description:
          description: A description of the column
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        ontologyAttributeId:
          description: The ontology attribute the column maps to (if any)
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The ontologyNamespace of the ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        piiClassification:
          description: Pii classification of the column
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        sortOrder:
          description: The order in which this column should appear in the schema
            and results
          type: number
      required:
      - dataType
      type: object
    ColumnsMetadata:
      additionalProperties:
        $ref: '#/components/schemas/ColumnMetadata'
      description: A map of column name to metadata about the column
      type: object
    CreateAndUpdateDetails:
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      type: object
    DataIntegrityEnum:
      description: Data Integrity value
      enum:
      - stale
      - current
      type: string
    DataProduct:
      example:
        latestDataUpdateTimestamp: latestDataUpdateTimestamp
        enableAutomaticPii: true
        cloudFormationStackId: cloudFormationStackId
        updateTrigger:
          scheduleRate: scheduleRate
        description: description
        parentDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        childDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        dataImportStateMachineArn: dataImportStateMachineArn
        domainId: domainId
        enableAutomaticTransforms: true
        dataProductId: dataProductId
        infrastructureStatusDetails: infrastructureStatusDetails
        name: name
        sourceDataStatusDetails: sourceDataStatusDetails
        dataStatusDetails: dataStatusDetails
        sourceDetails: '{}'
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/DataSets'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - childDataProducts
      - dataProductId
      - dataSets
      - domainId
      - name
      - parentDataProducts
      - sourceType
      - tags
      - transforms
      - updateTrigger
      type: object
    DataProductAccessLevel:
      properties:
        access:
          $ref: '#/components/schemas/AccessEnum'
      required:
      - access
      type: object
    DataProductBase:
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - childDataProducts
      - dataProductId
      - domainId
      - name
      - parentDataProducts
      - sourceType
      - tags
      - transforms
      - updateTrigger
      type: object
    DataProductDataStatus:
      description: Status of data product data
      enum:
      - NO_DATA
      - UPDATING
      - READY
      - FAILED
      type: string
    DataProductEntity:
      example:
        latestDataUpdateTimestamp: latestDataUpdateTimestamp
        updateTrigger:
          scheduleRate: scheduleRate
        description: description
        parentDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        updatedTimestamp: updatedTimestamp
        enableAutomaticTransforms: true
        dataProductId: dataProductId
        infrastructureStatusDetails: infrastructureStatusDetails
        dataStatusDetails: dataStatusDetails
        sourceDetails: '{}'
        enableAutomaticPii: true
        updatedBy: updatedBy
        cloudFormationStackId: cloudFormationStackId
        createdTimestamp: createdTimestamp
        childDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        dataImportStateMachineArn: dataImportStateMachineArn
        domainId: domainId
        createdBy: createdBy
        name: name
        sourceDataStatusDetails: sourceDataStatusDetails
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/DataSets'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - childDataProducts
      - dataProductId
      - dataSets
      - domainId
      - name
      - parentDataProducts
      - sourceType
      - tags
      - transforms
      - updateTrigger
      type: object
    DataProductFileUpload:
      description: An upload url to be used to store the file
      example:
        bucket: bucket
        signedUrl: signedUrl
        key: key
      properties:
        bucket:
          type: string
        key:
          type: string
        signedUrl:
          type: string
      required:
      - bucket
      - key
      - signedUrl
      title: DataProductFileUpload
      type: object
    DataProductIdentifier:
      example:
        dataProductId: dataProductId
        domainId: domainId
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - dataProductId
      - domainId
      type: object
    DataProductInfrastructureStatus:
      description: Status of data product infrastructure
      enum:
      - PROVISIONING
      - READY
      - FAILED
      type: string
    DataProductInput:
      description: Details about the new data product
      example:
        latestDataUpdateTimestamp: latestDataUpdateTimestamp
        updateTrigger:
          scheduleRate: scheduleRate
        description: description
        parentDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        updatedTimestamp: updatedTimestamp
        enableAutomaticTransforms: true
        dataProductId: dataProductId
        infrastructureStatusDetails: infrastructureStatusDetails
        dataStatusDetails: dataStatusDetails
        sourceDetails: '{}'
        enableAutomaticPii: true
        cloudFormationStackId: cloudFormationStackId
        childDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        dataImportStateMachineArn: dataImportStateMachineArn
        domainId: domainId
        name: name
        sourceDataStatusDetails: sourceDataStatusDetails
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/DataSets'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - name
      - sourceType
      - tags
      - transforms
      - updateTrigger
      title: DataProductInput
      type: object
    DataProductMultipartFileUploadStarted:
      description: An uploadId to be used for the subsequent invocations
      example:
        bucket: bucket
        uploadId: uploadId
        key: key
      properties:
        bucket:
          type: string
        key:
          type: string
        uploadId:
          type: string
      required:
      - bucket
      - key
      - uploadId
      title: DataProductMultipartFileUploadStarted
      type: object
    DataProductPermissions:
      additionalProperties:
        $ref: '#/components/schemas/DataProductAccessLevel'
      type: object
    DataProductPermissionsEntity:
      additionalProperties:
        $ref: '#/components/schemas/DataProductAccessLevel'
      description: Get permissions for a group and associated data product policy
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        updatedTimestamp: updatedTimestamp
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      title: DataProductPermissionsEntity
      type: object
    DataProductPolicy:
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        permissions:
          $ref: '#/components/schemas/DataProductPermissions'
      required:
      - dataProductId
      - domainId
      - permissions
      type: object
    DataProductPolicyEntity:
      description: Get a policy for a data product
      example:
        dataProductId: dataProductId
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        permissions:
          $ref: '#/components/schemas/DataProductPermissions'
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - dataProductId
      - domainId
      - permissions
      title: DataProductPolicyEntity
      type: object
    DataProductPolicyInput:
      description: Details of new data product policy
      example:
        dataProductId: dataProductId
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        permissions:
          $ref: '#/components/schemas/DataProductPermissions'
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - permissions
      title: DataProductPolicyInput
      type: object
    DataProductPreview:
      description: The data product preview, or just its status if the preview is
        ongoing
      example:
        durationMilliseconds: 0.8008281904610115
        transformedDataSets:
          key:
            schema:
              dataType: dataType
              fields:
              - name: name
              - name: name
            metadata: '{}'
            data:
            - '{}'
            - '{}'
            s3Path: s3Path
            s3SamplePath: s3SamplePath
            classification: classification
        initialDataSets:
          key:
            schema:
              dataType: dataType
              fields:
              - name: name
              - name: name
            metadata: '{}'
            data:
            - '{}'
            - '{}'
            s3Path: s3Path
            s3SamplePath: s3SamplePath
            classification: classification
        error:
          name: name
          cause: cause
          details: details
          errorId: errorId
          message: message
        previewId: previewId
        status: RUNNING
      properties:
        durationMilliseconds:
          description: The time taken to complete the preview
          type: number
        error:
          $ref: '#/components/schemas/ApiError'
        initialDataSets:
          additionalProperties:
            $ref: '#/components/schemas/DataSetPreview'
          description: Data sets discovered from the source data, keyed by dataset
            id
          type: object
        previewId:
          description: The id of the data product preview
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        status:
          description: The status of the preview execution
          enum:
          - RUNNING
          - SUCCEEDED
          - FAILED
          - TIMED_OUT
          - ABORTED
          type: string
        transformedDataSets:
          additionalProperties:
            $ref: '#/components/schemas/DataSetPreview'
          description: Data set previews after transforms have been applied, keyed
            by dataset id
          type: object
        transformsApplied:
          $ref: '#/components/schemas/DataProductTransforms'
      required:
      - previewId
      - status
      title: DataProductPreview
      type: object
    DataProductPreviewIdentifier:
      example:
        previewId: previewId
      properties:
        previewId:
          description: The id of the data product preview
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - previewId
      type: object
    DataProductPreviewInput:
      description: Details about the data product to preview
      example:
        latestDataUpdateTimestamp: latestDataUpdateTimestamp
        enableAutomaticPii: true
        cloudFormationStackId: cloudFormationStackId
        updateTrigger:
          scheduleRate: scheduleRate
        description: description
        parentDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        childDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        dataImportStateMachineArn: dataImportStateMachineArn
        domainId: domainId
        enableAutomaticTransforms: true
        dataProductId: dataProductId
        infrastructureStatusDetails: infrastructureStatusDetails
        name: name
        sourceDataStatusDetails: sourceDataStatusDetails
        dataStatusDetails: dataStatusDetails
        sourceDetails: '{}'
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/DataSets'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - sourceType
      - transforms
      title: DataProductPreviewInput
      type: object
    DataProductSourceDataStatus:
      description: Status of raw source data product data
      enum:
      - NO_DATA
      - UPDATING
      - READY
      - FAILED
      type: string
    DataProductTransform:
      description: Uniquely identifies the script. Used to calculate the script path
        in s3
      properties:
        inlineScriptContent:
          description: Inline script content for use in schema previews. Data products
            cannot be created with inline scripts.
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
        inputArgs:
          description: Arguments to pass to the script
          type: object
        namespace:
          description: The namespace in which the script resides, eg the domain.
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        scriptId:
          description: Identifies the script within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - namespace
      - scriptId
      type: object
    DataProductTransforms:
      description: Ordered list of transformations applied to data in the data product
      items:
        $ref: '#/components/schemas/DataProductTransform'
      type: array
    DataProductUpdatePolicyType:
      description: Update types for a data product data
      enum:
      - APPEND
      - REPLACE
      type: string
    DataProductUpdateTrigger:
      description: The trigger for a data update
      example:
        scheduleRate: scheduleRate
      properties:
        scheduleRate:
          description: Cron schedule for data update (if triggerType is scheduled)
          maxLength: 64
          pattern: (?:(?:^rate\((\d+) (minutes?|hours?|days?)\)$)|(?:^cron\(([\w,/\-*?#]{1,20}
            ?){1,6}\)$))
          type: string
        triggerType:
          $ref: '#/components/schemas/DataProductUpdateTriggerType'
        updatePolicy:
          $ref: '#/components/schemas/DataProductUpdatePolicyType'
      required:
      - triggerType
      type: object
    DataProductUpdateTriggerType:
      description: Trigger types for a data product data
      enum:
      - ON_DEMAND
      - SCHEDULE
      - AUTOMATIC
      type: string
    DataSet:
      properties:
        columnMetadata:
          $ref: '#/components/schemas/ColumnsMetadata'
        description:
          description: A description of the dataset
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        identifiers:
          $ref: '#/components/schemas/DataSetIdentifiers'
        name:
          description: The name of the dataset within the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - columnMetadata
      - identifiers
      type: object
    DataSetDetails:
      properties:
        description:
          description: A description of the dataset
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        identifiers:
          $ref: '#/components/schemas/DataSetIdentifiers'
        name:
          description: The name of the dataset within the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - identifiers
      type: object
    DataSetIdentifier:
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSetId:
          description: The id of the data set
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - dataProductId
      - dataSetId
      - domainId
      type: object
    DataSetIdentifiers:
      description: Details specific to attributes that identify the dataset
      properties:
        catalog:
          description: The catalog of the dataset
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        database:
          description: The database where the detaset is located
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        table:
          description: The name of the table that contains the data of the dataset
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      type: object
    DataSetPreview:
      example:
        schema:
          dataType: dataType
          fields:
          - name: name
          - name: name
        metadata: '{}'
        data:
        - '{}'
        - '{}'
        s3Path: s3Path
        s3SamplePath: s3SamplePath
        classification: classification
      properties:
        classification:
          description: The classification of the data stored for this dataset in s3
            (if any)
          type: string
        data:
          items:
            type: object
          type: array
        metadata:
          description: Any metadata that may have been discovered by the preview
          type: object
        s3Path:
          description: The path to the data for this dataset in s3 (if any)
          type: string
        s3SamplePath:
          description: The path to the sample data for this dataset in s3 (if any)
          type: string
        schema:
          $ref: '#/components/schemas/DataSetPreviewSchema'
      required:
      - data
      - schema
      type: object
    DataSetPreviewNamedSchema:
      example:
        name: name
      properties:
        container:
          $ref: '#/components/schemas/DataSetPreviewSchema'
        name:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - name
      type: object
    DataSetPreviewSchema:
      example:
        dataType: dataType
        fields:
        - name: name
        - name: name
      properties:
        dataType:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        elementType:
          $ref: '#/components/schemas/DataSetPreviewSchema'
        fields:
          items:
            $ref: '#/components/schemas/DataSetPreviewNamedSchema'
          type: array
      required:
      - dataType
      type: object
    DataSets:
      additionalProperties:
        $ref: '#/components/schemas/DataSet'
      description: Map of datasets by id
      type: object
    DefaultLensPolicy:
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        defaultLensId:
          $ref: '#/components/schemas/LensEnum'
        defaultLensOverrides:
          additionalProperties:
            $ref: '#/components/schemas/LensEnum'
          type: object
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - dataProductId
      - defaultLensId
      - defaultLensOverrides
      - domainId
      type: object
    DefaultLensPolicyEntity:
      description: Get default lens policy by data product id
      example:
        dataProductId: dataProductId
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        defaultLensOverrides: {}
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        defaultLensId:
          $ref: '#/components/schemas/LensEnum'
        defaultLensOverrides:
          additionalProperties:
            $ref: '#/components/schemas/LensEnum'
          type: object
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - dataProductId
      - defaultLensId
      - defaultLensOverrides
      - domainId
      title: DefaultLensPolicyEntity
      type: object
    DefaultLensPolicyInput:
      description: Details of new default lens policy
      example:
        dataProductId: dataProductId
        defaultLensOverrides: {}
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        defaultLensId:
          $ref: '#/components/schemas/LensEnum'
        defaultLensOverrides:
          additionalProperties:
            $ref: '#/components/schemas/LensEnum'
          type: object
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - defaultLensId
      - defaultLensOverrides
      title: DefaultLensPolicyInput
      type: object
    DeleteGovernancePolicyAttributesRequest:
      description: List of attribute policies to delete
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicyIdentifier'
          type: array
      required:
      - policies
      title: DeleteGovernancePolicyAttributesRequest
      type: object
    DeleteGovernancePolicyAttributesResponse:
      description: The deleted attribute policies
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicy'
          type: array
      required:
      - policies
      title: DeleteGovernancePolicyAttributesResponse
      type: object
    DeleteGovernancePolicyAttributeValuesRequest:
      description: List of attribute value policies to delete
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicyIdentifier'
          type: array
      required:
      - policies
      title: DeleteGovernancePolicyAttributeValuesRequest
      type: object
    DeleteGovernancePolicyAttributeValuesResponse:
      description: The deleted attribute value policies
      example:
        policies:
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributeValuePolicy'
          type: array
      required:
      - policies
      title: DeleteGovernancePolicyAttributeValuesResponse
      type: object
    Domain:
      properties:
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - domainId
      - name
      type: object
    DomainEntity:
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        name: name
        description: description
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - domainId
      - name
      type: object
    DomainIdentifier:
      properties:
        domainId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - domainId
      type: object
    DomainInput:
      description: Details about the new domain
      example:
        name: name
        description: description
        updatedTimestamp: updatedTimestamp
        domainId: domainId
      properties:
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - name
      title: DomainInput
      type: object
    FileUploadInput:
      description: Details about the uploaded parts
      example:
        parts:
        - etag: etag
          partNumber: 0.8008281904610115
        - etag: etag
          partNumber: 0.8008281904610115
      properties:
        parts:
          items:
            $ref: '#/components/schemas/FileUploadInput_parts'
          type: array
      required:
      - parts
      title: FileUploadInput
      type: object
    GeneratedQuery:
      description: The generated query (ie. translated to include governance)
      example:
        query: query
        dataProducts:
        - latestDataUpdateTimestamp: latestDataUpdateTimestamp
          enableAutomaticPii: true
          cloudFormationStackId: cloudFormationStackId
          updateTrigger:
            scheduleRate: scheduleRate
          description: description
          parentDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          childDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          dataImportStateMachineArn: dataImportStateMachineArn
          domainId: domainId
          enableAutomaticTransforms: true
          dataProductId: dataProductId
          infrastructureStatusDetails: infrastructureStatusDetails
          name: name
          sourceDataStatusDetails: sourceDataStatusDetails
          dataStatusDetails: dataStatusDetails
          sourceDetails: '{}'
        - latestDataUpdateTimestamp: latestDataUpdateTimestamp
          enableAutomaticPii: true
          cloudFormationStackId: cloudFormationStackId
          updateTrigger:
            scheduleRate: scheduleRate
          description: description
          parentDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          childDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          dataImportStateMachineArn: dataImportStateMachineArn
          domainId: domainId
          enableAutomaticTransforms: true
          dataProductId: dataProductId
          infrastructureStatusDetails: infrastructureStatusDetails
          name: name
          sourceDataStatusDetails: sourceDataStatusDetails
          dataStatusDetails: dataStatusDetails
          sourceDetails: '{}'
      properties:
        dataProducts:
          description: The data products involved in the query
          items:
            $ref: '#/components/schemas/DataProduct'
          type: array
        governedDataSets:
          $ref: '#/components/schemas/GovernedDataSets'
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
      required:
      - dataProducts
      - governedDataSets
      - query
      title: GeneratedQuery
      type: object
    GetCostOutput:
      description: Details about the cost
      example:
        groupDefinitions:
        - type: type
          key: key
        - type: type
          key: key
        dimensionValueAttributes:
        - type: type
          key: key
        - type: type
          key: key
        resultsByTime:
        - total:
            usageQuantity:
              key:
                amount: amount
                unit: unit
            blendedCost:
              key:
                amount: amount
                unit: unit
          estimated: true
          timePeriod:
            start: start
            end: end
          groups:
          - keys:
            - keys
            - keys
            metrics:
              key:
                amount: amount
                unit: unit
          - keys:
            - keys
            - keys
            metrics:
              key:
                amount: amount
                unit: unit
        - total:
            usageQuantity:
              key:
                amount: amount
                unit: unit
            blendedCost:
              key:
                amount: amount
                unit: unit
          estimated: true
          timePeriod:
            start: start
            end: end
          groups:
          - keys:
            - keys
            - keys
            metrics:
              key:
                amount: amount
                unit: unit
          - keys:
            - keys
            - keys
            metrics:
              key:
                amount: amount
                unit: unit
      properties:
        dimensionValueAttributes:
          description: Group by function
          items:
            $ref: '#/components/schemas/GetCostOutput_dimensionValueAttributes'
          type: array
        groupDefinitions:
          description: Group by function
          items:
            $ref: '#/components/schemas/GetCostOutput_groupDefinitions'
          type: array
        resultsByTime:
          description: Results by time
          items:
            $ref: '#/components/schemas/GetCostOutput_resultsByTime'
          type: array
      required:
      - dimensionValueAttributes
      - groupDefinitions
      - resultsByTime
      title: GetCostOutput
      type: object
    GetGovernancePolicyAttributesAttributeResponse:
      description: A list of attributes for the given attributes
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicy'
          type: array
      required:
      - policies
      title: GetGovernancePolicyAttributesAttributeResponse
      type: object
    GetGovernancePolicyAttributesResponse:
      description: A map of attribute id to the lens id that applies for the given
        group and attributes
      example:
        attributeIdToLensId: {}
      properties:
        attributeIdToLensId:
          additionalProperties:
            $ref: '#/components/schemas/LensEnum'
          type: object
      required:
      - attributeIdToLensId
      title: GetGovernancePolicyAttributesResponse
      type: object
    GetGovernancePolicyAttributeValuesAttributeResponse:
      description: A list of attribute values for the given attribute
      example:
        policies:
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributeValuePolicy'
          type: array
      required:
      - policies
      title: GetGovernancePolicyAttributeValuesAttributeResponse
      type: object
    GetGovernancePolicyAttributeValuesResponse:
      description: The attribute value policies discovered from the given attributesId
        and group
      example:
        attributeIdToSqlClause:
          key: attributeIdToSqlClause
      properties:
        attributeIdToSqlClause:
          additionalProperties:
            description: The sql clause to apply for the attribute
            type: string
          type: object
      required:
      - attributeIdToSqlClause
      title: GetGovernancePolicyAttributeValuesResponse
      type: object
    GetPermissionUserResponse:
      description: The list of APIs that the user has access to
      example: {}
      properties:
        permissions:
          $ref: '#/components/schemas/UserPermission'
      required:
      - permissions
      title: GetPermissionUserResponse
      type: object
    GetQuerySyncResponse:
      description: A redirect to the query result api
      title: GetQuerySyncResponse
      type: object
    GetQuerySyncResultResponse:
      description: A redirect to the query result api
      title: GetQuerySyncResultResponse
      type: object
    GovernedColumnMetadata:
      properties:
        dataType:
          description: The data type of the column
          maxLength: 2048
          pattern: ^[\w _\{\}"<>:,-]*$
          type: string
        description:
          description: A description of the column
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        lensToApply:
          $ref: '#/components/schemas/LensEnum'
        ontologyAttributeId:
          description: The ontology attribute the column maps to (if any)
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The ontologyNamespace of the ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        piiClassification:
          description: Pii classification of the column
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        sortOrder:
          description: The order in which this column should appear in the schema
            and results
          type: number
        sqlClauses:
          items:
            maxLength: 262144
            pattern: ^([\s\S]+)$
            type: string
          type: array
      required:
      - dataType
      - lensToApply
      - sqlClauses
      type: object
    GovernedColumnsMetadata:
      additionalProperties:
        $ref: '#/components/schemas/GovernedColumnMetadata'
      type: object
    GovernedDataProduct:
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/GovernedDataSetsDetails'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - childDataProducts
      - dataProductId
      - dataSets
      - domainId
      - name
      - parentDataProducts
      - sourceType
      - tags
      - transforms
      - updateTrigger
      type: object
    GovernedDataProductEntity:
      description: The data product with the given id
      example:
        latestDataUpdateTimestamp: latestDataUpdateTimestamp
        updateTrigger:
          scheduleRate: scheduleRate
        description: description
        parentDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        updatedTimestamp: updatedTimestamp
        enableAutomaticTransforms: true
        dataProductId: dataProductId
        infrastructureStatusDetails: infrastructureStatusDetails
        dataStatusDetails: dataStatusDetails
        sourceDetails: '{}'
        enableAutomaticPii: true
        updatedBy: updatedBy
        cloudFormationStackId: cloudFormationStackId
        createdTimestamp: createdTimestamp
        childDataProducts:
        - dataProductId: dataProductId
          domainId: domainId
        - dataProductId: dataProductId
          domainId: domainId
        dataImportStateMachineArn: dataImportStateMachineArn
        domainId: domainId
        createdBy: createdBy
        name: name
        sourceDataStatusDetails: sourceDataStatusDetails
      properties:
        childDataProducts:
          description: Any child data products, ie data products that use this data
            product as a source for their data
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        cloudFormationStackId:
          description: The id of the cloudformation stack for all resources pertaining
            to this data product
          maxLength: 2048
          pattern: ^arn:[\w]+:[\w-]+:[\w-]+:[\d]+:[*-\/\w]+$
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        dataImportStateMachineArn:
          description: The arn of the state machine for importing data product data
            (if any)
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSets:
          $ref: '#/components/schemas/GovernedDataSetsDetails'
        dataStatus:
          $ref: '#/components/schemas/DataProductDataStatus'
        dataStatusDetails:
          description: Details about the data status of the data product, eg error
            message if data import failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        description:
          description: A description of the data product
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        enableAutomaticPii:
          description: Whether or not to automatically apply pii detection and redaction
          type: boolean
        enableAutomaticTransforms:
          description: Whether or not to automatically apply transforms based on the
            type of data in the data product
          type: boolean
        infrastructureStatus:
          $ref: '#/components/schemas/DataProductInfrastructureStatus'
        infrastructureStatusDetails:
          description: Details about the infrastructure status of the data product,
            eg error message if creation failed
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        latestDataUpdateTimestamp:
          description: The time at which the data product data was last updated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        name:
          description: The name of the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        parentDataProducts:
          description: Any parent data products, ie data products that are used as
            a source for data in this data product
          items:
            $ref: '#/components/schemas/DataProductIdentifier'
          type: array
        sourceDataSets:
          $ref: '#/components/schemas/DataSets'
        sourceDataStatus:
          $ref: '#/components/schemas/DataProductSourceDataStatus'
        sourceDataStatusDetails:
          description: Details about the raw source data status of the data product,
            eg error message if data source inference failed
          type: string
        sourceDetails:
          type: object
        sourceType:
          $ref: '#/components/schemas/SourceTypeEnum'
        tags:
          $ref: '#/components/schemas/Tags'
        transforms:
          $ref: '#/components/schemas/DataProductTransforms'
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        updateTrigger:
          $ref: '#/components/schemas/DataProductUpdateTrigger'
      required:
      - childDataProducts
      - dataProductId
      - dataSets
      - domainId
      - name
      - parentDataProducts
      - sourceType
      - tags
      - transforms
      - updateTrigger
      title: GovernedDataProductEntity
      type: object
    GovernedDataSet:
      properties:
        addressedAs:
          type: string
        dataProductId:
          type: string
        dataSet:
          $ref: '#/components/schemas/GovernedDataSetDetails'
        dataSetId:
          type: string
        domainId:
          type: string
      required:
      - addressedAs
      - dataProductId
      - dataSet
      - dataSetId
      - domainId
      type: object
    GovernedDataSetDetails:
      properties:
        columnMetadata:
          $ref: '#/components/schemas/GovernedColumnsMetadata'
        description:
          description: A description of the dataset
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        identifiers:
          $ref: '#/components/schemas/DataSetIdentifiers'
        name:
          description: The name of the dataset within the data product
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - columnMetadata
      - identifiers
      type: object
    GovernedDataSets:
      description: The data sets involved in the query, with their applied governance
        details
      items:
        $ref: '#/components/schemas/GovernedDataSet'
      type: array
    GovernedDataSetsDetails:
      additionalProperties:
        $ref: '#/components/schemas/GovernedDataSetDetails'
      description: Map of datasets by id
      type: object
    Group:
      properties:
        apiAccessPolicyIds:
          description: The api access policies associated with the group. These policy
            ids map to sets of api paths to define what apis the group may call.
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        autoAssignUsers:
          description: Flag to automatically add users to this group
          type: boolean
        claims:
          description: The identity provider claims or machine ids associated with
            this group. If a user has one or more of these claims, they are considered
            part of the group
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        description:
          description: A description of the group
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        groupId:
          description: Identifier for the group
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        members:
          description: The members that belong to this group, defined by values of
            preferred_username.
          items:
            type: string
          type: array
      required:
      - apiAccessPolicyIds
      - claims
      - groupId
      - members
      type: object
    GroupEntity:
      example:
        autoAssignUsers: true
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        groupId: groupId
        members:
        - members
        - members
        apiAccessPolicyIds:
        - apiAccessPolicyIds
        - apiAccessPolicyIds
        claims:
        - claims
        - claims
        description: description
        updatedTimestamp: updatedTimestamp
      properties:
        apiAccessPolicyIds:
          description: The api access policies associated with the group. These policy
            ids map to sets of api paths to define what apis the group may call.
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        autoAssignUsers:
          description: Flag to automatically add users to this group
          type: boolean
        claims:
          description: The identity provider claims or machine ids associated with
            this group. If a user has one or more of these claims, they are considered
            part of the group
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          description: A description of the group
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        groupId:
          description: Identifier for the group
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        members:
          description: The members that belong to this group, defined by values of
            preferred_username.
          items:
            type: string
          type: array
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - apiAccessPolicyIds
      - claims
      - groupId
      - members
      type: object
    GroupIdentifier:
      properties:
        groupId:
          description: Identifier for the group
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - groupId
      type: object
    GroupInput:
      description: Details about the new group
      example:
        autoAssignUsers: true
        groupId: groupId
        members:
        - members
        - members
        apiAccessPolicyIds:
        - apiAccessPolicyIds
        - apiAccessPolicyIds
        claims:
        - claims
        - claims
        description: description
        updatedTimestamp: updatedTimestamp
      properties:
        apiAccessPolicyIds:
          description: The api access policies associated with the group. These policy
            ids map to sets of api paths to define what apis the group may call.
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        autoAssignUsers:
          description: Flag to automatically add users to this group
          type: boolean
        claims:
          description: The identity provider claims or machine ids associated with
            this group. If a user has one or more of these claims, they are considered
            part of the group
          items:
            maxLength: 256
            minLength: 2
            pattern: ^[a-z][a-z_0-9]*$
            type: string
          type: array
        description:
          description: A description of the group
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        groupId:
          description: Identifier for the group
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        members:
          description: The members that belong to this group, defined by values of
            preferred_username.
          items:
            type: string
          type: array
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - apiAccessPolicyIds
      - claims
      title: GroupInput
      type: object
    GroupMembers:
      properties:
        members:
          description: The members that belong to this group, defined by values of
            preferred_username.
          items:
            type: string
          type: array
      required:
      - members
      type: object
    GroupMembersInput:
      description: Details about the members to include
      example:
        members:
        - members
        - members
      properties:
        members:
          description: The members that belong to this group, defined by values of
            preferred_username.
          items:
            type: string
          type: array
      required:
      - members
      title: GroupMembersInput
      type: object
    IdentityAttribute:
      example:
        name: name
        type: type
        required: true
      properties:
        name:
          description: The name of the attribute
          type: string
        required:
          description: Flag that determine if the attribute is required or not
          type: boolean
        type:
          description: The data type of the attribute
          type: string
      required:
      - name
      - required
      - type
      type: object
    IdentityAttributes:
      description: Details about the identity attributes
      example:
        attributes:
        - name: name
          type: type
          required: true
        - name: name
          type: type
          required: true
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/IdentityAttribute'
          type: array
      title: IdentityAttributes
      type: object
    IdentityProvider:
      properties:
        attributeMapping:
          additionalProperties:
            type: string
          description: The identity provider attribute mapping
          type: object
        description:
          description: A description of the identity provider
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        details:
          description: Parameters to configure the identity provider
          type: object
        enabled:
          default: true
          description: Specify if the identity provider is enabled or not
          type: boolean
        identifiers:
          description: A list of identity provider identifiers
          items:
            maxLength: 256
            pattern: '[\w\s+=.@-]+'
            type: string
          type: array
        identityProviderId:
          description: The id of identity provider
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          description: The name of the identity provider
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          $ref: '#/components/schemas/IdentityProviderTypeEnum'
      required:
      - details
      - identityProviderId
      - name
      - type
      type: object
    IdentityProviderEntity:
      example:
        attributeMapping:
          key: attributeMapping
        updatedBy: updatedBy
        createdBy: createdBy
        identifiers:
        - identifiers
        - identifiers
        createdTimestamp: createdTimestamp
        name: name
        description: description
        details: '{}'
        updatedTimestamp: updatedTimestamp
        enabled: true
        identityProviderId: identityProviderId
      properties:
        attributeMapping:
          additionalProperties:
            type: string
          description: The identity provider attribute mapping
          type: object
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          description: A description of the identity provider
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        details:
          description: Parameters to configure the identity provider
          type: object
        enabled:
          default: true
          description: Specify if the identity provider is enabled or not
          type: boolean
        identifiers:
          description: A list of identity provider identifiers
          items:
            maxLength: 256
            pattern: '[\w\s+=.@-]+'
            type: string
          type: array
        identityProviderId:
          description: The id of identity provider
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          description: The name of the identity provider
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          $ref: '#/components/schemas/IdentityProviderTypeEnum'
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - details
      - identityProviderId
      - name
      - type
      type: object
    IdentityProviderIdentifier:
      properties:
        identityProviderId:
          description: The id of identity provider
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - identityProviderId
      type: object
    IdentityProviderInput:
      description: Details about the identity provider to connect
      example:
        attributeMapping:
          key: attributeMapping
        identifiers:
        - identifiers
        - identifiers
        name: name
        description: description
        details: '{}'
        updatedTimestamp: updatedTimestamp
        enabled: true
        identityProviderId: identityProviderId
      properties:
        attributeMapping:
          additionalProperties:
            type: string
          description: The identity provider attribute mapping
          type: object
        description:
          description: A description of the identity provider
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        details:
          description: Parameters to configure the identity provider
          type: object
        enabled:
          default: true
          description: Specify if the identity provider is enabled or not
          type: boolean
        identifiers:
          description: A list of identity provider identifiers
          items:
            maxLength: 256
            pattern: '[\w\s+=.@-]+'
            type: string
          type: array
        identityProviderId:
          description: The id of identity provider
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        name:
          description: The name of the identity provider
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          $ref: '#/components/schemas/IdentityProviderTypeEnum'
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - details
      - name
      - type
      title: IdentityProviderInput
      type: object
    IdentityProviderTypeEnum:
      description: The type of identity provider, SAML, OIDC, etc
      enum:
      - SAML
      - OIDC
      - Google
      - LoginWithAmazon
      type: string
    LensEnum:
      description: Lens value
      enum:
      - clear
      - hidden
      - hashed
      - ada_detect_pii_types
      type: string
    ListApiAccessPoliciesResponse:
      description: Available api access policies to associate with groups
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        policies:
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          resources:
          - resources
          - resources
          updatedTimestamp: updatedTimestamp
          apiAccessPolicyId: apiAccessPolicyId
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          resources:
          - resources
          - resources
          updatedTimestamp: updatedTimestamp
          apiAccessPolicyId: apiAccessPolicyId
      properties:
        nextToken:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/ApiAccessPolicyEntity'
          type: array
        totalItems:
          type: number
      required:
      - policies
      title: ListApiAccessPoliciesResponse
      type: object
    ListDataProductDomainDataProductsResponse:
      description: The list of all data products
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        dataProducts:
        - latestDataUpdateTimestamp: latestDataUpdateTimestamp
          updateTrigger:
            scheduleRate: scheduleRate
          description: description
          parentDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          updatedTimestamp: updatedTimestamp
          enableAutomaticTransforms: true
          dataProductId: dataProductId
          infrastructureStatusDetails: infrastructureStatusDetails
          dataStatusDetails: dataStatusDetails
          sourceDetails: '{}'
          enableAutomaticPii: true
          updatedBy: updatedBy
          cloudFormationStackId: cloudFormationStackId
          createdTimestamp: createdTimestamp
          childDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          dataImportStateMachineArn: dataImportStateMachineArn
          domainId: domainId
          createdBy: createdBy
          name: name
          sourceDataStatusDetails: sourceDataStatusDetails
        - latestDataUpdateTimestamp: latestDataUpdateTimestamp
          updateTrigger:
            scheduleRate: scheduleRate
          description: description
          parentDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          updatedTimestamp: updatedTimestamp
          enableAutomaticTransforms: true
          dataProductId: dataProductId
          infrastructureStatusDetails: infrastructureStatusDetails
          dataStatusDetails: dataStatusDetails
          sourceDetails: '{}'
          enableAutomaticPii: true
          updatedBy: updatedBy
          cloudFormationStackId: cloudFormationStackId
          createdTimestamp: createdTimestamp
          childDataProducts:
          - dataProductId: dataProductId
            domainId: domainId
          - dataProductId: dataProductId
            domainId: domainId
          dataImportStateMachineArn: dataImportStateMachineArn
          domainId: domainId
          createdBy: createdBy
          name: name
          sourceDataStatusDetails: sourceDataStatusDetails
      properties:
        dataProducts:
          items:
            $ref: '#/components/schemas/DataProductEntity'
          type: array
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - dataProducts
      title: ListDataProductDomainDataProductsResponse
      type: object
    ListDataProductDomainsResponse:
      description: The list of all domains
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        domains:
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          updatedTimestamp: updatedTimestamp
          domainId: domainId
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          updatedTimestamp: updatedTimestamp
          domainId: domainId
      properties:
        domains:
          items:
            $ref: '#/components/schemas/DomainEntity'
          type: array
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - domains
      title: ListDataProductDomainsResponse
      type: object
    ListDataProductScriptsResponse:
      description: The list of all scripts
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        scripts:
        - scriptId: scriptId
          versionId: versionId
          inputSchema: '{}'
          name: name
          namespace: namespace
          description: description
          source: source
          helperText: helperText
        - scriptId: scriptId
          versionId: versionId
          inputSchema: '{}'
          name: name
          namespace: namespace
          description: description
          source: source
          helperText: helperText
      properties:
        nextToken:
          type: string
        scripts:
          items:
            $ref: '#/components/schemas/Script'
          type: array
        totalItems:
          type: number
      required:
      - scripts
      title: ListDataProductScriptsResponse
      type: object
    ListIdentityGroupsResponse:
      description: The list of all groups
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        groups:
        - autoAssignUsers: true
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          groupId: groupId
          members:
          - members
          - members
          apiAccessPolicyIds:
          - apiAccessPolicyIds
          - apiAccessPolicyIds
          claims:
          - claims
          - claims
          description: description
          updatedTimestamp: updatedTimestamp
        - autoAssignUsers: true
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          groupId: groupId
          members:
          - members
          - members
          apiAccessPolicyIds:
          - apiAccessPolicyIds
          - apiAccessPolicyIds
          claims:
          - claims
          - claims
          description: description
          updatedTimestamp: updatedTimestamp
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupEntity'
          type: array
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - groups
      title: ListIdentityGroupsResponse
      type: object
    ListIdentityMachinesResponse:
      description: The list of all machines
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        machines:
        - machineId: machineId
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          description: description
          updatedTimestamp: updatedTimestamp
        - machineId: machineId
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          description: description
          updatedTimestamp: updatedTimestamp
      properties:
        machines:
          items:
            $ref: '#/components/schemas/MachineEntity'
          type: array
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - machines
      title: ListIdentityMachinesResponse
      type: object
    ListIdentityMachineTokensResponse:
      description: The machine tokens with the given id
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        tokens:
        - clientId: clientId
          updatedBy: updatedBy
          tokenId: tokenId
          authToken: authToken
          createdTimestamp: createdTimestamp
          updatedTimestamp: updatedTimestamp
          enabled: true
          authUrl: authUrl
          machineId: machineId
          createdBy: createdBy
          clientSecret: clientSecret
          expiration: expiration
          username: username
        - clientId: clientId
          updatedBy: updatedBy
          tokenId: tokenId
          authToken: authToken
          createdTimestamp: createdTimestamp
          updatedTimestamp: updatedTimestamp
          enabled: true
          authUrl: authUrl
          machineId: machineId
          createdBy: createdBy
          clientSecret: clientSecret
          expiration: expiration
          username: username
      properties:
        nextToken:
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/TokenEntity'
          type: array
        totalItems:
          type: number
      required:
      - tokens
      title: ListIdentityMachineTokensResponse
      type: object
    ListIdentityProvidersResponse:
      description: The list of all providers
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        providers:
        - attributeMapping:
            key: attributeMapping
          updatedBy: updatedBy
          createdBy: createdBy
          identifiers:
          - identifiers
          - identifiers
          createdTimestamp: createdTimestamp
          name: name
          description: description
          details: '{}'
          updatedTimestamp: updatedTimestamp
          enabled: true
          identityProviderId: identityProviderId
        - attributeMapping:
            key: attributeMapping
          updatedBy: updatedBy
          createdBy: createdBy
          identifiers:
          - identifiers
          - identifiers
          createdTimestamp: createdTimestamp
          name: name
          description: description
          details: '{}'
          updatedTimestamp: updatedTimestamp
          enabled: true
          identityProviderId: identityProviderId
      properties:
        nextToken:
          type: string
        providers:
          items:
            $ref: '#/components/schemas/IdentityProviderEntity'
          type: array
        totalItems:
          type: number
      required:
      - providers
      title: ListIdentityProvidersResponse
      type: object
    ListIdentityRequestsResponse:
      description: The access requests with the given id
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        accessRequests:
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          groupId: groupId
          message: message
          updatedTimestamp: updatedTimestamp
          userId: userId
        - updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          groupId: groupId
          message: message
          updatedTimestamp: updatedTimestamp
          userId: userId
      properties:
        accessRequests:
          items:
            $ref: '#/components/schemas/AccessRequestEntity'
          type: array
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - accessRequests
      title: ListIdentityRequestsResponse
      type: object
    ListIdentityUsersResponse:
      description: The list of the users currently available in Cognito
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        users:
        - customGroups: customGroups
          sub: sub
          address: address
          updatedBy: updatedBy
          preferredUsername: preferredUsername
          createdTimestamp: createdTimestamp
          givenName: givenName
          updatedTimestamp: updatedTimestamp
          phoneNumber: phoneNumber
          createdBy: createdBy
          familyName: familyName
          name: name
          nickname: nickname
          middleName: middleName
          email: email
          username: username
        - customGroups: customGroups
          sub: sub
          address: address
          updatedBy: updatedBy
          preferredUsername: preferredUsername
          createdTimestamp: createdTimestamp
          givenName: givenName
          updatedTimestamp: updatedTimestamp
          phoneNumber: phoneNumber
          createdBy: createdBy
          familyName: familyName
          name: name
          nickname: nickname
          middleName: middleName
          email: email
          username: username
      properties:
        nextToken:
          type: string
        totalItems:
          type: number
        users:
          items:
            $ref: '#/components/schemas/UserEntity'
          type: array
      required:
      - users
      title: ListIdentityUsersResponse
      type: object
    ListNotificationsResponse:
      description: The notifications for the calling user (optionally filtered by
        status)
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        notifications:
        - updatedBy: updatedBy
          createdBy: createdBy
          payload: '{}'
          targetAndStatus: targetAndStatus
          createdTimestamp: createdTimestamp
          notificationId: notificationId
          source: source
          type: type
          updatedTimestamp: updatedTimestamp
          status: PENDING
          target: target
        - updatedBy: updatedBy
          createdBy: createdBy
          payload: '{}'
          targetAndStatus: targetAndStatus
          createdTimestamp: createdTimestamp
          notificationId: notificationId
          source: source
          type: type
          updatedTimestamp: updatedTimestamp
          status: PENDING
          target: target
      properties:
        nextToken:
          type: string
        notifications:
          items:
            $ref: '#/components/schemas/PersistedNotificationEntity'
          type: array
        totalItems:
          type: number
      required:
      - notifications
      title: ListNotificationsResponse
      type: object
    ListOntologiesResponse:
      description: The list of all ontologies
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        ontologies:
        - aliases:
          - name: name
          - name: name
          updatedBy: updatedBy
          ontologyNamespace: ontologyNamespace
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          ontologyId: ontologyId
          updatedTimestamp: updatedTimestamp
        - aliases:
          - name: name
          - name: name
          updatedBy: updatedBy
          ontologyNamespace: ontologyNamespace
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          name: name
          description: description
          ontologyId: ontologyId
          updatedTimestamp: updatedTimestamp
      properties:
        nextToken:
          type: string
        ontologies:
          items:
            $ref: '#/components/schemas/OntologyEntity'
          type: array
        totalItems:
          type: number
      required:
      - ontologies
      title: ListOntologiesResponse
      type: object
    ListOntologyFindByAliasesResponse:
      description: The matching ontology for each given alias
      example:
        totalItems: 0.8008281904610115
        aliases:
          key:
            aliases:
            - name: name
            - name: name
            updatedBy: updatedBy
            ontologyNamespace: ontologyNamespace
            createdBy: createdBy
            createdTimestamp: createdTimestamp
            name: name
            description: description
            ontologyId: ontologyId
            updatedTimestamp: updatedTimestamp
        nextToken: nextToken
      properties:
        aliases:
          additionalProperties:
            $ref: '#/components/schemas/OntologyEntity'
          description: A map of alias to the matching ontology attribute
          type: object
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - aliases
      title: ListOntologyFindByAliasesResponse
      type: object
    ListQueryHistoriesResponse:
      description: The list of queries performed by a specific user, order by execution
        date (desc)
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        queries:
        - executionId: executionId
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          query: query
          updatedTimestamp: updatedTimestamp
        - executionId: executionId
          updatedBy: updatedBy
          createdBy: createdBy
          createdTimestamp: createdTimestamp
          query: query
          updatedTimestamp: updatedTimestamp
      properties:
        nextToken:
          type: string
        queries:
          items:
            $ref: '#/components/schemas/QueryHistoryEntity'
          type: array
        totalItems:
          type: number
      required:
      - queries
      title: ListQueryHistoriesResponse
      type: object
    Machine:
      properties:
        description:
          description: A description of the machine
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - machineId
      type: object
    MachineEntity:
      example:
        machineId: machineId
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        description: description
        updatedTimestamp: updatedTimestamp
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          description: A description of the machine
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - machineId
      type: object
    MachineIdentifier:
      properties:
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - machineId
      type: object
    MachineInput:
      description: Details about the new machine
      example:
        machineId: machineId
        description: description
        updatedTimestamp: updatedTimestamp
      properties:
        description:
          description: A description of the machine
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      title: MachineInput
      type: object
    MetricValue:
      example:
        amount: amount
        unit: unit
      properties:
        amount:
          description: The actual number that represents the metric.
          type: string
        unit:
          description: The unit that the metric is given in.
          type: string
      type: object
    Notification:
      description: A notification as sent throughout the system
      properties:
        payload:
          description: Payload to send in the notification, can be any object
          type: object
        source:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        target:
          description: Specified if the notification should target a particular recipient,
            for example a user id.
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - payload
      - source
      - type
      type: object
    Ontology:
      description: Uniquely identifies the ontology attribute.
      properties:
        aliases:
          description: Alternate names for the ontology attribute, used for ontology
            suggestions
          items:
            $ref: '#/components/schemas/OntologyAlias'
          type: array
        defaultLens:
          $ref: '#/components/schemas/LensEnum'
        description:
          description: A description of the ontology attribute
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: The name of the ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        ontologyId:
          description: Identifies the ontology attribute within the ontologyNamespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The namespace the ontology attribute belongs to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - aliases
      - name
      - ontologyId
      - ontologyNamespace
      type: object
    OntologyAlias:
      example:
        name: name
      properties:
        name:
          description: The name of an alias for this ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - name
      type: object
    OntologyEntity:
      description: Uniquely identifies the ontology attribute.
      example:
        aliases:
        - name: name
        - name: name
        updatedBy: updatedBy
        ontologyNamespace: ontologyNamespace
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        name: name
        description: description
        ontologyId: ontologyId
        updatedTimestamp: updatedTimestamp
      properties:
        aliases:
          description: Alternate names for the ontology attribute, used for ontology
            suggestions
          items:
            $ref: '#/components/schemas/OntologyAlias'
          type: array
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        defaultLens:
          $ref: '#/components/schemas/LensEnum'
        description:
          description: A description of the ontology attribute
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: The name of the ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        ontologyId:
          description: Identifies the ontology attribute within the ontologyNamespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The namespace the ontology attribute belongs to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - aliases
      - name
      - ontologyId
      - ontologyNamespace
      type: object
    OntologyIdentifier:
      description: Uniquely identifies the ontology attribute.
      properties:
        ontologyId:
          description: Identifies the ontology attribute within the ontologyNamespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The namespace the ontology attribute belongs to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - ontologyId
      - ontologyNamespace
      type: object
    OntologyInput:
      description: Uniquely identifies the ontology attribute.
      example:
        aliases:
        - name: name
        - name: name
        ontologyNamespace: ontologyNamespace
        name: name
        description: description
        ontologyId: ontologyId
        updatedTimestamp: updatedTimestamp
      properties:
        aliases:
          description: Alternate names for the ontology attribute, used for ontology
            suggestions
          items:
            $ref: '#/components/schemas/OntologyAlias'
          type: array
        defaultLens:
          $ref: '#/components/schemas/LensEnum'
        description:
          description: A description of the ontology attribute
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        name:
          description: The name of the ontology attribute
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        ontologyId:
          description: Identifies the ontology attribute within the ontologyNamespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        ontologyNamespace:
          description: The namespace the ontology attribute belongs to
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - aliases
      - name
      title: OntologyInput
      type: object
    PaginatedQueryResult:
      description: The result of a query execution
      example:
        totalItems: 1.4658129805029452
        data:
        - null
        - null
        columns:
        - nullable: nullable
          caseSensitive: true
          precision: 0.8008281904610115
          name: name
          scale: 6.027456183070403
          label: label
          type: type
        - nullable: nullable
          caseSensitive: true
          precision: 0.8008281904610115
          name: name
          scale: 6.027456183070403
          label: label
          type: type
        nextToken: nextToken
        error: error
      properties:
        columns:
          items:
            $ref: '#/components/schemas/QueryResultColumnMetadata'
          type: array
        data:
          items:
            $ref: '#/components/schemas/QueryResultData'
          type: array
        dataIntegrity:
          $ref: '#/components/schemas/DataIntegrityEnum'
        error:
          type: string
        nextToken:
          type: string
        totalItems:
          type: number
      required:
      - columns
      - data
      title: PaginatedQueryResult
      type: object
    PaginatedQueryResultAsAthena:
      description: The result of a query execution
      example:
        updateCount: 0
        nextToken: nextToken
        resultSet: '{}'
      properties:
        nextToken:
          type: string
        resultSet:
          type: object
        updateCount:
          type: integer
      title: PaginatedQueryResultAsAthena
      type: object
    PaginatedResponse:
      properties:
        nextToken:
          type: string
        totalItems:
          type: number
      type: object
    Permission:
      description: Define the permission for the given route
      properties:
        access:
          description: A flag that define whether the user can call this route or
            not
          type: boolean
      type: object
    PersistedNotification:
      description: An object containing a persisted notification status
      properties:
        notificationId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        payload:
          description: Payload to send in the notification, can be any object
          type: object
        source:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        status:
          enum:
          - PENDING
          - ACKNOWLEDGED
          - DISMISSED
          type: string
        target:
          description: The target of the notification, for example the userId
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        targetAndStatus:
          description: Composite key for index of notification by target and status.
            Delimited by .
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - notificationId
      - payload
      - source
      - status
      - target
      - targetAndStatus
      - type
      type: object
    PersistedNotificationEntity:
      description: An object containing a persisted notification status
      example:
        updatedBy: updatedBy
        createdBy: createdBy
        payload: '{}'
        targetAndStatus: targetAndStatus
        createdTimestamp: createdTimestamp
        notificationId: notificationId
        source: source
        type: type
        updatedTimestamp: updatedTimestamp
        status: PENDING
        target: target
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        notificationId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        payload:
          description: Payload to send in the notification, can be any object
          type: object
        source:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        status:
          enum:
          - PENDING
          - ACKNOWLEDGED
          - DISMISSED
          type: string
        target:
          description: The target of the notification, for example the userId
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        targetAndStatus:
          description: Composite key for index of notification by target and status.
            Delimited by .
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        type:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - notificationId
      - payload
      - source
      - status
      - target
      - targetAndStatus
      - type
      type: object
    PersistedNotificationIdentifier:
      properties:
        notificationId:
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        target:
          description: The target of the notification, for example the userId
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - notificationId
      - target
      type: object
    PersistedNotificationStatus:
      description: An object containing a persisted notification status
      example:
        status: PENDING
      properties:
        status:
          enum:
          - PENDING
          - ACKNOWLEDGED
          - DISMISSED
          type: string
      required:
      - status
      type: object
    PostQueryParseRenderDiscoverResponse:
      description: The data products discovered from the query
      example:
        tables:
        - identifierParts:
          - identifierParts
          - identifierParts
        - identifierParts:
          - identifierParts
          - identifierParts
      properties:
        tables:
          items:
            $ref: '#/components/schemas/PostQueryParseRenderDiscoverResponse_tables'
          type: array
      required:
      - tables
      title: PostQueryParseRenderDiscoverResponse
      type: object
    PostQueryParseRenderValidateAttributeValuePolicyRequest:
      description: The attribute value policy to validate
      example:
        clause: clause
        attribute: attribute
      properties:
        attribute:
          description: The attribute to be replaced in the sql clause
          type: string
        clause:
          description: The SQL clause to validate
          type: string
      required:
      - attribute
      - clause
      title: PostQueryParseRenderValidateAttributeValuePolicyRequest
      type: object
    PostQueryParseRenderValidateAttributeValuePolicyResponse:
      description: An empty response if validation is successful
      properties: {}
      title: PostQueryParseRenderValidateAttributeValuePolicyResponse
      type: object
    PutGovernancePolicyAttributesRequest:
      description: List of attribute policies to write
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicy'
          type: array
      required:
      - policies
      title: PutGovernancePolicyAttributesRequest
      type: object
    PutGovernancePolicyAttributesResponse:
      description: The written attribute policies
      example:
        policies:
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
        - namespaceAndAttributeId: namespaceAndAttributeId
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributePolicy'
          type: array
      required:
      - policies
      title: PutGovernancePolicyAttributesResponse
      type: object
    PutGovernancePolicyAttributeValuesRequest:
      description: List of attribute value policies to write
      example:
        policies:
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributeValuePolicy'
          type: array
      required:
      - policies
      title: PutGovernancePolicyAttributeValuesRequest
      type: object
    PutGovernancePolicyAttributeValuesResponse:
      description: The written attribute value policies
      example:
        policies:
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
        - sqlClause: sqlClause
          namespaceAndAttributeId: namespaceAndAttributeId
          description: description
          group: group
      properties:
        policies:
          items:
            $ref: '#/components/schemas/AttributeValuePolicy'
          type: array
      required:
      - policies
      title: PutGovernancePolicyAttributeValuesResponse
      type: object
    PutIdentityRequestActionRequest:
      description: Approve or Deny AccessRequest
      example:
        reason: reason
      properties:
        reason:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
      required:
      - reason
      title: PutIdentityRequestActionRequest
      type: object
    PutIdentityRequestActionResponse:
      description: The new details of the AccessRequest
      example:
        reason: reason
      properties:
        reason:
          type: string
      required:
      - reason
      title: PutIdentityRequestActionResponse
      type: object
    Query:
      example:
        query: query
      properties:
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
      required:
      - query
      type: object
    QueryDownload:
      description: A download url for the full result of a query
      example:
        signedUrl: signedUrl
      properties:
        signedUrl:
          type: string
      required:
      - signedUrl
      title: QueryDownload
      type: object
    QueryExecution:
      description: An execution id to track the status or retrieve the result of a
        query
      example:
        executionId: executionId
      properties:
        executionId:
          type: string
      required:
      - executionId
      title: QueryExecution
      type: object
    QueryExecutionStatusEnum:
      description: Status for a query execution
      enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      - TIMED_OUT
      - ABORTED
      - QUEUED
      - CANCELLED
      type: string
    QueryHistory:
      properties:
        executionId:
          type: string
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
      required:
      - executionId
      - query
      type: object
    QueryHistoryEntity:
      example:
        executionId: executionId
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        query: query
        updatedTimestamp: updatedTimestamp
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        executionId:
          type: string
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - executionId
      - query
      type: object
    QueryResult:
      example:
        data:
        - null
        - null
        columns:
        - nullable: nullable
          caseSensitive: true
          precision: 0.8008281904610115
          name: name
          scale: 6.027456183070403
          label: label
          type: type
        - nullable: nullable
          caseSensitive: true
          precision: 0.8008281904610115
          name: name
          scale: 6.027456183070403
          label: label
          type: type
      properties:
        columns:
          items:
            $ref: '#/components/schemas/QueryResultColumnMetadata'
          type: array
        data:
          items:
            $ref: '#/components/schemas/QueryResultData'
          type: array
        dataIntegrity:
          $ref: '#/components/schemas/DataIntegrityEnum'
      required:
      - columns
      - data
      type: object
    QueryResultColumnMetadata:
      example:
        nullable: nullable
        caseSensitive: true
        precision: 0.8008281904610115
        name: name
        scale: 6.027456183070403
        label: label
        type: type
      properties:
        caseSensitive:
          type: boolean
        label:
          type: string
        name:
          type: string
        nullable:
          type: string
        precision:
          description: For decimal data types, specifies the total number of digits
          type: number
        scale:
          description: For decimal data types, specifies the total number of digits
            in the fractional part of the value
          type: number
        type:
          type: string
      required:
      - name
      - type
      type: object
    QueryResultData:
      additionalProperties:
        type: string
      type: object
    QueryRewriteInput:
      description: Input for a query rewrite request
      example:
        querySubstitutions:
          key:
            query: query
        query: query
        dataProducts:
          key:
            columns:
            - clauses:
              - clauses
              - clauses
              name: name
              udfs:
              - name: name
                outputType: outputType
                inputType: inputType
              - name: name
                outputType: outputType
                inputType: inputType
              attribute: attribute
            - clauses:
              - clauses
              - clauses
              name: name
              udfs:
              - name: name
                outputType: outputType
                inputType: inputType
              - name: name
                outputType: outputType
                inputType: inputType
              attribute: attribute
            tableName: tableName
      properties:
        dataProducts:
          additionalProperties:
            $ref: '#/components/schemas/QueryRewriteInput_dataProducts'
          description: Map of data product (as referenced in the query) to details
            about the data product for governance
          type: object
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        querySubstitutions:
          additionalProperties:
            $ref: '#/components/schemas/QueryRewriteInput_querySubstitutions'
          description: A map of query name (as referenced in the input query) to the
            query to be substituted. Recursive references are allowed so long as they
            are not circular.
          type: object
      required:
      - dataProducts
      - query
      title: QueryRewriteInput
      type: object
    QuerySchema:
      description: The schema for a data product
      example: {}
      properties:
        schema:
          $ref: '#/components/schemas/Schema'
      required:
      - schema
      title: QuerySchema
      type: object
    QueryStatus:
      description: The status of a query execution
      example:
        reason: reason
      properties:
        reason:
          description: Failure status reason
          type: string
        status:
          $ref: '#/components/schemas/QueryExecutionStatusEnum'
      required:
      - status
      title: QueryStatus
      type: object
    ReferencedDataSetIdentifier:
      example:
        dataProductId: dataProductId
        dataSetId: dataSetId
        addressedAs: addressedAs
        domainId: domainId
      properties:
        addressedAs:
          description: How the data set was referenced in a query
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataProductId:
          description: The id of the data product
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        dataSetId:
          description: The id of the data set
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        domainId:
          description: The id of the domain to which this data product belongs
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - addressedAs
      - dataProductId
      - dataSetId
      - domainId
      type: object
    S3Location:
      description: Details about the bucket and the object that have been stored
      example:
        bucket: bucket
        key: key
      properties:
        bucket:
          maxLength: 63
          minLength: 3
          pattern: ^[a-z0-9]+[a-z0-9-]+[a-z0-9]+$
          type: string
        key:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9!_.*'()-]+(/[a-zA-Z0-9!_.*'()-]+)*$
          type: string
      required:
      - bucket
      - key
      title: S3Location
      type: object
    SavedQuery:
      properties:
        addressedAs:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        namespace:
          description: The namespace for this query
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        queryId:
          description: The id of the query within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        referencedDataSets:
          items:
            $ref: '#/components/schemas/ReferencedDataSetIdentifier'
          type: array
        referencedQueries:
          items:
            $ref: '#/components/schemas/SavedQueryIdentifier'
          type: array
        tags:
          $ref: '#/components/schemas/Tags'
        type:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
      required:
      - addressedAs
      - namespace
      - query
      - queryId
      - referencedDataSets
      - referencedQueries
      - type
      type: object
    SavedQueryEntity:
      example:
        referencedDataSets:
        - dataProductId: dataProductId
          dataSetId: dataSetId
          addressedAs: addressedAs
          domainId: domainId
        - dataProductId: dataProductId
          dataSetId: dataSetId
          addressedAs: addressedAs
          domainId: domainId
        updatedBy: updatedBy
        createdTimestamp: createdTimestamp
        query: query
        description: description
        addressedAs: addressedAs
        type: PUBLIC
        updatedTimestamp: updatedTimestamp
        queryId: queryId
        createdBy: createdBy
        namespace: namespace
        referencedQueries:
        - namespace: namespace
          queryId: queryId
        - namespace: namespace
          queryId: queryId
      properties:
        addressedAs:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        namespace:
          description: The namespace for this query
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        queryId:
          description: The id of the query within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        referencedDataSets:
          items:
            $ref: '#/components/schemas/ReferencedDataSetIdentifier'
          type: array
        referencedQueries:
          items:
            $ref: '#/components/schemas/SavedQueryIdentifier'
          type: array
        tags:
          $ref: '#/components/schemas/Tags'
        type:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - addressedAs
      - namespace
      - query
      - queryId
      - referencedDataSets
      - referencedQueries
      - type
      type: object
    SavedQueryIdentifier:
      example:
        namespace: namespace
        queryId: queryId
      properties:
        namespace:
          description: The namespace for this query
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        queryId:
          description: The id of the query within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - namespace
      - queryId
      type: object
    SavedQueryInput:
      description: The query to save
      example:
        referencedDataSets:
        - dataProductId: dataProductId
          dataSetId: dataSetId
          addressedAs: addressedAs
          domainId: domainId
        - dataProductId: dataProductId
          dataSetId: dataSetId
          addressedAs: addressedAs
          domainId: domainId
        query: query
        namespace: namespace
        description: description
        addressedAs: addressedAs
        type: PUBLIC
        updatedTimestamp: updatedTimestamp
        queryId: queryId
        referencedQueries:
        - namespace: namespace
          queryId: queryId
        - namespace: namespace
          queryId: queryId
      properties:
        addressedAs:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        description:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        namespace:
          description: The namespace for this query
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        query:
          description: An SQL query
          maxLength: 262144
          pattern: ^([\s\S]+)$
          type: string
        queryId:
          description: The id of the query within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        referencedDataSets:
          items:
            $ref: '#/components/schemas/ReferencedDataSetIdentifier'
          type: array
        referencedQueries:
          items:
            $ref: '#/components/schemas/SavedQueryIdentifier'
          type: array
        tags:
          $ref: '#/components/schemas/Tags'
        type:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      required:
      - query
      title: SavedQueryInput
      type: object
    SavedQueryList:
      description: The list of all public saved queries
      example:
        totalItems: 0.8008281904610115
        nextToken: nextToken
        queries:
        - referencedDataSets:
          - dataProductId: dataProductId
            dataSetId: dataSetId
            addressedAs: addressedAs
            domainId: domainId
          - dataProductId: dataProductId
            dataSetId: dataSetId
            addressedAs: addressedAs
            domainId: domainId
          updatedBy: updatedBy
          createdTimestamp: createdTimestamp
          query: query
          description: description
          addressedAs: addressedAs
          type: PUBLIC
          updatedTimestamp: updatedTimestamp
          queryId: queryId
          createdBy: createdBy
          namespace: namespace
          referencedQueries:
          - namespace: namespace
            queryId: queryId
          - namespace: namespace
            queryId: queryId
        - referencedDataSets:
          - dataProductId: dataProductId
            dataSetId: dataSetId
            addressedAs: addressedAs
            domainId: domainId
          - dataProductId: dataProductId
            dataSetId: dataSetId
            addressedAs: addressedAs
            domainId: domainId
          updatedBy: updatedBy
          createdTimestamp: createdTimestamp
          query: query
          description: description
          addressedAs: addressedAs
          type: PUBLIC
          updatedTimestamp: updatedTimestamp
          queryId: queryId
          createdBy: createdBy
          namespace: namespace
          referencedQueries:
          - namespace: namespace
            queryId: queryId
          - namespace: namespace
            queryId: queryId
      properties:
        nextToken:
          type: string
        queries:
          items:
            $ref: '#/components/schemas/SavedQueryEntity'
          type: array
        totalItems:
          type: number
      required:
      - queries
      title: SavedQueryList
      type: object
    Schema:
      additionalProperties:
        type: string
      type: object
    Script:
      description: Uniquely identifies the script. Used to calculate the script path
        in s3
      example:
        scriptId: scriptId
        versionId: versionId
        inputSchema: '{}'
        name: name
        namespace: namespace
        description: description
        source: source
        helperText: helperText
      properties:
        description:
          description: Description of the script
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        helperText:
          description: helper text for the script definition
          type: string
        inputSchema:
          description: input args definition
          type: object
        name:
          description: Name of the script
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        namespace:
          description: The namespace in which the script resides, eg the domain.
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        scriptId:
          description: Identifies the script within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        source:
          description: The script content, supplied when creating a script and returned
            when retrieving an individual script
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
        versionId:
          description: The version of the script
          type: string
      required:
      - name
      - namespace
      - scriptId
      type: object
    ScriptEntity:
      description: Uniquely identifies the script. Used to calculate the script path
        in s3
      example:
        scriptId: scriptId
        versionId: versionId
        updatedBy: updatedBy
        createdBy: createdBy
        inputSchema: '{}'
        createdTimestamp: createdTimestamp
        name: name
        namespace: namespace
        description: description
        source: source
        helperText: helperText
        updatedTimestamp: updatedTimestamp
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        description:
          description: Description of the script
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        helperText:
          description: helper text for the script definition
          type: string
        inputSchema:
          description: input args definition
          type: object
        name:
          description: Name of the script
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        namespace:
          description: The namespace in which the script resides, eg the domain.
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        scriptId:
          description: Identifies the script within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        source:
          description: The script content, supplied when creating a script and returned
            when retrieving an individual script
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        versionId:
          description: The version of the script
          type: string
      required:
      - name
      - namespace
      - scriptId
      title: ScriptEntity
      type: object
    ScriptIdentifier:
      description: Uniquely identifies the script. Used to calculate the script path
        in s3
      properties:
        namespace:
          description: The namespace in which the script resides, eg the domain.
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        scriptId:
          description: Identifies the script within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - namespace
      - scriptId
      type: object
    ScriptInput:
      description: Uniquely identifies the script. Used to calculate the script path
        in s3
      example:
        scriptId: scriptId
        versionId: versionId
        inputSchema: '{}'
        name: name
        namespace: namespace
        description: description
        source: source
        helperText: helperText
        updatedTimestamp: updatedTimestamp
      properties:
        description:
          description: Description of the script
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        helperText:
          description: helper text for the script definition
          type: string
        inputSchema:
          description: input args definition
          type: object
        name:
          description: Name of the script
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        namespace:
          description: The namespace in which the script resides, eg the domain.
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        scriptId:
          description: Identifies the script within the namespace
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        source:
          description: The script content, supplied when creating a script and returned
            when retrieving an individual script
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        versionId:
          description: The version of the script
          type: string
      required:
      - name
      - source
      title: ScriptInput
      type: object
    ScriptSource:
      description: The script content, supplied when creating a script and returned
        when retrieving an individual script
      maxLength: 262144
      pattern: ^[\s\S]*def apply_transform\([\s\S]*$
      type: string
    ScriptSourceValidationInput:
      description: Validate user provided script for vulnerabilities
      example:
        scriptSource: scriptSource
      properties:
        scriptSource:
          description: The script source to validate
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
      required:
      - scriptSource
      title: ScriptSourceValidationInput
      type: object
    ScriptSourceValidationOutput:
      description: Report containing the vulnerabilities of a script after scanning
      example:
        scriptSource: scriptSource
        report:
          generatedAt: generatedAt
          metrics:
            severity:
              HIGH: 0
              MEDIUM: 1
              LOW: 6
            loc: 5
            skippedTests: 2
            nosec: 5
            confidence:
              HIGH: 0
              MEDIUM: 1
              LOW: 6
          passed: true
          results:
          - cwe:
              link: link
              id: 9
            columnOffset: 7
            code: code
            filename: filename
            issueText: issueText
            testId: testId
            lineRange:
            - 2
            - 2
            lineNumber: 3
            moreInfo: moreInfo
            testName: testName
          - cwe:
              link: link
              id: 9
            columnOffset: 7
            code: code
            filename: filename
            issueText: issueText
            testId: testId
            lineRange:
            - 2
            - 2
            lineNumber: 3
            moreInfo: moreInfo
            testName: testName
          errors:
          - '{}'
          - '{}'
      properties:
        report:
          $ref: '#/components/schemas/ScriptVulnerabilityReport'
        scriptSource:
          description: The script source that was validated
          maxLength: 262144
          pattern: ^[\s\S]*def apply_transform\([\s\S]*$
          type: string
      required:
      - report
      - scriptSource
      title: ScriptSourceValidationOutput
      type: object
    ScriptVulnerabilityLevel:
      description: Bandit level enum
      enum:
      - LOW
      - MEDIUM
      - HIGH
      type: string
    ScriptVulnerabilityReport:
      description: Bandit python vulnerability scan output
      example:
        generatedAt: generatedAt
        metrics:
          severity:
            HIGH: 0
            MEDIUM: 1
            LOW: 6
          loc: 5
          skippedTests: 2
          nosec: 5
          confidence:
            HIGH: 0
            MEDIUM: 1
            LOW: 6
        passed: true
        results:
        - cwe:
            link: link
            id: 9
          columnOffset: 7
          code: code
          filename: filename
          issueText: issueText
          testId: testId
          lineRange:
          - 2
          - 2
          lineNumber: 3
          moreInfo: moreInfo
          testName: testName
        - cwe:
            link: link
            id: 9
          columnOffset: 7
          code: code
          filename: filename
          issueText: issueText
          testId: testId
          lineRange:
          - 2
          - 2
          lineNumber: 3
          moreInfo: moreInfo
          testName: testName
        errors:
        - '{}'
        - '{}'
      properties:
        errors:
          items:
            type: object
          type: array
        generatedAt:
          description: Timestamp when results were generated
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        metrics:
          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics'
        passed:
          type: boolean
        results:
          items:
            $ref: '#/components/schemas/ScriptVulnerabilityReport_results'
          type: array
      required:
      - errors
      - generatedAt
      - metrics
      - passed
      - results
      type: object
    SouceDetailsSchema:
      type: object
    SourceTypeEnum:
      description: Source type value
      enum:
      - UPLOAD
      - S3
      - KINESIS
      - GOOGLE_ANALYTICS
      - GOOGLE_BIGQUERY
      - GOOGLE_STORAGE
      - DYNAMODB
      - CLOUDWATCH
      - REDSHIFT
      - MYSQL5
      - POSTGRESQL
      - SQLSERVER
      - ORACLE
      - CLOUDTRAIL
      - MONGODB
      type: string
    TableStream:
      properties:
        crossAccount:
          description: Is the target table a cross account table
          type: boolean
        streamEnabled:
          description: Is there a data stream enabled on the table
          type: boolean
        streamViewType:
          description: What type of stream is enabled on the table
          type: string
        tableStreamArn:
          description: Table stream ARN
          type: string
      type: object
    TableStreamEntity:
      description: Handler for retrieving dynamodb table stream details
      example:
        streamViewType: streamViewType
        streamEnabled: true
        tableStreamArn: tableStreamArn
        updatedBy: updatedBy
        createdBy: createdBy
        createdTimestamp: createdTimestamp
        updatedTimestamp: updatedTimestamp
        crossAccount: true
      properties:
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        crossAccount:
          description: Is the target table a cross account table
          type: boolean
        streamEnabled:
          description: Is there a data stream enabled on the table
          type: boolean
        streamViewType:
          description: What type of stream is enabled on the table
          type: string
        tableStreamArn:
          description: Table stream ARN
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
      title: TableStreamEntity
      type: object
    Tag:
      properties:
        key:
          maxLength: 128
          minLength: 1
          pattern: ^([a-zA-Z][a-zA-Z0-9_.:/=+-@]{0,127})$
          type: object
        value:
          maxLength: 256
          minLength: 0
          pattern: ^([a-zA-Z0-9_.:/=+-@]{0,256})$
          type: object
      required:
      - key
      type: object
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    TearDownDetails:
      description: Details about the tear down that has been started
      example:
        mode: retain-data
        coreStackId: coreStackId
        retainedResources:
        - retainedResources
        - retainedResources
        message: message
      properties:
        coreStackId:
          type: string
        message:
          type: string
        mode:
          description: Indicates the teardown mode being performed.
          enum:
          - retain-data
          - destroy-data
          type: string
        retainedResources:
          description: List of resource arns that will be retained after deletion
            has completed, unless mode is destroy data.
          items:
            type: string
          type: array
      required:
      - coreStackId
      - message
      - mode
      - retainedResources
      title: TearDownDetails
      type: object
    Token:
      properties:
        authToken:
          description: The base64 encoded clientId and clientSecret, only available
            during initial create response.
          type: string
        authUrl:
          description: The authentication url used to authorize the token
          type: string
        clientId:
          description: The clientId of the token.
          type: string
        clientSecret:
          description: The clientSecret of the token, only available during initial
            create response.
          type: string
        enabled:
          description: Define whether the token is active or not
          type: boolean
        expiration:
          description: The expiration date of the token
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        tokenId:
          description: Identifier of the token
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        username:
          description: The username associated with the token.
          type: string
      required:
      - clientId
      - enabled
      - expiration
      - machineId
      - tokenId
      - username
      type: object
    TokenEntity:
      example:
        clientId: clientId
        updatedBy: updatedBy
        tokenId: tokenId
        authToken: authToken
        createdTimestamp: createdTimestamp
        updatedTimestamp: updatedTimestamp
        enabled: true
        authUrl: authUrl
        machineId: machineId
        createdBy: createdBy
        clientSecret: clientSecret
        expiration: expiration
        username: username
      properties:
        authToken:
          description: The base64 encoded clientId and clientSecret, only available
            during initial create response.
          type: string
        authUrl:
          description: The authentication url used to authorize the token
          type: string
        clientId:
          description: The clientId of the token.
          type: string
        clientSecret:
          description: The clientSecret of the token, only available during initial
            create response.
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        enabled:
          description: Define whether the token is active or not
          type: boolean
        expiration:
          description: The expiration date of the token
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        tokenId:
          description: Identifier of the token
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        username:
          description: The username associated with the token.
          type: string
      required:
      - clientId
      - enabled
      - expiration
      - machineId
      - tokenId
      - username
      type: object
    TokenIdentifier:
      properties:
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        tokenId:
          description: Identifier of the token
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
      required:
      - machineId
      - tokenId
      type: object
    TokenInput:
      description: Details about the new machine token
      example:
        authUrl: authUrl
        clientId: clientId
        machineId: machineId
        tokenId: tokenId
        authToken: authToken
        clientSecret: clientSecret
        expiration: expiration
        updatedTimestamp: updatedTimestamp
        enabled: true
        username: username
      properties:
        authToken:
          description: The base64 encoded clientId and clientSecret, only available
            during initial create response.
          type: string
        authUrl:
          description: The authentication url used to authorize the token
          type: string
        clientId:
          description: The clientId of the token.
          type: string
        clientSecret:
          description: The clientSecret of the token, only available during initial
            create response.
          type: string
        enabled:
          description: Define whether the token is active or not
          type: boolean
        expiration:
          description: The expiration date of the token
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        machineId:
          description: Identifier for the machine
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        tokenId:
          description: Identifier of the token
          maxLength: 256
          minLength: 2
          pattern: ^[a-z][a-z_0-9]*$
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        username:
          description: The username associated with the token.
          type: string
      required:
      - enabled
      - expiration
      title: TokenInput
      type: object
    UDF:
      example:
        name: name
        outputType: outputType
        inputType: inputType
      properties:
        inputType:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        name:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
        outputType:
          maxLength: 2048
          minLength: 2
          pattern: ^[\w _-]*$
          type: string
      required:
      - inputType
      - name
      - outputType
      type: object
    User:
      properties:
        address:
          description: The address of the user
          type: string
        customGroups:
          description: List of groups that the user belongs to, separated by comma
          type: string
        email:
          description: The user's email address
          type: string
        familyName:
          description: The family name of the user
          type: string
        givenName:
          description: The given name of the user
          type: string
        middleName:
          description: The middle name of the user
          type: string
        name:
          description: The name of the user
          type: string
        nickname:
          description: The nickname of the user
          type: string
        phoneNumber:
          description: The phone number of the user
          type: string
        preferredUsername:
          description: The preferred_username attribute that is used to identity the
            user
          type: string
        sub:
          description: The Cognito sub of the user, equivalent to the ID
          type: string
        username:
          description: The username of the user
          type: string
      required:
      - username
      type: object
    UserEntity:
      example:
        customGroups: customGroups
        sub: sub
        address: address
        updatedBy: updatedBy
        preferredUsername: preferredUsername
        createdTimestamp: createdTimestamp
        givenName: givenName
        updatedTimestamp: updatedTimestamp
        phoneNumber: phoneNumber
        createdBy: createdBy
        familyName: familyName
        name: name
        nickname: nickname
        middleName: middleName
        email: email
        username: username
      properties:
        address:
          description: The address of the user
          type: string
        createdBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        createdTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        customGroups:
          description: List of groups that the user belongs to, separated by comma
          type: string
        email:
          description: The user's email address
          type: string
        familyName:
          description: The family name of the user
          type: string
        givenName:
          description: The given name of the user
          type: string
        middleName:
          description: The middle name of the user
          type: string
        name:
          description: The name of the user
          type: string
        nickname:
          description: The nickname of the user
          type: string
        phoneNumber:
          description: The phone number of the user
          type: string
        preferredUsername:
          description: The preferred_username attribute that is used to identity the
            user
          type: string
        sub:
          description: The Cognito sub of the user, equivalent to the ID
          type: string
        updatedBy:
          maxLength: 256
          pattern: '[\w\s+=.@-]+'
          type: string
        updatedTimestamp:
          maxLength: 64
          pattern: ^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?))?$
          type: string
        username:
          description: The username of the user
          type: string
      required:
      - username
      type: object
    UserIdentifier:
      properties:
        username:
          description: The username of the user
          type: string
      required:
      - username
      type: object
    UserPermission:
      additionalProperties:
        $ref: '#/components/schemas/Permission'
      description: Map of route by name
      type: object
    FileUploadInput_parts:
      example:
        etag: etag
        partNumber: 0.8008281904610115
      properties:
        etag:
          maxLength: 2048
          pattern: ^[\w+ _.:,\/*&%$#=+-@?!|()"'\]\[]*$
          type: string
        partNumber:
          type: number
      required:
      - etag
      - partNumber
      type: object
    GetCostOutput_dimensionValueAttributes:
      example:
        type: type
        key: key
      properties:
        key:
          description: The key to group by
          type: string
        type:
          description: Group Definition type.  "DIMENSION"|"TAG"|"COST_CATEGORY"
          type: string
      type: object
    GetCostOutput_groupDefinitions:
      example:
        type: type
        key: key
      properties:
        key:
          description: The key to group by
          type: string
        type:
          description: Group Definition type. "DIMENSION"|"TAG"|"COST_CATEGORY"
          type: string
      type: object
    GetCostOutput_groups:
      example:
        keys:
        - keys
        - keys
        metrics:
          key:
            amount: amount
            unit: unit
      properties:
        keys:
          items:
            type: string
          type: array
        metrics:
          additionalProperties:
            $ref: '#/components/schemas/MetricValue'
          type: object
      type: object
    GetCostOutput_timePeriod:
      example:
        start: start
        end: end
      properties:
        end:
          description: end timestamp
          type: string
        start:
          description: start timestamp
          type: string
      type: object
    GetCostOutput_total:
      description: Total
      example:
        usageQuantity:
          key:
            amount: amount
            unit: unit
        blendedCost:
          key:
            amount: amount
            unit: unit
      properties:
        blendedCost:
          additionalProperties:
            $ref: '#/components/schemas/MetricValue'
          type: object
        usageQuantity:
          additionalProperties:
            $ref: '#/components/schemas/MetricValue'
          type: object
      type: object
    GetCostOutput_resultsByTime:
      example:
        total:
          usageQuantity:
            key:
              amount: amount
              unit: unit
          blendedCost:
            key:
              amount: amount
              unit: unit
        estimated: true
        timePeriod:
          start: start
          end: end
        groups:
        - keys:
          - keys
          - keys
          metrics:
            key:
              amount: amount
              unit: unit
        - keys:
          - keys
          - keys
          metrics:
            key:
              amount: amount
              unit: unit
      properties:
        estimated:
          description: Whether it is an estimation or not
          type: boolean
        groups:
          description: Groups
          items:
            $ref: '#/components/schemas/GetCostOutput_groups'
          type: array
        timePeriod:
          $ref: '#/components/schemas/GetCostOutput_timePeriod'
        total:
          $ref: '#/components/schemas/GetCostOutput_total'
      type: object
    PostQueryParseRenderDiscoverResponse_tables:
      example:
        identifierParts:
        - identifierParts
        - identifierParts
      properties:
        identifierParts:
          description: Each identifier part as referenced in the query
          items:
            type: string
          type: array
      required:
      - identifierParts
      type: object
    QueryRewriteInput_columns:
      example:
        clauses:
        - clauses
        - clauses
        name: name
        udfs:
        - name: name
          outputType: outputType
          inputType: inputType
        - name: name
          outputType: outputType
          inputType: inputType
        attribute: attribute
      properties:
        attribute:
          description: Optional ontology attribute associated with this column
          type: string
        clauses:
          description: Additional SQL where clauses to apply for this column (written
            in terms of the ontology attribute)
          items:
            type: string
          type: array
        name:
          description: Column name
          type: string
        udfs:
          description: User-defined functions to apply to this column for governance
          items:
            $ref: '#/components/schemas/UDF'
          type: array
      required:
      - clauses
      - name
      - udfs
      type: object
    QueryRewriteInput_dataProducts:
      example:
        columns:
        - clauses:
          - clauses
          - clauses
          name: name
          udfs:
          - name: name
            outputType: outputType
            inputType: inputType
          - name: name
            outputType: outputType
            inputType: inputType
          attribute: attribute
        - clauses:
          - clauses
          - clauses
          name: name
          udfs:
          - name: name
            outputType: outputType
            inputType: inputType
          - name: name
            outputType: outputType
            inputType: inputType
          attribute: attribute
        tableName: tableName
      properties:
        columns:
          items:
            $ref: '#/components/schemas/QueryRewriteInput_columns'
          type: array
        tableName:
          description: The qualified table name referencable in Athena
          type: string
      required:
      - columns
      - tableName
      type: object
    QueryRewriteInput_querySubstitutions:
      example:
        query: query
      properties:
        query:
          type: string
      type: object
    ScriptVulnerabilityReport_metrics_confidence:
      example:
        HIGH: 0
        MEDIUM: 1
        LOW: 6
      properties:
        HIGH:
          type: integer
        LOW:
          type: integer
        MEDIUM:
          type: integer
      required:
      - HIGH
      - LOW
      - MEDIUM
      type: object
    ScriptVulnerabilityReport_metrics:
      example:
        severity:
          HIGH: 0
          MEDIUM: 1
          LOW: 6
        loc: 5
        skippedTests: 2
        nosec: 5
        confidence:
          HIGH: 0
          MEDIUM: 1
          LOW: 6
      properties:
        confidence:
          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics_confidence'
        loc:
          type: integer
        nosec:
          type: integer
        severity:
          $ref: '#/components/schemas/ScriptVulnerabilityReport_metrics_confidence'
        skippedTests:
          type: integer
      required:
      - confidence
      - loc
      - nosec
      - severity
      - skippedtests
      type: object
    ScriptVulnerabilityReport_cwe:
      example:
        link: link
        id: 9
      properties:
        id:
          type: integer
        link:
          type: string
      required:
      - id
      - link
      type: object
    ScriptVulnerabilityReport_results:
      example:
        cwe:
          link: link
          id: 9
        columnOffset: 7
        code: code
        filename: filename
        issueText: issueText
        testId: testId
        lineRange:
        - 2
        - 2
        lineNumber: 3
        moreInfo: moreInfo
        testName: testName
      properties:
        code:
          type: string
        columnOffset:
          type: integer
        cwe:
          $ref: '#/components/schemas/ScriptVulnerabilityReport_cwe'
        filename:
          type: string
        issueConfidence:
          $ref: '#/components/schemas/ScriptVulnerabilityLevel'
        issueSeverity:
          $ref: '#/components/schemas/ScriptVulnerabilityLevel'
        issueText:
          type: string
        lineNumber:
          type: integer
        lineRange:
          items:
            type: integer
          type: array
        moreInfo:
          type: string
        testId:
          type: string
        testName:
          type: string
      required:
      - code
      - columnOffset
      - cwe
      - filename
      - issueConfidence
      - issueSeverity
      - issueText
      - lineNumber
      - lineRange
      - moreInfo
      - testId
      - testName
      type: object
  securitySchemes:
    authorizer:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: custom
