// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stack snapshots 1`] = `
Object {
  "Description": "(SO0190-StaticInfrastructure) - Automated Data Analytics on AWS. Version v1.0.0",
  "Outputs": Object {
    "AdaDataProductServiceStaticInfrastructureDataBucketD9C0AD53Arn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DataBucket",
          "Arn",
        ],
      },
    },
    "AdaDataProductServiceStaticInfrastructureDataProductCreationStateMachine4AA0017DRef": Object {
      "Value": Object {
        "Ref": "DataProductCreationStateMachineC5A4C4A3",
      },
    },
    "AdaDataProductServiceStaticInfrastructureDataProductDatabase2297BE1ARef": Object {
      "Value": Object {
        "Ref": "DataProductDatabase03AEDDD4",
      },
    },
    "AdaDataProductServiceStaticInfrastructureScriptsBucketD6FE34F9Arn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ScriptsBucket",
          "Arn",
        ],
      },
    },
    "AdaDataProductServiceStaticInfrastructureScriptsBucketD6FE34F9Ref": Object {
      "Value": Object {
        "Ref": "ScriptsBucket",
      },
    },
    "AdaDataProductServiceStaticInfrastructureStaticInfraConfig3399198DRef": Object {
      "Value": Object {
        "Ref": "StaticInfraConfig57F9689D",
      },
    },
  },
  "Parameters": Object {
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref": Object {
      "Type": "String",
    },
    "referencetoAdaApiWafDeploymentSecretCA25FA9ARef": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackAccessLogBucketB5B66FEDRef": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef": Object {
      "Type": "String",
    },
    "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn": Object {
      "Type": "String",
    },
    "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref": Object {
      "Type": "String",
    },
    "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyScriptsBucketC9CECD84Arn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableCachedQueryTableFD9290A0Arn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn": Object {
      "Type": "String",
    },
    "referencetoAdaLayer6FB4FEF4Ref": Object {
      "Type": "String",
    },
    "referencetoAdaSharedEvntBus3C45F515Arn": Object {
      "Type": "String",
    },
    "referencetoAdaSharedEvntBus3C45F515Ref": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "CrawlerPollerLambdaGetFinalStatusE307FFA6": Object {
      "DependsOn": Array [
        "CrawlerPollerLambdaGetFinalStatusServiceRoleDefaultPolicy9BD99148",
        "CrawlerPollerLambdaGetFinalStatusServiceRoleC34B84DB",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/CrawlerPoller/LambdaGetFinalStatus of get-final-status.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CrawlerPollerLambdaGetFinalStatusServiceRoleC34B84DB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrawlerPollerLambdaGetFinalStatusServiceRoleC34B84DB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrawlerPollerLambdaGetFinalStatusServiceRoleDefaultPolicy9BD99148": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:StartCrawler*",
                "glue:GetCrawler*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:ap-southeast-1:1111111111:crawler/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrawlerPollerLambdaGetFinalStatusServiceRoleDefaultPolicy9BD99148",
        "Roles": Array [
          Object {
            "Ref": "CrawlerPollerLambdaGetFinalStatusServiceRoleC34B84DB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrawlerPollerLambdaGetStatusDC937D18": Object {
      "DependsOn": Array [
        "CrawlerPollerLambdaGetStatusServiceRoleDefaultPolicy72879258",
        "CrawlerPollerLambdaGetStatusServiceRoleA895B874",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/CrawlerPoller/LambdaGetStatus of get-status.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CrawlerPollerLambdaGetStatusServiceRoleA895B874",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrawlerPollerLambdaGetStatusServiceRoleA895B874": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrawlerPollerLambdaGetStatusServiceRoleDefaultPolicy72879258": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:StartCrawler*",
                "glue:GetCrawler*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:ap-southeast-1:1111111111:crawler/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrawlerPollerLambdaGetStatusServiceRoleDefaultPolicy72879258",
        "Roles": Array [
          Object {
            "Ref": "CrawlerPollerLambdaGetStatusServiceRoleA895B874",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrawlerPollerLambdaStartCrawlerC172A6FD": Object {
      "DependsOn": Array [
        "CrawlerPollerLambdaStartCrawlerServiceRoleDefaultPolicyF383286E",
        "CrawlerPollerLambdaStartCrawlerServiceRole26820C15",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/CrawlerPoller/LambdaStartCrawler of start-crawler.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CrawlerPollerLambdaStartCrawlerServiceRole26820C15",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrawlerPollerLambdaStartCrawlerServiceRole26820C15": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrawlerPollerLambdaStartCrawlerServiceRoleDefaultPolicyF383286E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:StartCrawler*",
                "glue:GetCrawler*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:ap-southeast-1:1111111111:crawler/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrawlerPollerLambdaStartCrawlerServiceRoleDefaultPolicyF383286E",
        "Roles": Array [
          Object {
            "Ref": "CrawlerPollerLambdaStartCrawlerServiceRole26820C15",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrawlerPollerStateMachine3EA4304C": Object {
      "DependsOn": Array [
        "CrawlerPollerStateMachineRoleDefaultPolicyA3398336",
        "CrawlerPollerStateMachineRoleFF81339C",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"SubmitCrawl\\",\\"States\\":{\\"SubmitCrawl\\":{\\"Next\\":\\"Wait5Seconds\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"ResultPath\\":\\"$.Payload.error\\",\\"Next\\":\\"CrawlFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CrawlerPollerLambdaStartCrawlerC172A6FD",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"Payload\\":{\\"crawlerName.$\\":\\"$.crawlerName\\"}}}},\\"Wait5Seconds\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":5,\\"Next\\":\\"GetCrawlStatus\\"},\\"GetCrawlStatus\\":{\\"Next\\":\\"CrawlComplete?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CrawlerPollerLambdaGetStatusDC937D18",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"CrawlComplete?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.Payload.status\\",\\"StringEquals\\":\\"FAILED\\",\\"Next\\":\\"CrawlFailed\\"},{\\"Variable\\":\\"$.Payload.status\\",\\"StringEquals\\":\\"SUCCEEDED\\",\\"Next\\":\\"GetFinalCrawlStatus\\"}],\\"Default\\":\\"Wait5Seconds\\"},\\"CrawlFailed\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"Payload\\":{\\"crawlerName.$\\":\\"$.Payload.crawlerName\\",\\"error.$\\":\\"$.Payload.error\\",\\"status\\":\\"FAILED\\"}},\\"End\\":true},\\"GetFinalCrawlStatus\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CrawlerPollerLambdaGetFinalStatusE307FFA6",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}}},\\"TimeoutSeconds\\":600}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "CrawlerPollerStateMachineLogs0C7F01AD",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrawlerPollerStateMachineRoleFF81339C",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "CrawlerPollerStateMachineLogs0C7F01AD": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/CrawlerPollerStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrawlerPollerStateMachineRoleDefaultPolicyA3398336": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrawlerPollerLambdaStartCrawlerC172A6FD",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrawlerPollerLambdaStartCrawlerC172A6FD",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrawlerPollerLambdaGetStatusDC937D18",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrawlerPollerLambdaGetStatusDC937D18",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrawlerPollerLambdaGetFinalStatusE307FFA6",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrawlerPollerLambdaGetFinalStatusE307FFA6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrawlerPollerStateMachineRoleDefaultPolicyA3398336",
        "Roles": Array [
          Object {
            "Ref": "CrawlerPollerStateMachineRoleFF81339C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrawlerPollerStateMachineRoleFF81339C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "TransformsDeployTransformWrapperAwsCliLayer0AA68D2B",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-1111111111-ap-southeast-1",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-1111111111-ap-southeast-1/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ScriptsBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ScriptsBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyScriptsBucketC9CECD84Arn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackAccessLogBucketB5B66FEDRef",
          },
          "LogFilePrefix": "data-logs/",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DataBucketPolicy3231C704": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DataBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DataProductCreationStateMachineC5A4C4A3": Object {
      "DependsOn": Array [
        "DataProductCreationStateMachineRoleDefaultPolicyA1E52D40",
        "DataProductCreationStateMachineRole276687D9",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"StartDataProductInfraDeployment\\",\\"States\\":{\\"StartDataProductInfraDeployment\\":{\\"Next\\":\\"CheckDataProductInfraDeploymentStatus\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"ResultPath\\":\\"$.ErrorDetails\\",\\"Next\\":\\"DataProductInfraDeploymentFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductCreationStateMachineLambdaStartDataProductInfraDeployment13AC9688",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"CheckDataProductInfraDeploymentStatus\\":{\\"Next\\":\\"IsDataProductInfraDeploymentComplete?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"ResultPath\\":\\"$.ErrorDetails\\",\\"Next\\":\\"DataProductInfraDeploymentFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatus250EEC00",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"Wait5Seconds\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":5,\\"Next\\":\\"CheckDataProductInfraDeploymentStatus\\"},\\"IsDataProductInfraDeploymentComplete?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.Payload.isDeploymentComplete\\",\\"BooleanEquals\\":true,\\"Next\\":\\"DataProductInfraDeploymentComplete\\"}],\\"Default\\":\\"Wait5Seconds\\"},\\"DataProductInfraDeploymentComplete\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"ResultPath\\":\\"$.ErrorDetails\\",\\"Next\\":\\"DataProductInfraDeploymentFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteC688F7E9",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"DataProductInfraDeploymentFailed\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedE40461A9",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"ErrorDetails.$\\":\\"$.ErrorDetails\\",\\"Payload.$\\":\\"$$.Execution.Input.Payload\\"}}}},\\"TimeoutSeconds\\":1800}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "DataProductCreationStateMachineStateMachineLogs40F93B39",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DataProductCreationStateMachineRole276687D9",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatus250EEC00": Object {
      "DependsOn": Array [
        "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRoleDefaultPolicy60926691",
        "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRole5217CE7D",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductCreationStateMachine/LambdaCheckDataProductInfraDeploymentStatus of check-data-product-infra-deployment-status.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "DATA_PRODUCT_STATIC_INFRASTRUCTURE_PARAMETER_NAME": Object {
              "Ref": "StaticInfraConfig57F9689D",
            },
            "DATA_PRODUCT_TABLE_NAME": Object {
              "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRole5217CE7D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRole5217CE7D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRoleDefaultPolicy60926691": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "cloudformation:Describe*",
                "cloudformation:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/ada-dp-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/CDKToolkit/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-southeast-1:1111111111:parameter/",
                    Object {
                      "Ref": "StaticInfraConfig57F9689D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRoleDefaultPolicy60926691",
        "Roles": Array [
          Object {
            "Ref": "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatusServiceRole5217CE7D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteC688F7E9": Object {
      "DependsOn": Array [
        "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRoleDefaultPolicy334E81D5",
        "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRole3DF20E79",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductCreationStateMachine/LambdaDataProductInfraDeploymentComplete of data-product-infra-deployment-complete.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "DATA_PRODUCT_STATIC_INFRASTRUCTURE_PARAMETER_NAME": Object {
              "Ref": "StaticInfraConfig57F9689D",
            },
            "DATA_PRODUCT_TABLE_NAME": Object {
              "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRole3DF20E79",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRole3DF20E79": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRoleDefaultPolicy334E81D5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "cloudformation:Describe*",
                "cloudformation:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/ada-dp-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/CDKToolkit/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-southeast-1:1111111111:parameter/",
                    Object {
                      "Ref": "StaticInfraConfig57F9689D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRoleDefaultPolicy334E81D5",
        "Roles": Array [
          Object {
            "Ref": "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteServiceRole3DF20E79",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedE40461A9": Object {
      "DependsOn": Array [
        "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRoleDefaultPolicyF355CE0A",
        "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRole58125D1E",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductCreationStateMachine/LambdaDataProductInfraDeploymentFailed of data-product-infra-deployment-failed.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "DATA_PRODUCT_STATIC_INFRASTRUCTURE_PARAMETER_NAME": Object {
              "Ref": "StaticInfraConfig57F9689D",
            },
            "DATA_PRODUCT_TABLE_NAME": Object {
              "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRole58125D1E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRole58125D1E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRoleDefaultPolicyF355CE0A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "cloudformation:Describe*",
                "cloudformation:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/ada-dp-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/CDKToolkit/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-southeast-1:1111111111:parameter/",
                    Object {
                      "Ref": "StaticInfraConfig57F9689D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRoleDefaultPolicyF355CE0A",
        "Roles": Array [
          Object {
            "Ref": "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedServiceRole58125D1E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductCreationStateMachineLambdaStartDataProductInfraDeployment13AC9688": Object {
      "DependsOn": Array [
        "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRoleDefaultPolicy11E94CE2",
        "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRole5768AAF4",
      ],
      "Properties": Object {
        "Code": Object {
          "ImageUri": Object {
            "Fn::Sub": "1111111111.dkr.ecr.ap-southeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1:###hash64###",
          },
        },
        "Description": "DockerImageLambda with AWS CDK lib to synthesize and depoloy data product dynamic infrastructure.",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "CDK_DEPLOY_ACCOUNT": "1111111111",
            "CDK_DEPLOY_REGION": "ap-southeast-1",
            "CDK_DISABLE_VERSION_CHECK": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "DATA_PRODUCT_STATIC_INFRASTRUCTURE_PARAMETER_NAME": Object {
              "Ref": "StaticInfraConfig57F9689D",
            },
            "DATA_PRODUCT_TABLE_NAME": Object {
              "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "MemorySize": 1024,
        "PackageType": "Image",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRole5768AAF4",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductCreationStateMachineLambdastartdataproductinfradeploymentDataProductCreationStateMachineInfraDeploymentPermissionsBoundaryED3C1150": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "F40",
              "reason": "Policy is for CDK permissions which require this level of permissiveness - solution prevents elevation of permissions through a PermissionBoundary as per AppSec requirements.",
            },
            Object {
              "id": "F5",
              "reason": "Policy is for CDK permissions which require this level of permissiveness - solution prevents elevation of permissions through a PermissionBoundary as per AppSec requirements.",
            },
            Object {
              "id": "W13",
              "reason": "Policy is for CDK permissions which require this level of permissiveness - solution prevents elevation of permissions through a PermissionBoundary as per AppSec requirements.",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:*",
                "cloudformation:*",
                "lambda:*",
                "glue:*",
                "ecs:*",
                "states:*",
                "logs:*",
                "kms:*",
                "iam:*",
                "cloudtrail:*",
                "cloudwatch:*",
                "events:*",
                "kinesis:*",
                "firehose:*",
                "dynamodb:*",
                "ssm:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRole5768AAF4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "PermissionsBoundary": Object {
          "Ref": "DataProductCreationStateMachineLambdastartdataproductinfradeploymentDataProductCreationStateMachineInfraDeploymentPermissionsBoundaryED3C1150",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRoleDefaultPolicy11E94CE2": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "F4",
              "reason": "Used to deploy a new CloudFormation stack",
            },
            Object {
              "id": "F39",
              "reason": "Used to deploy a new CloudFormation stack",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "cloudformation:Describe*",
                "cloudformation:List*",
                "cloudformation:CreateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:ExecuteChangeSet",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/ada-dp-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":cloudformation:ap-southeast-1:1111111111:stack/CDKToolkit/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ssm:GetParameter",
                "iam:PassRole",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1111111111:role/cdk-*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:ap-southeast-1:1111111111:parameter/cdk-bootstrap/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:*Object",
                "s3:ListBucket",
                "s3:getBucketLocation",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "s3:ResourceAccount": "1111111111",
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::cdk-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:*",
                "cloudformation:*",
                "lambda:*",
                "glue:*",
                "ecs:*",
                "states:*",
                "logs:*",
                "kms:*",
                "iam:*",
                "cloudtrail:*",
                "cloudwatch:*",
                "events:*",
                "kinesis:*",
                "firehose:*",
              ],
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "aws:CalledVia": Array [
                    "cloudformation.amazonaws.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-southeast-1:1111111111:parameter/",
                    Object {
                      "Ref": "StaticInfraConfig57F9689D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRoleDefaultPolicy11E94CE2",
        "Roles": Array [
          Object {
            "Ref": "DataProductCreationStateMachineLambdastartdataproductinfradeploymentServiceRole5768AAF4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductCreationStateMachineRole276687D9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductCreationStateMachineRoleDefaultPolicyA1E52D40": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataProductCreationStateMachineLambdaStartDataProductInfraDeployment13AC9688",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataProductCreationStateMachineLambdaStartDataProductInfraDeployment13AC9688",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatus250EEC00",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataProductCreationStateMachineLambdaCheckDataProductInfraDeploymentStatus250EEC00",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteC688F7E9",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataProductCreationStateMachineLambdaDataProductInfraDeploymentCompleteC688F7E9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedE40461A9",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataProductCreationStateMachineLambdaDataProductInfraDeploymentFailedE40461A9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductCreationStateMachineRoleDefaultPolicyA1E52D40",
        "Roles": Array [
          Object {
            "Ref": "DataProductCreationStateMachineRole276687D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductCreationStateMachineStateMachineLogs40F93B39": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/DataProductCreationStateMachineStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "DataProductDatabase03AEDDD4": Object {
      "Properties": Object {
        "CatalogId": "1111111111",
        "DatabaseInput": Object {
          "Name": "data_product_1436ghashx",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "DataProductExecuteAthenaQueryLambdaRolePolicyC9F513F3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductExecuteAthenaQueryLambdaRolePolicyC9F513F3",
        "Roles": Array [
          Object {
            "Fn::Select": Array [
              1,
              Object {
                "Fn::Split": Array [
                  "/",
                  Object {
                    "Fn::Select": Array [
                      5,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambda35740133": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRoleDefaultPolicy88F12347",
        "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRole1E2D0BE5",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "Java function for athena-utilities (GovernanceAthenaUtilsLambda:###hash64###)",
        "Handler": "com.ada.pii.detection.TextAnalyticsUDFHandler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRole1E2D0BE5",
            "Arn",
          ],
        },
        "Runtime": "java8",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambdaAliasprodF10E049A": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambda35740133",
        },
        "FunctionVersion": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasGovernanceAthenaUtilsLambdaCurrentVersion###",
            "Version",
          ],
        },
        "Name": "prod",
      },
      "Type": "AWS::Lambda::Alias",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambdaAliasprodInvokeoAqiZZ4ZPQTFFdmHPUAgIVu0U2ZYQwaPxuqieMT849062C468": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambdaAliasprodF10E049A",
        },
        "Principal": Object {
          "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambdaCurrentVersion###": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambda35740133",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRole1E2D0BE5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRoleDefaultPolicy88F12347": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "comprehend:DetectPiiEntities",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRoleDefaultPolicy88F12347",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambdaServiceRole1E2D0BE5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaDiscoverTransformsD8804571": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleDefaultPolicy853637DE",
        "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleC5580FF1",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaDiscoverTransforms of discover-transforms.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleC5580FF1",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleC5580FF1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleDefaultPolicy853637DE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleDefaultPolicy853637DE",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaDiscoverTransformsServiceRoleC5580FF1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportF9E88BEB": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleDefaultPolicy7BE8703F",
        "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleD0F64AAD",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaExternalImportPrepareExternalImport of prepare-external-import.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleD0F64AAD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleD0F64AAD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleDefaultPolicy7BE8703F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": "glue:UpdateCrawler",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:ap-southeast-1:1111111111:crawler/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleDefaultPolicy7BE8703F",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportServiceRoleD0F64AAD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaGeneratePiiQuery06D4D10B": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleDefaultPolicy0545EA99",
        "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleFF45CBBD",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaGeneratePiiQuery of generate-pii-query.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleFF45CBBD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleDefaultPolicy0545EA99": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleDefaultPolicy0545EA99",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleFF45CBBD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaGeneratePiiQueryServiceRoleFF45CBBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaGetCrawledTableDetails55A1CA82": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRoleDefaultPolicy104B74DD",
        "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRole3DD78977",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaGetCrawledTableDetails of get-crawled-table-details.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRole3DD78977",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRole3DD78977": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRoleDefaultPolicy104B74DD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRoleDefaultPolicy104B74DD",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaGetCrawledTableDetailsServiceRole3DD78977",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaGetPiiQueryResult08BB0C28": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleDefaultPolicy636631E1",
        "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleF7B88760",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaGetPiiQueryResult of get-pii-query-result.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleF7B88760",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleDefaultPolicy636631E1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": Array [
                "s3:List*",
                "s3:Get*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DataBucket",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DataBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "athena:GetQueryResults",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:ap-southeast-1:1111111111:workgroup/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleDefaultPolicy636631E1",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleF7B88760",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaGetPiiQueryResultServiceRoleF7B88760": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaPrepareNextTransformB6BEDE78": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaPrepareNextTransformServiceRoleDefaultPolicy2936F233",
        "DataProductInfraLambdasLambdaPrepareNextTransformServiceRole16E9ED05",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaPrepareNextTransform of prepare-next-transform.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaPrepareNextTransformServiceRole16E9ED05",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaPrepareNextTransformServiceRole16E9ED05": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaPrepareNextTransformServiceRoleDefaultPolicy2936F233": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaPrepareNextTransformServiceRoleDefaultPolicy2936F233",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaPrepareNextTransformServiceRole16E9ED05",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQuery0EB60EE7": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRoleDefaultPolicy55DDFB3B",
        "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRole6A0DBF39",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaQuerySourcePrepareCtasQuery of prepare-ctas-query.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRole6A0DBF39",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRole6A0DBF39": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRoleDefaultPolicy55DDFB3B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": "glue:UpdateCrawler",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:ap-southeast-1:1111111111:crawler/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRoleDefaultPolicy55DDFB3B",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQueryServiceRole6A0DBF39",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaStartDataImport98144F54": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaStartDataImportServiceRoleDefaultPolicyDC6D3239",
        "DataProductInfraLambdasLambdaStartDataImportServiceRoleEB793D38",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaStartDataImport of start-data-import.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATA_PRODUCT_TABLE_NAME": Object {
              "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Ref",
            },
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaStartDataImportServiceRoleEB793D38",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaStartDataImportEventBridgeTrigger373E1A41": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaStartDataImport98144F54",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DataProductInfraLambdasLambdaStartDataImportServiceRoleDefaultPolicyDC6D3239": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Start data import api is allowed to read status of/start all data product state machines, and arns are not known until runtime",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": Array [
                "states:ListExecutions",
                "states:StartExecution",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaDataProductServiceDataProductTableC1CE90D5Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableDataProductTableCFB5877CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaStartDataImportServiceRoleDefaultPolicyDC6D3239",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaStartDataImportServiceRoleEB793D38",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasLambdaStartDataImportServiceRoleEB793D38": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaValidateS3PathLambdaF4EBCF0E": Object {
      "DependsOn": Array [
        "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleDefaultPolicyD770C59E",
        "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleCECA8024",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/DataProductInfraLambdas/LambdaValidateS3PathLambda of validate-s3-path-lambda.ts",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "NOTIFICATION_BUS_EVENT_BUS_ARN": Object {
              "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleCECA8024",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleCECA8024": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleDefaultPolicyD770C59E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "glue:GetTables",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:table/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:database/",
                      Object {
                        "Ref": "DataProductDatabase03AEDDD4",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:ap-southeast-1:1111111111:catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": Array [
                "s3:List*",
                "s3:Get*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DataBucket",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DataBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleDefaultPolicyD770C59E",
        "Roles": Array [
          Object {
            "Ref": "DataProductInfraLambdasLambdaValidateS3PathLambdaServiceRoleCECA8024",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataProductInfraLambdasQueryExecuteAthenaUtilsRolePolicy177BC618": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambdaAliasprodF10E049A",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataProductInfraLambdasQueryExecuteAthenaUtilsRolePolicy177BC618",
        "Roles": Array [
          Object {
            "Fn::Select": Array [
              1,
              Object {
                "Fn::Split": Array [
                  "/",
                  Object {
                    "Fn::Select": Array [
                      5,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersContainersVpc495E6EF4": Object {
      "Properties": Object {
        "CidrBlock": "192.168.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet1DefaultRoute26F012CE": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNATGatewaySubnet1NATGatewayD502CCDC",
        },
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1RouteTable38B2D5E6",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet1RouteTable38B2D5E6": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPrivateWithNatSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet1RouteTableAssociationB86B54A8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1RouteTable38B2D5E6",
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1Subnet88348AF3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet1Subnet88348AF3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W33",
              "reason": "MapPublicIpOnLaunch required for public subnet",
            },
          ],
        },
      },
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "192.168.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ECSPrivateWithNat",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPrivateWithNatSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet2DefaultRoute59277298": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNATGatewaySubnet2NATGatewayA011BA65",
        },
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2RouteTableA3DDECD1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet2RouteTableA3DDECD1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPrivateWithNatSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet2RouteTableAssociationF0818713": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2RouteTableA3DDECD1",
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2SubnetC8408603",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ECSContainersContainersVpcECSPrivateWithNatSubnet2SubnetC8408603": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W33",
              "reason": "MapPublicIpOnLaunch required for public subnet",
            },
          ],
        },
      },
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "192.168.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ECSPrivateWithNat",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPrivateWithNatSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNATGatewaySubnet1NATGatewayD502CCDC": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1EIP277E73A8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1SubnetE8B23D72",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNATGatewaySubnet2NATGatewayA011BA65": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2EIPA7429D1D",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2Subnet45F07450",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1DefaultRoute4539CADE": Object {
      "DependsOn": Array [
        "ECSContainersContainersVpcVPCGW46A3D8AD",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ECSContainersContainersVpcIGW42DB8268",
        },
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1RouteTable4247E5CB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1EIP277E73A8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1RouteTable4247E5CB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1RouteTableAssociation9F73271B": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1RouteTable4247E5CB",
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1SubnetE8B23D72",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet1SubnetE8B23D72": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W33",
              "reason": "MapPublicIpOnLaunch required for public subnet",
            },
          ],
        },
      },
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "192.168.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ECSPublicsubnetForNatGateway",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2DefaultRoute85836A03": Object {
      "DependsOn": Array [
        "ECSContainersContainersVpcVPCGW46A3D8AD",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ECSContainersContainersVpcIGW42DB8268",
        },
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2RouteTable53D66F66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2EIPA7429D1D": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2RouteTable53D66F66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2RouteTableAssociation180A3781": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2RouteTable53D66F66",
        },
        "SubnetId": Object {
          "Ref": "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2Subnet45F07450",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ECSContainersContainersVpcECSPublicsubnetForNatGatewaySubnet2Subnet45F07450": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W33",
              "reason": "MapPublicIpOnLaunch required for public subnet",
            },
          ],
        },
      },
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "192.168.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ECSPublicsubnetForNatGateway",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc/ECSPublicsubnetForNatGatewaySubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ECSContainersContainersVpcECSSecurityGroup789B3CCC": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W5",
              "reason": "All egress traffic permitted for full internet access for communication with dependent services, eg GCP",
            },
            Object {
              "id": "W40",
              "reason": "All egress traffic permitted for full internet access for communication with dependent services, eg GCP",
            },
          ],
        },
      },
      "Properties": Object {
        "GroupDescription": "Security group used by the ECS container",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ECSContainersContainersVpcECSVPCLogsRoleDefaultPolicy07B3D6B8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ECSContainersContainersVpcVPCLogsD2877F16",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ECSContainersContainersVpcECSVPCLogsRoleF8834EDD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersContainersVpcECSVPCLogsRoleDefaultPolicy07B3D6B8",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersContainersVpcECSVPCLogsRoleF8834EDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersContainersVpcECSVPCLogsRoleF8834EDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersContainersVpcIGW42DB8268": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "Name",
            "Value": "Ada/DataProductService/StaticInfrastructure/ECSContainers/ContainersVpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ECSContainersContainersVpcVPCFlowLogsFlowLog26191E33": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersContainersVpcECSVPCLogsRoleF8834EDD",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "ECSContainersContainersVpcVPCLogsD2877F16",
        },
        "ResourceId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "ECSContainersContainersVpcVPCGW46A3D8AD": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ECSContainersContainersVpcIGW42DB8268",
        },
        "VpcId": Object {
          "Ref": "ECSContainersContainersVpc495E6EF4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ECSContainersContainersVpcVPCLogsD2877F16": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ECSContainersGCPAnalyticsRole8573C356": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGCPAnalyticsRoleDefaultPolicyD6B787B8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:DPSecrets*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGCPAnalyticsRoleDefaultPolicyD6B787B8",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGCPAnalyticsRole8573C356",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGCPBigQueryECSClusterGcpBigQueryF6D8B0BC": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSContainersGCPBigQueryECSContainerLogGroupGcpBigQuery6737FCE1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ECSContainersGCPBigQueryECSExecutionRoleGcpBigQuery403267BD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGCPBigQueryECSExecutionRolegcpbigqueryDefaultPolicyD862091B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "* resource required to create log streams",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-southeast-1:1111111111:repository/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGCPBigQueryECSContainerLogGroupGcpBigQuery6737FCE1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGCPBigQueryECSExecutionRolegcpbigqueryDefaultPolicyD862091B",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGCPBigQueryECSExecutionRoleGcpBigQuery403267BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 2048,
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "1111111111.dkr.ecr.ap-southeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1:###hash64###",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "ECSContainersGCPBigQueryECSContainerLogGroupGcpBigQuery6737FCE1",
                },
                "awslogs-region": "ap-southeast-1",
                "awslogs-stream-prefix": "ecs-gcp-big-query",
              },
            },
            "MemoryReservation": 16384,
            "Name": "ECSContainerDef-gcp-big-query",
          },
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGCPBigQueryECSExecutionRoleGcpBigQuery403267BD",
            "Arn",
          ],
        },
        "Family": "AdaDataProductServiceStaticInfrastructureECSContainersGCPBigQueryECSTaskDefinitiongcpbigquery3D080A68",
        "Memory": "16384",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGCPBigQueryRole46A6C643",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ECSContainersGCPBigQueryRole46A6C643": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGCPBigQueryRoleDefaultPolicy95C48F10": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:DPSecrets*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGCPBigQueryRoleDefaultPolicy95C48F10",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGCPBigQueryRole46A6C643",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGCPStorageECSClusterGcpStorageB2D8638A": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSContainersGCPStorageECSContainerLogGroupGcpStorage76DF7958": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ECSContainersGCPStorageECSExecutionRoleGcpStorageD8DBE133": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGCPStorageECSExecutionRolegcpstorageDefaultPolicyF789F56F": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "* resource required to create log streams",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-southeast-1:1111111111:repository/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGCPStorageECSContainerLogGroupGcpStorage76DF7958",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGCPStorageECSExecutionRolegcpstorageDefaultPolicyF789F56F",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGCPStorageECSExecutionRoleGcpStorageD8DBE133",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 512,
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "1111111111.dkr.ecr.ap-southeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1:###hash64###",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "ECSContainersGCPStorageECSContainerLogGroupGcpStorage76DF7958",
                },
                "awslogs-region": "ap-southeast-1",
                "awslogs-stream-prefix": "ecs-gcp-storage",
              },
            },
            "MemoryReservation": 1024,
            "Name": "ECSContainerDef-gcp-storage",
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGCPStorageECSExecutionRoleGcpStorageD8DBE133",
            "Arn",
          ],
        },
        "Family": "AdaDataProductServiceStaticInfrastructureECSContainersGCPStorageECSTaskDefinitiongcpstorageE5F3AEE6",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGCPStorageRole6FF649D7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ECSContainersGCPStorageRole6FF649D7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGCPStorageRoleDefaultPolicy3AED7A1B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:DPSecrets*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:GenerateDataKey",
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGCPStorageRoleDefaultPolicy3AED7A1B",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGCPStorageRole6FF649D7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGoogleAnalyticsECSClusterGoogleAnalytics9381E111": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSContainersGoogleAnalyticsECSContainerLogGroupGoogleAnalytics67575DA2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ECSContainersGoogleAnalyticsECSExecutionRoleGoogleAnalytics0813D8D7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ECSContainersGoogleAnalyticsECSExecutionRolegoogleanalyticsDefaultPolicyC4D61CC1": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "* resource required to create log streams",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-southeast-1:1111111111:repository/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGoogleAnalyticsECSContainerLogGroupGoogleAnalytics67575DA2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ECSContainersGoogleAnalyticsECSExecutionRolegoogleanalyticsDefaultPolicyC4D61CC1",
        "Roles": Array [
          Object {
            "Ref": "ECSContainersGoogleAnalyticsECSExecutionRoleGoogleAnalytics0813D8D7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 2048,
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "1111111111.dkr.ecr.ap-southeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-1111111111-ap-southeast-1:###hash64###",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "ECSContainersGoogleAnalyticsECSContainerLogGroupGoogleAnalytics67575DA2",
                },
                "awslogs-region": "ap-southeast-1",
                "awslogs-stream-prefix": "ecs-google-analytics",
              },
            },
            "MemoryReservation": 16384,
            "Name": "ECSContainerDef-google-analytics",
          },
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGoogleAnalyticsECSExecutionRoleGoogleAnalytics0813D8D7",
            "Arn",
          ],
        },
        "Family": "AdaDataProductServiceStaticInfrastructureECSContainersGoogleAnalyticsECSTaskDefinitiongoogleanalyticsD461B0E9",
        "Memory": "16384",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "ECSContainersGCPAnalyticsRole8573C356",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ExecuteGovernedQueryStateMachineAthenaExecutionPolicy4FC26084": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Athena query access requires * resource",
            },
            Object {
              "id": "W76",
              "reason": "SPCM expected to be high for query execution role since it interacts with many resources",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "athena:StartQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:CreateTable",
                "glue:DeleteTable",
                "glue:BatchDeleteTable",
                "glue:UpdateTable",
                "glue:GetTable",
                "glue:GetTables",
                "glue:BatchCreatePartition",
                "glue:CreatePartition",
                "glue:DeletePartition",
                "glue:BatchDeletePartition",
                "glue:UpdatePartition",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:BatchGetPartition",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DeleteAlarms",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExecuteGovernedQueryStateMachineAthenaExecutionPolicy4FC26084",
        "Roles": Array [
          Object {
            "Fn::Select": Array [
              1,
              Object {
                "Fn::Split": Array [
                  "/",
                  Object {
                    "Fn::Select": Array [
                      5,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQuery41A955B3": Object {
      "DependsOn": Array [
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleDefaultPolicy2BD6045D",
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleCC766280",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/ExecuteGovernedQueryStateMachine/AthenaQueryExecutorGetCachedQuery of get-cached-query.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "ATHENA_EXECUTE_QUERY_ROLE_ARN": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
            },
            "ATHENA_OUTPUT_BUCKET_NAME": Object {
              "Ref": "DataBucket",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "CACHED_QUERY_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Ref",
            },
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleCC766280",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleCC766280": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleDefaultPolicy2BD6045D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableCachedQueryTableFD9290A0Arn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleDefaultPolicy2BD6045D",
        "Roles": Array [
          Object {
            "Ref": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQueryServiceRoleCC766280",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorLogs835F0201": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/ExecuteGovernedQueryStateMachineStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQuery58B2E330": Object {
      "DependsOn": Array [
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRoleDefaultPolicy8525FF5B",
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRole1F29D3E1",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/ExecuteGovernedQueryStateMachine/AthenaQueryExecutorPutCachedQuery of put-cached-query.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "ATHENA_EXECUTE_QUERY_ROLE_ARN": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
            },
            "ATHENA_OUTPUT_BUCKET_NAME": Object {
              "Ref": "DataBucket",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "CACHED_QUERY_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Ref",
            },
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRole1F29D3E1",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRole1F29D3E1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRoleDefaultPolicy8525FF5B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableCachedQueryTableFD9290A0Arn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRoleDefaultPolicy8525FF5B",
        "Roles": Array [
          Object {
            "Ref": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQueryServiceRole1F29D3E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStartAthenaQueryExecutionEA0E790E": Object {
      "DependsOn": Array [
        "ExecuteGovernedQueryStateMachineQueryExecutionStateMachineExecuteAthenaQueryLambdaRolePolicy4CB17413",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/DataProductService/StaticInfrastructure/ExecuteGovernedQueryStateMachine/AthenaQueryExecutorStartAthenaQueryExecution of start-athena-query-execution.ts",
        "Environment": Object {
          "Variables": Object {
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "ATHENA_EXECUTE_QUERY_ROLE_ARN": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
            },
            "ATHENA_OUTPUT_BUCKET_NAME": Object {
              "Ref": "DataBucket",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "CACHED_QUERY_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCachedQueryTableADA4A480Ref",
            },
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineC6570B18": Object {
      "DependsOn": Array [
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleDefaultPolicy7733C5C3",
        "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleF7B236D1",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"GetCachedQuery\\",\\"States\\":{\\"GetCachedQuery\\":{\\"Next\\":\\"IsItemInCache?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQuery41A955B3",
                  "Arn",
                ],
              },
              "\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\"}},\\"IsItemInCache?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.expired\\",\\"BooleanEquals\\":false,\\"Next\\":\\"NotifySuccess\\"}],\\"Default\\":\\"RunQueryOnAthena\\"},\\"RunQueryOnAthena\\":{\\"Next\\":\\"Wait1Second\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"NotifyError\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStartAthenaQueryExecutionEA0E790E",
                  "Arn",
                ],
              },
              "\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\"}},\\"Wait1Second\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":1,\\"Next\\":\\"GetAthenaQueryStatus\\"},\\"GetAthenaQueryStatus\\":{\\"Next\\":\\"IsInFinalState?\\",\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"NotifyError\\"}],\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.athenaStatus\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryExecution\\",\\"Parameters\\":{\\"QueryExecutionId.$\\":\\"$.queryExecutionId\\"}},\\"IsInFinalState?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.athenaStatus.QueryExecution.Status.State\\",\\"StringEquals\\":\\"SUCCEEDED\\",\\"Next\\":\\"WriteInCache\\"},{\\"Variable\\":\\"$.athenaStatus.QueryExecution.Status.State\\",\\"StringEquals\\":\\"FAILED\\",\\"Next\\":\\"NotifyError\\"},{\\"Variable\\":\\"$.athenaStatus.QueryExecution.Status.State\\",\\"StringEquals\\":\\"CANCELLED\\",\\"Next\\":\\"NotifyError\\"}],\\"Default\\":\\"Wait1Second\\"},\\"WriteInCache\\":{\\"Next\\":\\"NotifySuccess\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQuery58B2E330",
                  "Arn",
                ],
              },
              "\\",\\"Parameters\\":{\\"Payload.$\\":\\"$\\"}},\\"NotifySuccess\\":{\\"Type\\":\\"Pass\\",\\"End\\":true},\\"NotifyError\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorLogs835F0201",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleF7B236D1",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleDefaultPolicy7733C5C3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQuery41A955B3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ExecuteGovernedQueryStateMachineAthenaQueryExecutorGetCachedQuery41A955B3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStartAthenaQueryExecutionEA0E790E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStartAthenaQueryExecutionEA0E790E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "athena:getQueryExecution",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQuery58B2E330",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ExecuteGovernedQueryStateMachineAthenaQueryExecutorPutCachedQuery58B2E330",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleDefaultPolicy7733C5C3",
        "Roles": Array [
          Object {
            "Ref": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleF7B236D1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineRoleF7B236D1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExecuteGovernedQueryStateMachineQueryExecutionStateMachineExecuteAthenaQueryLambdaRolePolicy4CB17413": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Athena query access requires * resource",
            },
            Object {
              "id": "W76",
              "reason": "SPCM expected to be high for query execution role since it interacts with many resources",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DataBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DataBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyDataBucket51FCC54DArn",
              },
            },
            Object {
              "Action": Array [
                "sts:AssumeRole",
                "sts:TagSession",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExecuteGovernedQueryStateMachineQueryExecutionStateMachineExecuteAthenaQueryLambdaRolePolicy4CB17413",
        "Roles": Array [
          Object {
            "Fn::Select": Array [
              1,
              Object {
                "Fn::Split": Array [
                  "/",
                  Object {
                    "Fn::Select": Array [
                      5,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GAImportDataStateMachineBA5D539B": Object {
      "DependsOn": Array [
        "GAImportDataStateMachineRoleDefaultPolicyA7B49870",
        "GAImportDataStateMachineRole9EE0538A",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"RunECSImportTask\\",\\"States\\":{\\"RunECSImportTask\\":{\\"Next\\":\\"ECSTaskSucceeded\\",\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"ECSTaskFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"PropagateTags\\":\\"TASK_DEFINITION\\",\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGoogleAnalyticsECSClusterGoogleAnalytics9381E111",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"AdaDataProductServiceStaticInfrastructureECSContainersGoogleAnalyticsECSTaskDefinitiongoogleanalyticsD461B0E9\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"Subnets\\":[\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1Subnet88348AF3",
              },
              "\\",\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2SubnetC8408603",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersContainersVpcECSSecurityGroup789B3CCC",
                  "GroupId",
                ],
              },
              "\\"]}},\\"Overrides\\":{\\"ContainerOverrides\\":[{\\"Name\\":\\"ECSContainerDef-google-analytics\\",\\"Environment\\":[{\\"Name\\":\\"CLIENT_EMAIL\\",\\"Value.$\\":\\"$.clientEmail\\"},{\\"Name\\":\\"CLIENT_ID\\",\\"Value.$\\":\\"$.clientId\\"},{\\"Name\\":\\"PRIVATE_KEY_ID\\",\\"Value.$\\":\\"$.privateKeyId\\"},{\\"Name\\":\\"PRIVATE_KEY_SECRET\\",\\"Value.$\\":\\"$.privateKeySecretName\\"},{\\"Name\\":\\"PROJECT_ID\\",\\"Value.$\\":\\"$.projectId\\"},{\\"Name\\":\\"S3_OUTPUT_BUCKET_URI\\",\\"Value.$\\":\\"$.s3OutputPath\\"},{\\"Name\\":\\"VIEW_ID\\",\\"Value.$\\":\\"$.viewId\\"},{\\"Name\\":\\"SINCE\\",\\"Value.$\\":\\"$.since\\"},{\\"Name\\":\\"UNTIL\\",\\"Value.$\\":\\"$.until\\"},{\\"Name\\":\\"DIMENSIONS\\",\\"Value.$\\":\\"$.dimensions\\"},{\\"Name\\":\\"METRICS\\",\\"Value.$\\":\\"$.metrics\\"},{\\"Name\\":\\"TRIGGER_TYPE\\",\\"Value.$\\":\\"$.triggerType\\"},{\\"Name\\":\\"SCHEDULE_RATE\\",\\"Value.$\\":\\"$.scheduleRate\\"}]}]},\\"LaunchType\\":\\"FARGATE\\",\\"PlatformVersion\\":\\"LATEST\\"}},\\"ECSTaskSucceeded\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"status\\":\\"SUCCEEDED\\"},\\"End\\":true},\\"ECSTaskFailed\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"details.$\\":\\"$\\",\\"error\\":\\"Import failed in the ECS container, verify the logs\\",\\"status\\":\\"FAILED\\"},\\"End\\":true}},\\"TimeoutSeconds\\":172800}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "GAImportDataStateMachineStateMachineLogs7C6A4AA3",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "GAImportDataStateMachineRole9EE0538A",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "GAImportDataStateMachineRole9EE0538A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GAImportDataStateMachineRoleDefaultPolicyA7B49870": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGoogleAnalyticsECSTaskDefinitionGoogleAnalytics92B07651",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGCPAnalyticsRole8573C356",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGoogleAnalyticsECSExecutionRoleGoogleAnalytics0813D8D7",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:ap-southeast-1:1111111111:rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GAImportDataStateMachineRoleDefaultPolicyA7B49870",
        "Roles": Array [
          Object {
            "Ref": "GAImportDataStateMachineRole9EE0538A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GAImportDataStateMachineStateMachineLogs7C6A4AA3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/GAImportDataStateMachineStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GCBigQueryImportDataStateMachineA46C9770": Object {
      "DependsOn": Array [
        "GCBigQueryImportDataStateMachineRoleDefaultPolicy47F3014C",
        "GCBigQueryImportDataStateMachineRole118D47DA",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"RunECSImportTask\\",\\"States\\":{\\"RunECSImportTask\\":{\\"Next\\":\\"ECSTaskSucceeded\\",\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"ECSTaskFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"PropagateTags\\":\\"TASK_DEFINITION\\",\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGCPBigQueryECSClusterGcpBigQueryF6D8B0BC",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"AdaDataProductServiceStaticInfrastructureECSContainersGCPBigQueryECSTaskDefinitiongcpbigquery3D080A68\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"Subnets\\":[\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1Subnet88348AF3",
              },
              "\\",\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2SubnetC8408603",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersContainersVpcECSSecurityGroup789B3CCC",
                  "GroupId",
                ],
              },
              "\\"]}},\\"Overrides\\":{\\"ContainerOverrides\\":[{\\"Name\\":\\"ECSContainerDef-gcp-big-query\\",\\"Environment\\":[{\\"Name\\":\\"CLIENT_EMAIL\\",\\"Value.$\\":\\"$.clientEmail\\"},{\\"Name\\":\\"CLIENT_ID\\",\\"Value.$\\":\\"$.clientId\\"},{\\"Name\\":\\"PRIVATE_KEY_ID\\",\\"Value.$\\":\\"$.privateKeyId\\"},{\\"Name\\":\\"PRIVATE_KEY_SECRET\\",\\"Value.$\\":\\"$.privateKeySecretName\\"},{\\"Name\\":\\"PROJECT_ID\\",\\"Value.$\\":\\"$.projectId\\"},{\\"Name\\":\\"S3_OUTPUT_BUCKET_URI\\",\\"Value.$\\":\\"$.s3OutputPath\\"},{\\"Name\\":\\"QUERY\\",\\"Value.$\\":\\"$.query\\"}]}]},\\"LaunchType\\":\\"FARGATE\\",\\"PlatformVersion\\":\\"LATEST\\"}},\\"ECSTaskSucceeded\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"status\\":\\"SUCCEEDED\\"},\\"End\\":true},\\"ECSTaskFailed\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"details.$\\":\\"$\\",\\"error\\":\\"Import failed in the ECS container, verify the logs\\",\\"status\\":\\"FAILED\\"},\\"End\\":true}},\\"TimeoutSeconds\\":172800}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "GCBigQueryImportDataStateMachineStateMachineLogs247758BC",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "GCBigQueryImportDataStateMachineRole118D47DA",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "GCBigQueryImportDataStateMachineRole118D47DA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GCBigQueryImportDataStateMachineRoleDefaultPolicy47F3014C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGCPBigQueryECSTaskDefinitionGcpBigQuery1AB7422F",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGCPBigQueryRole46A6C643",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGCPBigQueryECSExecutionRoleGcpBigQuery403267BD",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:ap-southeast-1:1111111111:rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GCBigQueryImportDataStateMachineRoleDefaultPolicy47F3014C",
        "Roles": Array [
          Object {
            "Ref": "GCBigQueryImportDataStateMachineRole118D47DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GCBigQueryImportDataStateMachineStateMachineLogs247758BC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/GCBigQueryImportDataStateMachineStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GCPImportDataStateMachine193D1733": Object {
      "DependsOn": Array [
        "GCPImportDataStateMachineRoleDefaultPolicyBFDD71A5",
        "GCPImportDataStateMachineRoleF825A342",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"RunECSImportTask\\",\\"States\\":{\\"RunECSImportTask\\":{\\"Next\\":\\"ECSTaskSucceeded\\",\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"ECSTaskFailed\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"PropagateTags\\":\\"TASK_DEFINITION\\",\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersGCPStorageECSClusterGcpStorageB2D8638A",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"AdaDataProductServiceStaticInfrastructureECSContainersGCPStorageECSTaskDefinitiongcpstorageE5F3AEE6\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"Subnets\\":[\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet1Subnet88348AF3",
              },
              "\\",\\"",
              Object {
                "Ref": "ECSContainersContainersVpcECSPrivateWithNatSubnet2SubnetC8408603",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ECSContainersContainersVpcECSSecurityGroup789B3CCC",
                  "GroupId",
                ],
              },
              "\\"]}},\\"Overrides\\":{\\"ContainerOverrides\\":[{\\"Name\\":\\"ECSContainerDef-gcp-storage\\",\\"Environment\\":[{\\"Name\\":\\"CLIENT_EMAIL\\",\\"Value.$\\":\\"$.clientEmail\\"},{\\"Name\\":\\"CLIENT_ID\\",\\"Value.$\\":\\"$.clientId\\"},{\\"Name\\":\\"PRIVATE_KEY_ID\\",\\"Value.$\\":\\"$.privateKeyId\\"},{\\"Name\\":\\"PRIVATE_KEY_SECRET\\",\\"Value.$\\":\\"$.privateKeySecretName\\"},{\\"Name\\":\\"PROJECT_ID\\",\\"Value.$\\":\\"$.projectId\\"},{\\"Name\\":\\"S3_OUTPUT_BUCKET_URI\\",\\"Value.$\\":\\"$.s3OutputPath\\"},{\\"Name\\":\\"GS_INPUT_BUCKET_URI\\",\\"Value.$\\":\\"$.gcpStorageInputPath\\"}]}]},\\"LaunchType\\":\\"FARGATE\\",\\"PlatformVersion\\":\\"LATEST\\"}},\\"ECSTaskSucceeded\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"status\\":\\"SUCCEEDED\\"},\\"End\\":true},\\"ECSTaskFailed\\":{\\"Type\\":\\"Pass\\",\\"Parameters\\":{\\"details.$\\":\\"$\\",\\"error\\":\\"Import failed in the ECS container, verify the logs\\",\\"status\\":\\"FAILED\\"},\\"End\\":true}},\\"TimeoutSeconds\\":172800}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "GCPImportDataStateMachineStateMachineLogs2958506C",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ERROR",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "GCPImportDataStateMachineRoleF825A342",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "GCPImportDataStateMachineRoleDefaultPolicyBFDD71A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "ECSContainersGCPStorageECSTaskDefinitionGcpStorageC48FDC5D",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGCPStorageRole6FF649D7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "ECSContainersGCPStorageECSExecutionRoleGcpStorageD8DBE133",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:ap-southeast-1:1111111111:rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GCPImportDataStateMachineRoleDefaultPolicyBFDD71A5",
        "Roles": Array [
          Object {
            "Ref": "GCPImportDataStateMachineRoleF825A342",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GCPImportDataStateMachineRoleF825A342": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.ap-southeast-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GCPImportDataStateMachineStateMachineLogs2958506C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/states/ada/GCPImportDataStateMachineStateMachineLogs/loggroup-######",
        "RetentionInDays": 731,
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GlueSecurityConfiguration9540CFAA": Object {
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "JobBookmarksEncryption": Object {
            "JobBookmarksEncryptionMode": "CSE-KMS",
            "KmsKeyArn": Object {
              "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
            },
          },
          "S3Encryptions": Array [
            Object {
              "S3EncryptionMode": "SSE-S3",
            },
          ],
        },
        "Name": "GlueSecurityConfig1436ghashx",
      },
      "Type": "AWS::Glue::SecurityConfiguration",
    },
    "LogGroupEncryptionKmsKeyAliasB77DA9CE": Object {
      "Properties": Object {
        "AliasName": "alias/ada/loggroup/stack/StaticInfrastructure/ghashx",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "LogGroupEncryptionKmsKeyE595E4BA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "LogGroupEncryptionKmsKeyE595E4BA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": Object {
                "ArnLike": Object {
                  "kms:EncryptionContext:aws:logs:arn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-southeast-1:1111111111:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-southeast-1.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "ScriptsBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyBucketKeyScriptsBucketC9CECD84Arn",
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackAccessLogBucketB5B66FEDRef",
          },
          "LogFilePrefix": "scripts-logs/",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
          Object {
            "Key": "aws-cdk:cr-owned:transform_wrapper:2a4828ec",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ScriptsBucketPolicy8E6D5B91": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ScriptsBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ScriptsBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ScriptsBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticInfraConfig57F9689D": Object {
      "Properties": Object {
        "Tags": Object {
          "Application": "Ada",
        },
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"globalHash\\":\\"ghashx\\",\\"counterTableName\\":\\"",
              Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
              },
              "\\",\\"glueKmsKeyArn\\":\\"",
              Object {
                "Ref": "referencetoAdaDataProductServiceGlueEncryptionKey322DD43CArn",
              },
              "\\",\\"glueSecurityConfigurationName\\":\\"GlueSecurityConfig1436ghashx\\",\\"glueDatabaseArn\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":glue:ap-southeast-1:1111111111:database/",
              Object {
                "Ref": "DataProductDatabase03AEDDD4",
              },
              "\\",\\"eventBusName\\":\\"",
              Object {
                "Ref": "referencetoAdaSharedEvntBus3C45F515Ref",
              },
              "\\",\\"glueCrawlerStateMachineName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CrawlerPollerStateMachine3EA4304C",
                  "Name",
                ],
              },
              "\\",\\"executeGeneratedQueryStateMachineArn\\":\\"",
              Object {
                "Ref": "ExecuteGovernedQueryStateMachineAthenaQueryExecutorStateMachineC6570B18",
              },
              "\\",\\"scriptBucketName\\":\\"",
              Object {
                "Ref": "ScriptsBucket",
              },
              "\\",\\"dataBucketName\\":\\"",
              Object {
                "Ref": "DataBucket",
              },
              "\\",\\"lambdas\\":{\\"getCrawledTableDetailsArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaGetCrawledTableDetails55A1CA82",
                  "Arn",
                ],
              },
              "\\",\\"discoverTransformsArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaDiscoverTransformsD8804571",
                  "Arn",
                ],
              },
              "\\",\\"prepareNextTransformArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaPrepareNextTransformB6BEDE78",
                  "Arn",
                ],
              },
              "\\",\\"prepareCtasQueryArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaQuerySourcePrepareCtasQuery0EB60EE7",
                  "Arn",
                ],
              },
              "\\",\\"validateS3PathLambdaArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaValidateS3PathLambdaF4EBCF0E",
                  "Arn",
                ],
              },
              "\\",\\"athenaUtilitiesLambdaName\\":\\"",
              Object {
                "Fn::Select": Array [
                  6,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Ref": "DataProductInfraLambdasGovernanceAthenaUtilsLambdaAliasprodF10E049A",
                      },
                    ],
                  },
                ],
              },
              ":prod\\",\\"generatePIIQueryLambdaArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaGeneratePiiQuery06D4D10B",
                  "Arn",
                ],
              },
              "\\",\\"getPiiQueryResultLambdaArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaGetPiiQueryResult08BB0C28",
                  "Arn",
                ],
              },
              "\\",\\"prepareExternalImportLambdaArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaExternalImportPrepareExternalImportF9E88BEB",
                  "Arn",
                ],
              },
              "\\",\\"startDataImportLambdaArn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DataProductInfraLambdasLambdaStartDataImport98144F54",
                  "Arn",
                ],
              },
              "\\"},\\"executeAthenaQueryLambdaRoleArn\\":\\"",
              Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackExecuteAthenaQueryLambdaRole106600ADArn",
              },
              "\\",\\"googleCloudStorageConnector\\":{\\"importDataStateMachineArn\\":\\"",
              Object {
                "Ref": "GCPImportDataStateMachine193D1733",
              },
              "\\"},\\"googleBigQueryConnector\\":{\\"importDataStateMachineArn\\":\\"",
              Object {
                "Ref": "GCBigQueryImportDataStateMachineA46C9770",
              },
              "\\"},\\"googleAnalyticsConnector\\":{\\"importDataStateMachineArn\\":\\"",
              Object {
                "Ref": "GAImportDataStateMachineBA5D539B",
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TransformsDeployTransformWrapperAwsCliLayer0AA68D2B": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "TransformsDeployTransformWrapperCustomResource74F9C8E5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketKeyPrefix": "transform_wrapper",
        "DestinationBucketName": Object {
          "Ref": "ScriptsBucket",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          "cdk-#####",
        ],
        "SourceObjectKeys": Array [
          "cdkhash######.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
