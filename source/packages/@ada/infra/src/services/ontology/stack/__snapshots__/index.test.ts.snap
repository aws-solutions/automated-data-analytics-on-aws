// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stack snapshots 1`] = `
Object {
  "Description": "(SO0190-OntologyService) - Automated Data Analytics on AWS. Version v1.3.0",
  "Outputs": Object {
    "AdaOntologyServiceApiLambdaGetOntology5C119448Ref": Object {
      "Value": Object {
        "Ref": "ApiLambdaGetOntology1FCF29AC",
      },
    },
    "AdaOntologyServiceApiLambdaListOntology54ED8772Ref": Object {
      "Value": Object {
        "Ref": "ApiLambdaListOntology2CF62F00",
      },
    },
    "ApiOntologyUrl96562E93": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
            },
            ".execute-api.ap-southeast-1.amazonaws.com/prod/ontology",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref": Object {
      "Type": "String",
    },
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref": Object {
      "Type": "String",
    },
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5RootResourceId": Object {
      "Type": "String",
    },
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef": Object {
      "Type": "String",
    },
    "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref": Object {
      "Type": "String",
    },
    "referencetoAdaApiWafDeploymentSecretCA25FA9ARef": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn": Object {
      "Type": "String",
    },
    "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableAliasToOntologyAttributeTable797CB698Arn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn": Object {
      "Type": "String",
    },
    "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn": Object {
      "Type": "String",
    },
    "referencetoAdaLayer6FB4FEF4Ref": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AliasToOntologyAttributeTable": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "alias",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "alias",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "KMSMasterKeyId": Object {
            "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableAliasToOntologyAttributeTable797CB698Arn",
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiAliasToOntologyAttributeTableCounterInitialization05ECDA99": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiAliasToOntologyAttributeTableCounterInitializationCustomResourcePolicyACD2F39F",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"DynamoDB\\",\\"action\\":\\"putItem\\",\\"parameters\\":{\\"TableName\\":\\"",
              Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
              },
              "\\",\\"Item\\":{\\"tableName\\":{\\"S\\":\\"",
              Object {
                "Ref": "AliasToOntologyAttributeTable",
              },
              "\\"},\\"count\\":{\\"N\\":\\"0\\"}}},\\"physicalResourceId\\":{\\"id\\":\\"AliasToOntologyAttributeTable-7524\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiAliasToOntologyAttributeTableCounterInitializationCustomResourcePolicyACD2F39F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiAliasToOntologyAttributeTableCounterInitializationCustomResourcePolicyACD2F39F",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiLambdaDeleteOntology71A88774": Object {
      "DependsOn": Array [
        "ApiLambdaDeleteOntologyServiceRoleDefaultPolicyEDAB8F2F",
        "ApiLambdaDeleteOntologyServiceRoleC7B98625",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/OntologyService/Api/LambdaDeleteOntology of delete-ontology.ts",
        "Environment": Object {
          "Variables": Object {
            "ALIAS_TO_ONTOLOGY_TABLE_NAME": Object {
              "Ref": "AliasToOntologyAttributeTable",
            },
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "ONTOLOGY_TABLE_NAME": Object {
              "Ref": "OntologyAttributesTable",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaDeleteOntologyServiceRoleC7B98625",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiLambdaDeleteOntologyServiceRoleC7B98625": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiLambdaDeleteOntologyServiceRoleDefaultPolicyEDAB8F2F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OntologyAttributesTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableAliasToOntologyAttributeTable797CB698Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AliasToOntologyAttributeTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiLambdaDeleteOntologyServiceRoleDefaultPolicyEDAB8F2F",
        "Roles": Array [
          Object {
            "Ref": "ApiLambdaDeleteOntologyServiceRoleC7B98625",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiLambdaGetOntology1FCF29AC": Object {
      "DependsOn": Array [
        "ApiLambdaGetOntologyServiceRoleDefaultPolicy9D7BBF12",
        "ApiLambdaGetOntologyServiceRole92B22716",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/OntologyService/Api/LambdaGetOntology of get-ontology.ts",
        "Environment": Object {
          "Variables": Object {
            "ALIAS_TO_ONTOLOGY_TABLE_NAME": Object {
              "Ref": "AliasToOntologyAttributeTable",
            },
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "ONTOLOGY_TABLE_NAME": Object {
              "Ref": "OntologyAttributesTable",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaGetOntologyServiceRole92B22716",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiLambdaGetOntologyServiceRole92B22716": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiLambdaGetOntologyServiceRoleDefaultPolicy9D7BBF12": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OntologyAttributesTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiLambdaGetOntologyServiceRoleDefaultPolicy9D7BBF12",
        "Roles": Array [
          Object {
            "Ref": "ApiLambdaGetOntologyServiceRole92B22716",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiLambdaListOntology2CF62F00": Object {
      "DependsOn": Array [
        "ApiLambdaListOntologyServiceRoleDefaultPolicy0B0D0AFD",
        "ApiLambdaListOntologyServiceRole5AE49FE8",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/OntologyService/Api/LambdaListOntology of list-ontology.ts",
        "Environment": Object {
          "Variables": Object {
            "ALIAS_TO_ONTOLOGY_TABLE_NAME": Object {
              "Ref": "AliasToOntologyAttributeTable",
            },
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "ONTOLOGY_TABLE_NAME": Object {
              "Ref": "OntologyAttributesTable",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaListOntologyServiceRole5AE49FE8",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiLambdaListOntologyServiceRole5AE49FE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiLambdaListOntologyServiceRoleDefaultPolicy0B0D0AFD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OntologyAttributesTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiLambdaListOntologyServiceRoleDefaultPolicy0B0D0AFD",
        "Roles": Array [
          Object {
            "Ref": "ApiLambdaListOntologyServiceRole5AE49FE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiLambdaPutOntology8BF11BE1": Object {
      "DependsOn": Array [
        "ApiLambdaPutOntologyServiceRoleDefaultPolicy2D9ABE80",
        "ApiLambdaPutOntologyServiceRole11C0DE4E",
      ],
      "Properties": Object {
        "Architectures": Array [
          "x86_64",
        ],
        "Code": Object {
          "S3Bucket": "cdk-#####",
          "S3Key": "cdkhash######.zip",
        },
        "Description": "TypescriptFunction Ada/OntologyService/Api/LambdaPutOntology of put-ontology.ts",
        "Environment": Object {
          "Variables": Object {
            "ALIAS_TO_ONTOLOGY_TABLE_NAME": Object {
              "Ref": "AliasToOntologyAttributeTable",
            },
            "API_ENDPOINT": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "https://",
                  Object {
                    "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
                  },
                  ".execute-api.ap-southeast-1.amazonaws.com/prod/",
                ],
              ],
            },
            "API_WAF_ALLOW_RULE_SECRET": Object {
              "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
            },
            "INTERNAL_TOKEN_KMS_KEY": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550ERef",
            },
            "INTERNAL_TOKEN_SECRET_NAME": "sign-internal-token2855ghashx",
            "LOCK_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Ref",
            },
            "ONTOLOGY_TABLE_NAME": Object {
              "Ref": "OntologyAttributesTable",
            },
            "RELATIONSHIP_TABLE_NAME": Object {
              "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Ref",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "referencetoAdaLayer6FB4FEF4Ref",
          },
        ],
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaPutOntologyServiceRole11C0DE4E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
        "Timeout": 30,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiLambdaPutOntologyServiceRole11C0DE4E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiLambdaPutOntologyServiceRoleDefaultPolicy2D9ABE80": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaApiWafDeploymentSecretCA25FA9ARef",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackKeyInternalTokenE7D6550EArn",
              },
            },
            Object {
              "Action": "secretsManager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:ap-southeast-1:1111111111:secret:sign-internal-token2855ghashx*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableLocks696688D7Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesLocksC922FC29Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableRelationships0CDF4443Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackEntityManagementTablesRelationshipsAA870878Arn",
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "OntologyAttributesTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableAliasToOntologyAttributeTable797CB698Arn",
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AliasToOntologyAttributeTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiLambdaPutOntologyServiceRoleDefaultPolicy2D9ABE80",
        "Roles": Array [
          Object {
            "Ref": "ApiLambdaPutOntologyServiceRole11C0DE4E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiOntologyAttributesTableCounterInitializationCEC90101": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiOntologyAttributesTableCounterInitializationCustomResourcePolicy71E3487D",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"DynamoDB\\",\\"action\\":\\"putItem\\",\\"parameters\\":{\\"TableName\\":\\"",
              Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Ref",
              },
              "\\",\\"Item\\":{\\"tableName\\":{\\"S\\":\\"",
              Object {
                "Ref": "OntologyAttributesTable",
              },
              "\\"},\\"count\\":{\\"N\\":\\"0\\"}}},\\"physicalResourceId\\":{\\"id\\":\\"OntologyAttributesTable-3405\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiOntologyAttributesTableCounterInitializationCustomResourcePolicy71E3487D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "referencetoAdaCommonStackNestedStackCommonStackNestedStackResourceD51B693FOutputsAdaCommonStackCounterTable5D6ADA16Arn",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiOntologyAttributesTableCounterInitializationCustomResourcePolicy71E3487D",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesADDRESS2873C87F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesADDRESSCustomResourcePolicy24C30AC8",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A physical address, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"100 Main Street, Anytown, USA\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Suite #12, Building 123\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\". An address can include a street, building, location, city, state, country, county, zip, precinct, neighborhood, and more.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-ADDRESS\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A physical address, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"100 Main Street, Anytown, USA\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Suite #12, Building 123\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\". An address can include a street, building, location, city, state, country, county, zip, precinct, neighborhood, and more.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-ADDRESS\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesADDRESSCustomResourcePolicy24C30AC8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesADDRESSCustomResourcePolicy24C30AC8",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesAGECustomResourcePolicyC659D7B7": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesAGECustomResourcePolicyC659D7B7",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesAGEFD4590BB": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesADDRESS2873C87F",
        "ApiPiiOntologiesAGECustomResourcePolicyC659D7B7",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"age\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AGE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An individual's age, including the quantity and unit of time. For example, in the phrase \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"I am 40 years old,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" Amazon Comprehend recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"40 years\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an age.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"age\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AGE\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"age\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AGE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An individual's age, including the quantity and unit of time. For example, in the phrase \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"I am 40 years old,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" Amazon Comprehend recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"40 years\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an age.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"age\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AGE\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesAWSACCESSKEYCustomResourcePolicy5DB6CBD3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesAWSACCESSKEYCustomResourcePolicy5DB6CBD3",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesAWSACCESSKEYF2614338": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesAGEFD4590BB",
        "ApiPiiOntologiesAWSACCESSKEYCustomResourcePolicy5DB6CBD3",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"aws_access_key\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AWS ACCESS KEY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A unique identifier that's associated with a secret access key; the access key ID and secret access key are used together to sign programmatic AWS requests cryptographically.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aws_access_key\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AWS ACCESS KEY\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"aws_access_key\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AWS ACCESS KEY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A unique identifier that's associated with a secret access key; the access key ID and secret access key are used together to sign programmatic AWS requests cryptographically.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aws_access_key\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AWS ACCESS KEY\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesAWSSECRETKEY51210CA9": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesAWSACCESSKEYF2614338",
        "ApiPiiOntologiesAWSSECRETKEYCustomResourcePolicyA9EF657E",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"aws_secret_key\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AWS SECRET KEY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A unique identifier that's associated with an access key; the access key ID and secret access key are used together to sign programmatic AWS requests cryptographically.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aws_secret_key\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AWS SECRET KEY\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"aws_secret_key\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AWS SECRET KEY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A unique identifier that's associated with an access key; the access key ID and secret access key are used together to sign programmatic AWS requests cryptographically.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aws_secret_key\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-AWS SECRET KEY\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesAWSSECRETKEYCustomResourcePolicyA9EF657E": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesAWSSECRETKEYCustomResourcePolicyA9EF657E",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesBANKACCOUNTNUMBER975AB206": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesAWSSECRETKEY51210CA9",
        "ApiPiiOntologiesBANKACCOUNTNUMBERCustomResourcePolicyB90D6E1C",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"bank_account_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"BANK ACCOUNT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US bank account number. These are typically between 10 - 12 digits long, but Amazon Comprehend also recognizes bank account numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bank_account_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-BANK ACCOUNT NUMBER\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"bank_account_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"BANK ACCOUNT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US bank account number. These are typically between 10 - 12 digits long, but Amazon Comprehend also recognizes bank account numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bank_account_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-BANK ACCOUNT NUMBER\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesBANKACCOUNTNUMBERCustomResourcePolicyB90D6E1C": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesBANKACCOUNTNUMBERCustomResourcePolicyB90D6E1C",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesBANKROUTINGCustomResourcePolicyA6726574": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesBANKROUTINGCustomResourcePolicyA6726574",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesBANKROUTINGD92A207C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesBANKACCOUNTNUMBER975AB206",
        "ApiPiiOntologiesBANKROUTINGCustomResourcePolicyA6726574",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"bank_routing\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"BANK ROUTING\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US bank account routing number. These are typically 9 digits long, but Amazon Comprehend also recognizes routing numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bank_routing\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-BANK ROUTING\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"bank_routing\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"BANK ROUTING\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US bank account routing number. These are typically 9 digits long, but Amazon Comprehend also recognizes routing numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bank_routing\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-BANK ROUTING\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesCREDITDEBITCVV15666AD2": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesBANKROUTINGD92A207C",
        "ApiPiiOntologiesCREDITDEBITCVVCustomResourcePolicyD71E17A8",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_cvv\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT CVV\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A 3-digit card verification code (CVV) that is present on VISA, MasterCard, and Discover credit and debit cards. In American Express credit or debit cards, it is a 4-digit numeric code.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_cvv\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT CVV\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_cvv\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT CVV\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A 3-digit card verification code (CVV) that is present on VISA, MasterCard, and Discover credit and debit cards. In American Express credit or debit cards, it is a 4-digit numeric code.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_cvv\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT CVV\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesCREDITDEBITCVVCustomResourcePolicyD71E17A8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesCREDITDEBITCVVCustomResourcePolicyD71E17A8",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesCREDITDEBITEXPIRY2DA8F79F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesCREDITDEBITCVV15666AD2",
        "ApiPiiOntologiesCREDITDEBITEXPIRYCustomResourcePolicyC45460E3",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_expiry\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT EXPIRY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The expiration date for a credit or debit card. This number is usually 4 digits long and formatted as month/year or MM/YY. For example, Amazon Comprehend can recognize expiration dates such as 01/21, 01/2021, and Jan 2021.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_expiry\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT EXPIRY\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_expiry\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT EXPIRY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The expiration date for a credit or debit card. This number is usually 4 digits long and formatted as month/year or MM/YY. For example, Amazon Comprehend can recognize expiration dates such as 01/21, 01/2021, and Jan 2021.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_expiry\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT EXPIRY\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesCREDITDEBITEXPIRYCustomResourcePolicyC45460E3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesCREDITDEBITEXPIRYCustomResourcePolicyC45460E3",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesCREDITDEBITNUMBERCustomResourcePolicy7D2A60D8": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesCREDITDEBITNUMBERCustomResourcePolicy7D2A60D8",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesCREDITDEBITNUMBERD2A04A5D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesCREDITDEBITEXPIRY2DA8F79F",
        "ApiPiiOntologiesCREDITDEBITNUMBERCustomResourcePolicy7D2A60D8",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The number for a credit or debit card. These numbers can vary from 13 to 16 digits in length, but Amazon Comprehend also recognizes credit or debit card numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT NUMBER\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"credit_debit_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"CREDIT DEBIT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The number for a credit or debit card. These numbers can vary from 13 to 16 digits in length, but Amazon Comprehend also recognizes credit or debit card numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"credit_debit_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-CREDIT DEBIT NUMBER\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesDATETIME88C310A8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesCREDITDEBITNUMBERD2A04A5D",
        "ApiPiiOntologiesDATETIMECustomResourcePolicyD224A996",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"date_time\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DATE TIME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A date can include a year, month, day, day of week, or time of day. For example, Amazon Comprehend recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"January 19, 2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11 am\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as dates. Amazon Comprehend will recognize partial dates, date ranges, and date intervals. It will also recognize decades, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"the 1990s\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date_time\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-DATE TIME\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"date_time\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DATE TIME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A date can include a year, month, day, day of week, or time of day. For example, Amazon Comprehend recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"January 19, 2020\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" or \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"11 am\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as dates. Amazon Comprehend will recognize partial dates, date ranges, and date intervals. It will also recognize decades, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"the 1990s\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date_time\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-DATE TIME\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesDATETIMECustomResourcePolicyD224A996": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesDATETIMECustomResourcePolicyD224A996",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesDRIVERID84F72927": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesDATETIME88C310A8",
        "ApiPiiOntologiesDRIVERIDCustomResourcePolicyE40D642A",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"driver_id\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DRIVER ID\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The number assigned to a driver's license, which is an official document permitting an individual to operate one or more motorized vehicles on a public road. A driver's license number consists of alphanumeric characters.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"driver_id\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-DRIVER ID\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"driver_id\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DRIVER ID\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"The number assigned to a driver's license, which is an official document permitting an individual to operate one or more motorized vehicles on a public road. A driver's license number consists of alphanumeric characters.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"driver_id\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-DRIVER ID\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesDRIVERIDCustomResourcePolicyE40D642A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesDRIVERIDCustomResourcePolicyE40D642A",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesEMAIL7E79373B": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesDRIVERID84F72927",
        "ApiPiiOntologiesEMAILCustomResourcePolicy9FD95168",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"email\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EMAIL\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An email address.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"email\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-EMAIL\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"email\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EMAIL\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An email address.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"email\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-EMAIL\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesEMAILCustomResourcePolicy9FD95168": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesEMAILCustomResourcePolicy9FD95168",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesIPADDRESS4B7AD493": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesEMAIL7E79373B",
        "ApiPiiOntologiesIPADDRESSCustomResourcePolicy5DB05CD3",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"ip_address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"IP ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An IPv4 address, such as 198.51.100.0.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ip_address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-IP ADDRESS\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"ip_address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"IP ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An IPv4 address, such as 198.51.100.0.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ip_address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-IP ADDRESS\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesIPADDRESSCustomResourcePolicy5DB05CD3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesIPADDRESSCustomResourcePolicy5DB05CD3",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesMACADDRESS32DEEF51": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesIPADDRESS4B7AD493",
        "ApiPiiOntologiesMACADDRESSCustomResourcePolicy3DB86205",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"mac_address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"MAC ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A media access control (MAC) address is a unique identifier assigned to a network interface controller (NIC).\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"mac_address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-MAC ADDRESS\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"mac_address\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"MAC ADDRESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A media access control (MAC) address is a unique identifier assigned to a network interface controller (NIC).\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"mac_address\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-MAC ADDRESS\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesMACADDRESSCustomResourcePolicy3DB86205": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesMACADDRESSCustomResourcePolicy3DB86205",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesNAME9A517E92": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesMACADDRESS32DEEF51",
        "ApiPiiOntologiesNAMECustomResourcePolicy0358CBE7",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"name\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"NAME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An individual's name. This entity type does not include titles, such as Mr., Mrs., Miss, or Dr. Amazon Comprehend does not apply this entity type to names that are part of organizations or addresses. For example, Amazon Comprehend recognizes the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"John Doe Organization\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an organization, and it recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Jane Doe Street\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an address.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-NAME\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"name\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"NAME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An individual's name. This entity type does not include titles, such as Mr., Mrs., Miss, or Dr. Amazon Comprehend does not apply this entity type to names that are part of organizations or addresses. For example, Amazon Comprehend recognizes the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"John Doe Organization\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an organization, and it recognizes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Jane Doe Street\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" as an address.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-NAME\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesNAMECustomResourcePolicy0358CBE7": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesNAMECustomResourcePolicy0358CBE7",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesPASSPORTNUMBERB70FA72E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesNAME9A517E92",
        "ApiPiiOntologiesPASSPORTNUMBERCustomResourcePolicyA85D2365",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"passport_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PASSPORT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US passport number. Passport numbers range from 6 - 9 alphanumeric characters.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"passport_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PASSPORT NUMBER\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"passport_number\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PASSPORT NUMBER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A US passport number. Passport numbers range from 6 - 9 alphanumeric characters.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"passport_number\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PASSPORT NUMBER\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesPASSPORTNUMBERCustomResourcePolicyA85D2365": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesPASSPORTNUMBERCustomResourcePolicyA85D2365",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesPASSWORDC3EE7667": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesPASSPORTNUMBERB70FA72E",
        "ApiPiiOntologiesPASSWORDCustomResourcePolicyC6F7D8ED",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"password\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PASSWORD\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An alphanumeric string that is used as a password, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"*very20special#pass*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"password\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PASSWORD\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"password\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PASSWORD\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"An alphanumeric string that is used as a password, such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"*very20special#pass*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"password\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PASSWORD\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesPASSWORDCustomResourcePolicyC6F7D8ED": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesPASSWORDCustomResourcePolicyC6F7D8ED",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesPHONE249A1FE3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesPASSWORDC3EE7667",
        "ApiPiiOntologiesPHONECustomResourcePolicyCE0E89F3",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"phone\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PHONE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A phone number. This entity type also includes fax and pager numbers.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"phone\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PHONE\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"phone\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PHONE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A phone number. This entity type also includes fax and pager numbers.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"phone\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PHONE\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesPHONECustomResourcePolicyCE0E89F3": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesPHONECustomResourcePolicyCE0E89F3",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesPIN50E7D50C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesPHONE249A1FE3",
        "ApiPiiOntologiesPINCustomResourcePolicy80EE21A2",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"pin\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PIN\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A 4-digit personal identification number (PIN) that allows someone to access their bank account information.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pin\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PIN\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"pin\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PIN\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A 4-digit personal identification number (PIN) that allows someone to access their bank account information.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pin\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-PIN\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesPINCustomResourcePolicy80EE21A2": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesPINCustomResourcePolicy80EE21A2",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesSSN4F15F3FF": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesPIN50E7D50C",
        "ApiPiiOntologiesSSNCustomResourcePolicyD8126876",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"ssn\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"SSN\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A Social Security Number (SSN) is a 9-digit number that is issued to US citizens, permanent residents, and temporary working residents. Amazon Comprehend also recognizes Social Security Numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ssn\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-SSN\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"ssn\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"SSN\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A Social Security Number (SSN) is a 9-digit number that is issued to US citizens, permanent residents, and temporary working residents. Amazon Comprehend also recognizes Social Security Numbers when only the last 4 digits are present.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ssn\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-SSN\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesSSNCustomResourcePolicyD8126876": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesSSNCustomResourcePolicyD8126876",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesURL04560ACE": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesSSN4F15F3FF",
        "ApiPiiOntologiesURLCustomResourcePolicy86098855",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"url\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"URL\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A web address, such as www.example.com.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"url\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-URL\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"url\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"URL\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A web address, such as www.example.com.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"url\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-URL\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesURLCustomResourcePolicy86098855": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesURLCustomResourcePolicy86098855",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiPiiOntologiesUSERNAME82E1A50E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ApiPiiOntologiesURL04560ACE",
        "ApiPiiOntologiesUSERNAMECustomResourcePolicyB9EC9D5D",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"username\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"USERNAME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A user name that identifies an account, such as a login name, screen name, nick name, or handle.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"username\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-USERNAME\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679F53Fac002430Cb0Da5B7982Bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"Lambda\\",\\"action\\":\\"invoke\\",\\"parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ApiLambdaPutOntology8BF11BE1",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":\\"{\\\\\\"requestContext\\\\\\":{\\\\\\"authorizer\\\\\\":{\\\\\\"x-user-id\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-username\\\\\\":\\\\\\"system\\\\\\",\\\\\\"x-groups\\\\\\":\\\\\\"system\\\\\\"}},\\\\\\"pathParameters\\\\\\":{\\\\\\"ontologyNamespace\\\\\\":\\\\\\"pii_classifications\\\\\\",\\\\\\"ontologyId\\\\\\":\\\\\\"username\\\\\\"},\\\\\\"body\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"USERNAME\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"A user name that identifies an account, such as a login name, screen name, nick name, or handle.\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"username\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ontologyNamespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"pii_classifications\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"aliases\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"defaultLens\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"hashed\\\\\\\\\\\\\\"}\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"PiiOntologies-USERNAME\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiPiiOntologiesUSERNAMECustomResourcePolicyB9EC9D5D": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "[*] Resource required for custom resource invoking lambda since scoping to functionArn did not work",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiPiiOntologiesUSERNAMECustomResourcePolicyB9EC9D5D",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiRestApiRefOntologyAE96D9A0": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5RootResourceId",
        },
        "PathPart": "ontology",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiRefontologyFindByAliasCCE8B161": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ApiRestApiRefOntologyAE96D9A0",
        },
        "PathPart": "findByAlias",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiRefontologyGET01F5D5C8": Object {
      "DependsOn": Array [
        "ApiRestApiRefontologyOPTIONS2B2CA766",
      ],
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiLambdaListOntology2CF62F00",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {},
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "400",
          },
        ],
        "OperationName": "ListOntologies",
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.nextToken": false,
          "method.request.querystring.pageSize": false,
        },
        "RequestValidatorId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref",
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiRefOntologyAE96D9A0",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyGETApiPermissionAdaOntologyServiceApiRestApiRefEF70DF76GETOntology1DC9A3CD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaListOntology2CF62F00",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/prod/GET/ontology",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyGETApiPermissionTestAdaOntologyServiceApiRestApiRefEF70DF76GETOntologyB1E75EF3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaListOntology2CF62F00",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/test-invoke-stage/GET/ontology",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyOPTIONS2B2CA766": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'600'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiRestApiRefOntologyAE96D9A0",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyOntologyNamespaceC2CCA4F6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ApiRestApiRefOntologyAE96D9A0",
        },
        "PathPart": "{ontologyNamespace}",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiRefontologyfindByAliasGETFDF65459": Object {
      "DependsOn": Array [
        "ApiRestApiRefontologyfindByAliasOPTIONS83B72C67",
      ],
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "{\\"aliases\\":{\\"email_address\\":{\\"ontologyId\\":\\"ontology-email-abc\\",\\"name\\":\\"Email\\",\\"aliases\\":[{\\"name\\":\\"email_address\\"},{\\"name\\":\\"email\\"},{\\"name\\":\\"electronic_mail_address\\"}],\\"createdBy\\":\\"user123\\",\\"createdTimestamp\\":\\"2021-08-02T07:16:17Z\\",\\"updatedBy\\":\\"user123\\",\\"updatedTimestamp\\":\\"2021-08-02T07:16:17Z\\"}},\\"nextToken\\":\\"abc123\\"}",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{\\"statusCode\\":200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "ApiRestApiRefontologyfindByAliasListOntologyFindByAliasesResponse42E9C999",
              },
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "400",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "404",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "403",
          },
        ],
        "OperationName": "ListOntologyFindByAliases",
        "RequestParameters": Object {
          "method.request.querystring.aliases": true,
          "method.request.querystring.limit": false,
          "method.request.querystring.nextToken": false,
          "method.request.querystring.pageSize": false,
        },
        "RequestValidatorId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref",
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyFindByAliasCCE8B161",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyfindByAliasListOntologyFindByAliasesResponse42E9C999": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "The matching ontology for each given alias",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "definitions": Object {
            "CreateAndUpdateDetails": Object {
              "properties": Object {
                "createdBy": Object {
                  "maxLength": 256,
                  "pattern": "[\\\\w\\\\s+=.@-]+",
                  "type": "string",
                },
                "createdTimestamp": Object {
                  "maxLength": 64,
                  "pattern": "^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?:T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?))?$",
                  "type": "string",
                },
                "updatedBy": Object {
                  "maxLength": 256,
                  "pattern": "[\\\\w\\\\s+=.@-]+",
                  "type": "string",
                },
                "updatedTimestamp": Object {
                  "maxLength": 64,
                  "pattern": "^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?:T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?))?$",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "LensEnum": Object {
              "description": "Lens value",
              "enum": Array [
                "clear",
                "hidden",
                "hashed",
                "ada_detect_pii_types",
              ],
              "type": "string",
            },
            "Ontology": Object {
              "description": "Uniquely identifies the ontology attribute.",
              "properties": Object {
                "aliases": Object {
                  "description": "Alternate names for the ontology attribute, used for ontology suggestions",
                  "items": Object {
                    "$ref": "#/definitions/OntologyAlias",
                  },
                  "type": "array",
                },
                "defaultLens": Object {
                  "$ref": "#/definitions/LensEnum",
                  "description": "Lens value",
                },
                "description": Object {
                  "description": "A description of the ontology attribute",
                  "maxLength": 2048,
                  "pattern": "^[\\\\w+ _.:,\\\\/*&%$#=+-@?!|()\\"'\\\\]\\\\[]*$",
                  "type": "string",
                },
                "name": Object {
                  "description": "The name of the ontology attribute",
                  "maxLength": 2048,
                  "minLength": 2,
                  "pattern": "^[\\\\w _-]*$",
                  "type": "string",
                },
                "ontologyId": Object {
                  "description": "Identifies the ontology attribute within the ontologyNamespace",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
                "ontologyNamespace": Object {
                  "description": "The namespace the ontology attribute belongs to",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
              },
              "required": Array [
                "aliases",
                "name",
                "ontologyId",
                "ontologyNamespace",
              ],
              "type": "object",
            },
            "OntologyAlias": Object {
              "properties": Object {
                "name": Object {
                  "description": "The name of an alias for this ontology attribute",
                  "maxLength": 2048,
                  "minLength": 2,
                  "pattern": "^[\\\\w _-]*$",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
              ],
              "type": "object",
            },
            "OntologyEntity": Object {
              "description": "Uniquely identifies the ontology attribute.",
              "properties": Object {
                "aliases": Object {
                  "description": "Alternate names for the ontology attribute, used for ontology suggestions",
                  "items": Object {
                    "$ref": "#/definitions/OntologyAlias",
                  },
                  "type": "array",
                },
                "createdBy": Object {
                  "maxLength": 256,
                  "pattern": "[\\\\w\\\\s+=.@-]+",
                  "type": "string",
                },
                "createdTimestamp": Object {
                  "maxLength": 64,
                  "pattern": "^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?:T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?))?$",
                  "type": "string",
                },
                "defaultLens": Object {
                  "$ref": "#/definitions/LensEnum",
                  "description": "Lens value",
                },
                "description": Object {
                  "description": "A description of the ontology attribute",
                  "maxLength": 2048,
                  "pattern": "^[\\\\w+ _.:,\\\\/*&%$#=+-@?!|()\\"'\\\\]\\\\[]*$",
                  "type": "string",
                },
                "name": Object {
                  "description": "The name of the ontology attribute",
                  "maxLength": 2048,
                  "minLength": 2,
                  "pattern": "^[\\\\w _-]*$",
                  "type": "string",
                },
                "ontologyId": Object {
                  "description": "Identifies the ontology attribute within the ontologyNamespace",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
                "ontologyNamespace": Object {
                  "description": "The namespace the ontology attribute belongs to",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
                "updatedBy": Object {
                  "maxLength": 256,
                  "pattern": "[\\\\w\\\\s+=.@-]+",
                  "type": "string",
                },
                "updatedTimestamp": Object {
                  "maxLength": 64,
                  "pattern": "^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?:T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?))?$",
                  "type": "string",
                },
              },
              "required": Array [
                "aliases",
                "name",
                "ontologyId",
                "ontologyNamespace",
              ],
              "type": "object",
            },
            "OntologyIdentifier": Object {
              "description": "Uniquely identifies the ontology attribute.",
              "properties": Object {
                "ontologyId": Object {
                  "description": "Identifies the ontology attribute within the ontologyNamespace",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
                "ontologyNamespace": Object {
                  "description": "The namespace the ontology attribute belongs to",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
              },
              "required": Array [
                "ontologyId",
                "ontologyNamespace",
              ],
              "type": "object",
            },
            "PaginatedResponse": Object {
              "properties": Object {
                "nextToken": Object {
                  "type": "string",
                },
                "totalItems": Object {
                  "type": "number",
                },
              },
              "type": "object",
            },
          },
          "properties": Object {
            "aliases": Object {
              "additionalProperties": Object {
                "$ref": "#/definitions/OntologyEntity",
                "description": "Uniquely identifies the ontology attribute.",
              },
              "description": "A map of alias to the matching ontology attribute",
              "type": "object",
            },
            "nextToken": Object {
              "type": "string",
            },
            "totalItems": Object {
              "type": "number",
            },
          },
          "required": Array [
            "aliases",
          ],
          "title": "ListOntologyFindByAliasesResponse",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "ApiRestApiRefontologyfindByAliasOPTIONS83B72C67": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'600'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyFindByAliasCCE8B161",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceOPTIONSDBF2C1CC": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'600'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyOntologyNamespaceC2CCA4F6",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceOntologyIdB8F14038": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "ApiRestApiRefontologyOntologyNamespaceC2CCA4F6",
        },
        "PathPart": "{ontologyId}",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdDELETE107B38CF": Object {
      "DependsOn": Array [
        "ApiRestApiRefontologyontologyNamespaceontologyIdPUT276A1AB3",
      ],
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref",
        },
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiLambdaDeleteOntology71A88774",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {},
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "400",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "404",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "403",
          },
        ],
        "OperationName": "DeleteOntology",
        "RequestParameters": Object {
          "method.request.path.ontologyId": true,
          "method.request.path.ontologyNamespace": true,
        },
        "RequestValidatorId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref",
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyontologyNamespaceOntologyIdB8F14038",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdDELETEApiPermissionAdaOntologyServiceApiRestApiRefEF70DF76DELETEOntologyOntologyNamespaceOntologyId21AE36EA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaDeleteOntology71A88774",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/prod/DELETE/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdDELETEApiPermissionTestAdaOntologyServiceApiRestApiRefEF70DF76DELETEOntologyOntologyNamespaceOntologyId17E88F2D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaDeleteOntology71A88774",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/test-invoke-stage/DELETE/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdGETApiPermissionAdaOntologyServiceApiRestApiRefEF70DF76GETOntologyOntologyNamespaceOntologyId68FF6B3E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaGetOntology1FCF29AC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/prod/GET/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdGETApiPermissionTestAdaOntologyServiceApiRestApiRefEF70DF76GETOntologyOntologyNamespaceOntologyId8FC1E93F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaGetOntology1FCF29AC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/test-invoke-stage/GET/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdGETEB6B684C": Object {
      "DependsOn": Array [
        "ApiRestApiRefontologyontologyNamespaceontologyIdOPTIONS2DB86D3E",
      ],
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiLambdaGetOntology1FCF29AC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {},
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "400",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "404",
          },
        ],
        "OperationName": "GetOntology",
        "RequestParameters": Object {
          "method.request.path.ontologyId": true,
          "method.request.path.ontologyNamespace": true,
        },
        "RequestValidatorId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref",
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyontologyNamespaceOntologyIdB8F14038",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdOPTIONS2DB86D3E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Max-Age": "'600'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Max-Age": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyontologyNamespaceOntologyIdB8F14038",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdPUT276A1AB3": Object {
      "DependsOn": Array [
        "ApiRestApiRefontologyontologyNamespaceontologyIdGETEB6B684C",
      ],
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiCustomAuthorizerHandler80C96C55Ref",
        },
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiLambdaPutOntology8BF11BE1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {},
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "400",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "404",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiErrorModelD8BFCFCERef",
              },
            },
            "StatusCode": "403",
          },
        ],
        "OperationName": "PutOntology",
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "ApiRestApiRefontologyontologyNamespaceontologyIdPutOntologyRequest3B707AD1",
          },
        },
        "RequestParameters": Object {
          "method.request.path.ontologyId": true,
          "method.request.path.ontologyNamespace": true,
        },
        "RequestValidatorId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApiFederatedRestApiValidator5117C971Ref",
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiRefontologyontologyNamespaceOntologyIdB8F14038",
        },
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdPUTApiPermissionAdaOntologyServiceApiRestApiRefEF70DF76PUTOntologyOntologyNamespaceOntologyIdBCB83236": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaPutOntology8BF11BE1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/prod/PUT/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdPUTApiPermissionTestAdaOntologyServiceApiRestApiRefEF70DF76PUTOntologyOntologyNamespaceOntologyId2381E2CB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiLambdaPutOntology8BF11BE1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-southeast-1:1111111111:",
              Object {
                "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
              },
              "/test-invoke-stage/PUT/ontology/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiRefontologyontologyNamespaceontologyIdPutOntologyRequest3B707AD1": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Description": "Details about the new ontology",
        "RestApiId": Object {
          "Ref": "referencetoAdaApiServiceNestedStackApiServiceNestedStackResourceBBF04FB4OutputsAdaApiServiceFederatedApiFederatedRestApi1FB0E4F5Ref",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "definitions": Object {
            "LensEnum": Object {
              "description": "Lens value",
              "enum": Array [
                "clear",
                "hidden",
                "hashed",
                "ada_detect_pii_types",
              ],
              "type": "string",
            },
            "OntologyAlias": Object {
              "properties": Object {
                "name": Object {
                  "description": "The name of an alias for this ontology attribute",
                  "maxLength": 2048,
                  "minLength": 2,
                  "pattern": "^[\\\\w _-]*$",
                  "type": "string",
                },
              },
              "required": Array [
                "name",
              ],
              "type": "object",
            },
            "OntologyIdentifier": Object {
              "description": "Uniquely identifies the ontology attribute.",
              "properties": Object {
                "ontologyId": Object {
                  "description": "Identifies the ontology attribute within the ontologyNamespace",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
                "ontologyNamespace": Object {
                  "description": "The namespace the ontology attribute belongs to",
                  "maxLength": 256,
                  "minLength": 2,
                  "pattern": "^[a-z][a-z_0-9]*$",
                  "type": "string",
                },
              },
              "required": Array [
                "ontologyId",
                "ontologyNamespace",
              ],
              "type": "object",
            },
          },
          "description": "Uniquely identifies the ontology attribute.",
          "properties": Object {
            "aliases": Object {
              "description": "Alternate names for the ontology attribute, used for ontology suggestions",
              "items": Object {
                "$ref": "#/definitions/OntologyAlias",
              },
              "type": "array",
            },
            "defaultLens": Object {
              "$ref": "#/definitions/LensEnum",
              "description": "Lens value",
            },
            "description": Object {
              "description": "A description of the ontology attribute",
              "maxLength": 2048,
              "pattern": "^[\\\\w+ _.:,\\\\/*&%$#=+-@?!|()\\"'\\\\]\\\\[]*$",
              "type": "string",
            },
            "name": Object {
              "description": "The name of the ontology attribute",
              "maxLength": 2048,
              "minLength": 2,
              "pattern": "^[\\\\w _-]*$",
              "type": "string",
            },
            "ontologyId": Object {
              "description": "Identifies the ontology attribute within the ontologyNamespace",
              "maxLength": 256,
              "minLength": 2,
              "pattern": "^[a-z][a-z_0-9]*$",
              "type": "string",
            },
            "ontologyNamespace": Object {
              "description": "The namespace the ontology attribute belongs to",
              "maxLength": 256,
              "minLength": 2,
              "pattern": "^[a-z][a-z_0-9]*$",
              "type": "string",
            },
            "updatedTimestamp": Object {
              "maxLength": 64,
              "pattern": "^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?:T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?))?$",
              "type": "string",
            },
          },
          "required": Array [
            "name",
            "aliases",
          ],
          "title": "PutOntologyRequest",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "AppRegistryAssociation": Object {
      "Properties": Object {
        "Application": Object {
          "Fn::Join": Array [
            "-",
            Array [
              "Automated-Data-Analysis-on-AWS",
              Object {
                "Ref": "AWS::Region",
              },
              Object {
                "Ref": "AWS::AccountId",
              },
            ],
          ],
        },
        "Resource": Object {
          "Ref": "AWS::StackId",
        },
        "ResourceType": "CFN_STACK",
      },
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
    },
    "OntologyAttributesTable": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "ontologyNamespace",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "ontologyId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "ontologyNamespace",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "ontologyId",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "KMSMasterKeyId": Object {
            "Ref": "referencetoAdaKMSStackNestedStackKMSStackNestedStackResourceA6F3CE60OutputsAdaKMSStackKeyTableOntologyAttributesTable18EF31EFArn",
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "Tags": Array [
          Object {
            "Key": "Application",
            "Value": "Ada",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
