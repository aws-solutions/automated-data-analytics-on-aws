/*! Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0 */
import { DataProductTransform, DataSetIdentifiers, S3Location } from '@ada/api';

export { DefaultUser, DataProductEventDetailTypes } from '@ada/common';

/**
 * Details required to perform a transform job on a data product
 */
export interface TransformJob extends DataProductTransform {
  readonly applicableClassifications?: string[];
  readonly glueJobName: string;
  readonly outputS3Target: S3Location;
  readonly outputS3TargetPath: string;
  readonly tempS3Path: string;
  readonly outputCrawlerName: string;
  readonly outputCrawlerTablePrefix: string;
}

/**
 * A transform job ready to run on a particular table
 */
export interface ResolvedTransformJob extends TransformJob {
  readonly inputTableName: string;
}

/**
 * Lambda function arns that may be referenced by the dynamic data product infrastructure
 */
export interface StaticInfrastructureLambdas {
  validateS3PathLambdaArn: string;
  getCrawledTableDetailsArn: string;
  discoverTransformsArn: string;
  prepareNextTransformArn: string;
  prepareCtasQueryArn: string;
  athenaUtilitiesLambdaName: string;
  generatePIIQueryLambdaArn: string;
  getPiiQueryResultLambdaArn: string;
  prepareExternalImportLambdaArn: string;
  startDataImportLambdaArn: string;
}

export interface StaticInfrastructureGoogleCloudStorageConnector {
  importDataStateMachineArn: string;
}

export interface StaticInfrastructureGoogleBigQueryConnector {
  importDataStateMachineArn: string;
}

export interface StaticInfrastructureAnalyticsConnector {
  importDataStateMachineArn: string;
}

/**
 * References to static infrastructure for use in the dynamic data product infrastructure
 */
export interface StaticInfrastructure {
  /** The globally unique hash generated by core stack deployment for explicit naming */
  globalHash: string;

  counterTableName: string;
  glueDatabaseArn: string;
  glueKmsKeyArn: string;
  glueSecurityConfigurationName: string;
  eventBusName: string;
  glueCrawlerStateMachineName: string;
  scriptBucketName: string;
  dataBucketName: string;
  lambdas: StaticInfrastructureLambdas;
  executeAthenaQueryLambdaRoleArn: string;
  executeGeneratedQueryStateMachineArn: string;
  googleCloudStorageConnector: StaticInfrastructureGoogleCloudStorageConnector;
  googleBigQueryConnector: StaticInfrastructureGoogleBigQueryConnector;
  googleAnalyticsConnector: StaticInfrastructureAnalyticsConnector;
}

export interface TableDescriptor {
  readonly tableName: string;
  readonly classification: string;
}

/**
 * Define the crawled table details resulted as output from the dynamic data product infrastructure execution
 */
export interface CrawledTableDetail extends TableDescriptor {
  readonly tableNameSuffix: string;
  readonly location: string;
  readonly compressed: boolean;
  readonly recordCount: number;
  readonly averageRecordSize: number;
  readonly compressionType?: string;
  readonly columns: Array<{
    name: string;
    type: string;
    piiClassification?: string;
  }>;
  readonly identifiers: DataSetIdentifiers;
}
